{"expireTime":9007200905229170000,"key":"transformer-remark-markdown-ast-c57305001dd8c11a915116905c9ede27-gatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-unwrap-imagesgatsby-remark-imagesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"In Go, it is idiomatic to have explicit error handling. This means that many functions return an ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":98,"offset":98},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">error</code>","position":{"start":{"line":2,"column":98,"offset":98},"end":{"line":2,"column":105,"offset":105},"indent":[]}},{"type":"text","value":" in addition to the expected result (e.g. ","position":{"start":{"line":2,"column":105,"offset":105},"end":{"line":2,"column":147,"offset":147},"indent":[]}},{"type":"link","title":null,"url":"https://golang.org/pkg/strconv/#ParseBool","children":[{"type":"text","value":"strconv.ParseBool","position":{"start":{"line":2,"column":148,"offset":148},"end":{"line":2,"column":165,"offset":165},"indent":[]}}],"position":{"start":{"line":2,"column":147,"offset":147},"end":{"line":2,"column":209,"offset":209},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":2,"column":209,"offset":209},"end":{"line":2,"column":211,"offset":211},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":211,"offset":211},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Go code can also ","position":{"start":{"line":4,"column":1,"offset":213},"end":{"line":4,"column":18,"offset":230},"indent":[]}},{"type":"link","title":null,"url":"https://golang.org/doc/effective_go.html#panic","children":[{"type":"text","value":"panic","position":{"start":{"line":4,"column":19,"offset":231},"end":{"line":4,"column":24,"offset":236},"indent":[]}}],"position":{"start":{"line":4,"column":18,"offset":230},"end":{"line":4,"column":73,"offset":285},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":4,"column":73,"offset":285},"end":{"line":4,"column":78,"offset":290},"indent":[]}},{"type":"link","title":null,"url":"https://golang.org/doc/effective_go.html#recover","children":[{"type":"text","value":"recover","position":{"start":{"line":4,"column":79,"offset":291},"end":{"line":4,"column":86,"offset":298},"indent":[]}}],"position":{"start":{"line":4,"column":78,"offset":290},"end":{"line":4,"column":137,"offset":349},"indent":[]}},{"type":"text","value":", which is similar to throwing and catching exceptions in other languages. In Go, panic should be reserved for situations where the error is unrecoverable and it doesnâ€™t make sense for normal execution to continue.","position":{"start":{"line":4,"column":137,"offset":349},"end":{"line":4,"column":351,"offset":563},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":213},"end":{"line":4,"column":351,"offset":563},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If panics are supposed to be unrecoverable, then when does it make sense to recover from them in practice?","position":{"start":{"line":6,"column":1,"offset":565},"end":{"line":6,"column":107,"offset":671},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":565},"end":{"line":6,"column":107,"offset":671},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"By searching over the Go repository itself, we can find examples of when the Go authors use recover. In Go 1.10 there are:","position":{"start":{"line":8,"column":1,"offset":673},"end":{"line":8,"column":123,"offset":795},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":673},"end":{"line":8,"column":123,"offset":795},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/golang/go%24%40go1.10+-file:/vendor/+-file:%5Esrc/cmd/+-file:/testdata/+-file:%5Etest/+-file:%5Emisc/+-file:%5Edoc/+-file:_test.go%24++max:100+%22%3D+recover%28%29%22","children":[{"type":"text","value":"24 references to recover in packages","position":{"start":{"line":9,"column":4,"offset":799},"end":{"line":9,"column":40,"offset":835},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":798},"end":{"line":9,"column":264,"offset":1059},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":798},"end":{"line":9,"column":264,"offset":1059},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Many of the references occur in packages that parse text.","position":{"start":{"line":10,"column":7,"offset":1066},"end":{"line":10,"column":64,"offset":1123},"indent":[]}}],"position":{"start":{"line":10,"column":7,"offset":1066},"end":{"line":10,"column":64,"offset":1123},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":1064},"end":{"line":10,"column":64,"offset":1123},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"11 of these references were committed 6 to 8 years ago. Would these packages have been written the same way today?","position":{"start":{"line":11,"column":7,"offset":1130},"end":{"line":11,"column":121,"offset":1244},"indent":[]}}],"position":{"start":{"line":11,"column":7,"offset":1130},"end":{"line":11,"column":121,"offset":1244},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":1128},"end":{"line":11,"column":121,"offset":1244},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":1064},"end":{"line":11,"column":121,"offset":1244},"indent":[5]}}],"position":{"start":{"line":9,"column":1,"offset":796},"end":{"line":11,"column":121,"offset":1244},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/golang/go%24%40go1.10+file:%5Esrc/cmd+-file:/vendor/+-file:/testdata/+-file:_test.go%24+max:100+%22%3D+recover%28%29%22","children":[{"type":"text","value":"9 references to recover in commands","position":{"start":{"line":12,"column":4,"offset":1248},"end":{"line":12,"column":39,"offset":1283},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":1247},"end":{"line":12,"column":216,"offset":1460},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":1247},"end":{"line":12,"column":216,"offset":1460},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Most of the references recover from panics that happen when parsing text.","position":{"start":{"line":13,"column":7,"offset":1467},"end":{"line":13,"column":80,"offset":1540},"indent":[]}}],"position":{"start":{"line":13,"column":7,"offset":1467},"end":{"line":13,"column":80,"offset":1540},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":1465},"end":{"line":13,"column":80,"offset":1540},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":1465},"end":{"line":13,"column":80,"offset":1540},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":1245},"end":{"line":13,"column":80,"offset":1540},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/golang/go%24%40go1.10+file:_test.go%24+max:100+%22%3D+recover%28%29%22","children":[{"type":"text","value":"87 references to recover in test files","position":{"start":{"line":14,"column":4,"offset":1544},"end":{"line":14,"column":42,"offset":1582},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":1543},"end":{"line":14,"column":170,"offset":1710},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":1543},"end":{"line":14,"column":170,"offset":1710},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It is usually used to verify that a panic happened when it was intended to.","position":{"start":{"line":15,"column":7,"offset":1717},"end":{"line":15,"column":82,"offset":1792},"indent":[]}}],"position":{"start":{"line":15,"column":7,"offset":1717},"end":{"line":15,"column":82,"offset":1792},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":1715},"end":{"line":15,"column":82,"offset":1792},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":1715},"end":{"line":15,"column":82,"offset":1792},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":1541},"end":{"line":15,"column":82,"offset":1792},"indent":[1]}}],"position":{"start":{"line":9,"column":1,"offset":796},"end":{"line":15,"column":82,"offset":1792},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"One notable example of recover being used is in ","position":{"start":{"line":17,"column":1,"offset":1794},"end":{"line":17,"column":49,"offset":1842},"indent":[]}},{"type":"link","title":null,"url":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/golang/go%24%40go1.10+-file:_test.go+file:net/http+%22%3D+recover%28%29%22","children":[{"type":"text","value":"net/http","position":{"start":{"line":17,"column":50,"offset":1843},"end":{"line":17,"column":58,"offset":1851},"indent":[]}}],"position":{"start":{"line":17,"column":49,"offset":1842},"end":{"line":17,"column":190,"offset":1983},"indent":[]}},{"type":"text","value":". The connection struct recovers from panics so that a panic in a request handler doesnâ€™t crash the entire server. Interestingly enough, this might actually be an anti-pattern ","position":{"start":{"line":17,"column":190,"offset":1983},"end":{"line":17,"column":366,"offset":2159},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/grpc/grpc-go/issues/441#issuecomment-155588816","children":[{"type":"text","value":"according to David Symonds","position":{"start":{"line":17,"column":367,"offset":2160},"end":{"line":17,"column":393,"offset":2186},"indent":[]}}],"position":{"start":{"line":17,"column":366,"offset":2159},"end":{"line":17,"column":461,"offset":2254},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":17,"column":461,"offset":2254},"end":{"line":17,"column":462,"offset":2255},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":1794},"end":{"line":17,"column":462,"offset":2255},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Quietly catching a panic might leave the server in an inconsistent or incorrect state, so while crashing sucks at least youâ€™ll find out and can go fix the panic.","position":{"start":{"line":19,"column":3,"offset":2259},"end":{"line":19,"column":164,"offset":2420},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":2259},"end":{"line":19,"column":164,"offset":2420},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Weâ€™ve come to regret the net/http panic catching after running Go in production for a while. It sounded like a good idea at the time, but it has caused its own issues in practice.","position":{"start":{"line":21,"column":3,"offset":2425},"end":{"line":21,"column":182,"offset":2604},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":2425},"end":{"line":21,"column":182,"offset":2604},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If itâ€™s mission critical, youâ€™ll want some sort of frontend (e.g. nginx) that can quietly retry the request if a backend crashes. Thereâ€™s no way to completely rule out crashes in bad code, and catching panics in only the RPC server handler goroutines isnâ€™t going to stop them all.","position":{"start":{"line":23,"column":3,"offset":2609},"end":{"line":23,"column":283,"offset":2889},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":2609},"end":{"line":23,"column":283,"offset":2889},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":2257},"end":{"line":23,"column":283,"offset":2889},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It seems then that recover, like panic, should be used sparingly in non-test code.","position":{"start":{"line":25,"column":1,"offset":2891},"end":{"line":25,"column":83,"offset":2973},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":2891},"end":{"line":25,"column":83,"offset":2973},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":26,"column":1,"offset":2974}}}}