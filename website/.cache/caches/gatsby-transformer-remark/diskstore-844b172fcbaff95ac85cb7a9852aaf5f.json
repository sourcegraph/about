{"expireTime":9007200905229169000,"key":"transformer-remark-markdown-ast-ad3cb0bad03f52b8616cc9d85c591d64-gatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-unwrap-imagesgatsby-remark-imagesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"html","value":"<style>\n  .gatsby-highlight {\n    max-width: 100%;\n    width: 40rem;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  @media screen and (min-width: 800px) {\n    table {\n      width: 40rem;\n      border: none;\n    }\n  }\n  table {\n    border: none;\n  }\n  table th {\n    border: none;\n  }\n  table td {\n    padding: 4px;\n    border: none;\n  }\n  table td:nth-child(2n) {\n    text-align: right;\n  }\n  table th:nth-child(2n) {\n    text-align: right;\n  }\n  table tr:nth-child(2n) {\n    background-color: transparent;\n  }\n</style>","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":34,"column":9,"offset":526},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"I find code checkers like linters and lightweight static analyzers most\nvaluable when they teach me better ways to code in a language or framework. For\nexample, the Go ","position":{"start":{"line":36,"column":1,"offset":528},"end":{"line":38,"column":17,"offset":696},"indent":[1,1]}},{"type":"link","title":null,"url":"https://staticcheck.io/docs/checks#SA6005","children":[{"type":"text","value":"staticcheck","position":{"start":{"line":38,"column":18,"offset":697},"end":{"line":38,"column":29,"offset":708},"indent":[]}}],"position":{"start":{"line":38,"column":17,"offset":696},"end":{"line":38,"column":73,"offset":752},"indent":[]}},{"type":"text","value":" tool\nfinds expensive string comparisons like:","position":{"start":{"line":38,"column":73,"offset":752},"end":{"line":39,"column":41,"offset":798},"indent":[1]}}],"position":{"start":{"line":36,"column":1,"offset":528},"end":{"line":39,"column":41,"offset":798},"indent":[1,1,1]}},{"type":"html","lang":"go","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">ToLower</span><span class=\"token punctuation\">(</span>string1<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">ToLower</span><span class=\"token punctuation\">(</span>string2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":41,"column":1,"offset":800},"end":{"line":45,"column":4,"offset":875},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"and suggests instead:","position":{"start":{"line":47,"column":1,"offset":877},"end":{"line":47,"column":22,"offset":898},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":877},"end":{"line":47,"column":22,"offset":898},"indent":[]}},{"type":"html","lang":"go","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">EqualFold</span><span class=\"token punctuation\">(</span>string1<span class=\"token punctuation\">,</span> string2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":49,"column":1,"offset":900},"end":{"line":53,"column":4,"offset":958},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"These short-and-sweet replacements are a great way to learn framework\nidioms or library functions, like ","position":{"start":{"line":55,"column":1,"offset":960},"end":{"line":56,"column":35,"offset":1064},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">strings.EqualFold</code>","position":{"start":{"line":56,"column":35,"offset":1064},"end":{"line":56,"column":54,"offset":1083},"indent":[]}},{"type":"text","value":" in Go.","position":{"start":{"line":56,"column":54,"offset":1083},"end":{"line":56,"column":61,"offset":1090},"indent":[]}},{"type":"html","value":"<sup>","position":{"start":{"line":56,"column":61,"offset":1090},"end":{"line":56,"column":66,"offset":1095},"indent":[]}},{"type":"text","value":"1","position":{"start":{"line":56,"column":66,"offset":1095},"end":{"line":56,"column":67,"offset":1096},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":56,"column":67,"offset":1096},"end":{"line":56,"column":73,"offset":1102},"indent":[]}},{"type":"text","value":" And as a\ncodebase grows, small inefficiencies like this one, and inconsistencies\nopportunities compound. Code patterns creep in that affect readability and\nperformance—and ","position":{"start":{"line":56,"column":73,"offset":1102},"end":{"line":59,"column":17,"offset":1275},"indent":[1,1,1]}},{"type":"link","title":null,"url":"https://www.digitalocean.com/blog/how-to-efficiently-compare-strings-in-go/?","children":[{"type":"text","value":"it matters","position":{"start":{"line":59,"column":18,"offset":1276},"end":{"line":59,"column":28,"offset":1286},"indent":[]}}],"position":{"start":{"line":59,"column":17,"offset":1275},"end":{"line":59,"column":107,"offset":1365},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":59,"column":107,"offset":1365},"end":{"line":59,"column":108,"offset":1366},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":960},"end":{"line":59,"column":108,"offset":1366},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#Running-code-checks-quickly-easily-and-comprehensively","title":null,"children":[],"data":{"hProperties":{"aria-label":"Running code checks quickly easily and comprehensively permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]}},{"type":"text","value":"Running code checks quickly, easily, and comprehensively","position":{"start":{"line":61,"column":4,"offset":1371},"end":{"line":61,"column":60,"offset":1427},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1368},"end":{"line":61,"column":60,"offset":1427},"indent":[]},"data":{"id":"Running-code-checks-quickly-easily-and-comprehensively","htmlAttributes":{"id":"Running-code-checks-quickly-easily-and-comprehensively"},"hProperties":{"id":"Running-code-checks-quickly-easily-and-comprehensively","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"Tools like ","position":{"start":{"line":63,"column":1,"offset":1429},"end":{"line":63,"column":12,"offset":1440},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":63,"column":12,"offset":1440},"end":{"line":63,"column":25,"offset":1453},"indent":[]}},{"type":"text","value":" and linters need setting up: a local clone or project\nbuild on your machine, or a continuous integration (CI) or editor set up. When I\nlearn about patterns like ","position":{"start":{"line":63,"column":25,"offset":1453},"end":{"line":65,"column":27,"offset":1615},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">strings.EqualFold</code>","position":{"start":{"line":65,"column":27,"offset":1615},"end":{"line":65,"column":46,"offset":1634},"indent":[]}},{"type":"text","value":", I want to know where else they\nmight be lurking: in my code, in my team’s code, or in open source projects. To\ndo that I really need a lightweight workflow, not something that needs cloning\nrepositories, CI or editor setup. Too much hassle. What I’m really after is a\nnimble way to find patterns in a bunch of code over many repositories, quickly\nand comprehensively. Something that feels a lot more like searching code than\nrunning analyzers.","position":{"start":{"line":65,"column":46,"offset":1634},"end":{"line":71,"column":19,"offset":2079},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":63,"column":1,"offset":1429},"end":{"line":71,"column":19,"offset":2079},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Naturally, a plaintext search with ","position":{"start":{"line":73,"column":1,"offset":2081},"end":{"line":73,"column":36,"offset":2116},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">grep</code>","position":{"start":{"line":73,"column":36,"offset":2116},"end":{"line":73,"column":42,"offset":2122},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":73,"column":42,"offset":2122},"end":{"line":73,"column":43,"offset":2123},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"can","position":{"start":{"line":73,"column":44,"offset":2124},"end":{"line":73,"column":47,"offset":2127},"indent":[]}}],"position":{"start":{"line":73,"column":43,"offset":2123},"end":{"line":73,"column":48,"offset":2128},"indent":[]}},{"type":"text","value":" find snippets of ","position":{"start":{"line":73,"column":48,"offset":2128},"end":{"line":73,"column":66,"offset":2146},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">EqualFold</code>","position":{"start":{"line":73,"column":66,"offset":2146},"end":{"line":73,"column":77,"offset":2157},"indent":[]}},{"type":"text","value":"\ncalls. In practice though, this plaintext treatment can’t offer the fidelity of\ndedicated checkers that understand more about code structure and type\ninformation. But I believe there’s a midway. What about a lightweight wokflow\nwhere that ","position":{"start":{"line":73,"column":77,"offset":2157},"end":{"line":77,"column":12,"offset":2397},"indent":[1,1,1,1]}},{"type":"html","value":"<code class=\"language-text\">EqualFold</code>","position":{"start":{"line":77,"column":12,"offset":2397},"end":{"line":77,"column":23,"offset":2408},"indent":[]}},{"type":"text","value":" check is a simpler but comparably effective ","position":{"start":{"line":77,"column":23,"offset":2408},"end":{"line":77,"column":68,"offset":2453},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"search query","position":{"start":{"line":77,"column":69,"offset":2454},"end":{"line":77,"column":81,"offset":2466},"indent":[]}}],"position":{"start":{"line":77,"column":68,"offset":2453},"end":{"line":77,"column":82,"offset":2467},"indent":[]}},{"type":"text","value":"\nthat could completely eradicate all those inefficient comparisons in my\ncode, my organization’s code, or even all of open source code?","position":{"start":{"line":77,"column":82,"offset":2467},"end":{"line":79,"column":63,"offset":2602},"indent":[1,1]}}],"position":{"start":{"line":73,"column":1,"offset":2081},"end":{"line":79,"column":63,"offset":2602},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#Example-turning-code-checks-into-code-search-queries","title":null,"children":[],"data":{"hProperties":{"aria-label":"Example turning code checks into code search queries permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]}},{"type":"text","value":"Example: turning code checks into code search queries","position":{"start":{"line":81,"column":4,"offset":2607},"end":{"line":81,"column":57,"offset":2660},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":2604},"end":{"line":81,"column":57,"offset":2660},"indent":[]},"data":{"id":"Example-turning-code-checks-into-code-search-queries","htmlAttributes":{"id":"Example-turning-code-checks-into-code-search-queries"},"hProperties":{"id":"Example-turning-code-checks-into-code-search-queries","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"Earlier this year Sourcegraph introduced ","position":{"start":{"line":83,"column":1,"offset":2662},"end":{"line":83,"column":42,"offset":2703},"indent":[]}},{"type":"link","title":null,"url":"/blog/going-beyond-regular-expressions-with-structural-code-search/","children":[{"type":"text","value":"structural search","position":{"start":{"line":83,"column":43,"offset":2704},"end":{"line":83,"column":60,"offset":2721},"indent":[]}}],"position":{"start":{"line":83,"column":42,"offset":2703},"end":{"line":83,"column":130,"offset":2791},"indent":[]}},{"type":"text","value":"\nto search over code syntax. Structural search uses ","position":{"start":{"line":83,"column":130,"offset":2791},"end":{"line":84,"column":52,"offset":2843},"indent":[1]}},{"type":"link","title":null,"url":"https://comby.dev","children":[{"type":"text","value":"comby","position":{"start":{"line":84,"column":53,"offset":2844},"end":{"line":84,"column":58,"offset":2849},"indent":[]}}],"position":{"start":{"line":84,"column":52,"offset":2843},"end":{"line":84,"column":78,"offset":2869},"indent":[]}},{"type":"text","value":" to\nimplement a basic building block in traditional code checkers: it interprets\nprograms as concrete syntax trees, not just plaintext.\nUsing file filters and our new support for ","position":{"start":{"line":84,"column":78,"offset":2869},"end":{"line":87,"column":44,"offset":3048},"indent":[1,1,1]}},{"type":"html","value":"<code class=\"language-text\">or</code>","position":{"start":{"line":87,"column":44,"offset":3048},"end":{"line":87,"column":48,"offset":3052},"indent":[]}},{"type":"text","value":" clauses,\nit’s possible to write configurable code checks as\nself-contained search queries. Let’s explore this idea!","position":{"start":{"line":87,"column":48,"offset":3052},"end":{"line":89,"column":56,"offset":3168},"indent":[1,1]}}],"position":{"start":{"line":83,"column":1,"offset":2662},"end":{"line":89,"column":56,"offset":3168},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here’s a search query inspired by\n","position":{"start":{"line":91,"column":1,"offset":3170},"end":{"line":92,"column":1,"offset":3204},"indent":[1]}},{"type":"link","title":null,"url":"https://staticcheck.io/docs/checks#S1003","children":[{"type":"text","value":"a check","position":{"start":{"line":92,"column":2,"offset":3205},"end":{"line":92,"column":9,"offset":3212},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3204},"end":{"line":92,"column":52,"offset":3255},"indent":[]}},{"type":"text","value":" where ","position":{"start":{"line":92,"column":52,"offset":3255},"end":{"line":92,"column":59,"offset":3262},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">strings.Index</code>","position":{"start":{"line":92,"column":59,"offset":3262},"end":{"line":92,"column":74,"offset":3277},"indent":[]}},{"type":"text","value":"\ncomparisons can be replaced with ","position":{"start":{"line":92,"column":74,"offset":3277},"end":{"line":93,"column":34,"offset":3311},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">strings.Contains</code>","position":{"start":{"line":93,"column":34,"offset":3311},"end":{"line":93,"column":52,"offset":3329},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":93,"column":52,"offset":3329},"end":{"line":93,"column":53,"offset":3330},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3170},"end":{"line":93,"column":53,"offset":3330},"indent":[1,1]}},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">language<span class=\"token punctuation\">:</span>go\n<span class=\"token keyword\">not</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>test\n<span class=\"token keyword\">not</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>vendor\n<span class=\"token keyword\">not</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>Godeps\n\nstrings<span class=\"token punctuation\">.</span>Index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n<span class=\"token keyword\">or</span>\n\nstrings<span class=\"token punctuation\">.</span>Index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">or</span>\n\nstrings<span class=\"token punctuation\">.</span>Index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":95,"column":1,"offset":3332},"end":{"line":110,"column":4,"offset":3502},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This query matches all ","position":{"start":{"line":112,"column":1,"offset":3504},"end":{"line":112,"column":24,"offset":3527},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">.go</code>","position":{"start":{"line":112,"column":24,"offset":3527},"end":{"line":112,"column":29,"offset":3532},"indent":[]}},{"type":"text","value":" files, excluding file paths that contain ","position":{"start":{"line":112,"column":29,"offset":3532},"end":{"line":112,"column":71,"offset":3574},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">test</code>","position":{"start":{"line":112,"column":71,"offset":3574},"end":{"line":112,"column":77,"offset":3580},"indent":[]}},{"type":"text","value":",\n","position":{"start":{"line":112,"column":77,"offset":3580},"end":{"line":113,"column":1,"offset":3582},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">vendor</code>","position":{"start":{"line":113,"column":1,"offset":3582},"end":{"line":113,"column":9,"offset":3590},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":113,"column":9,"offset":3590},"end":{"line":113,"column":15,"offset":3596},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Godeps</code>","position":{"start":{"line":113,"column":15,"offset":3596},"end":{"line":113,"column":23,"offset":3604},"indent":[]}},{"type":"text","value":". It’s sensible to exclude these file paths if we\nwant to actually propose changes to a project (more on that later). The patterns\n","position":{"start":{"line":113,"column":23,"offset":3604},"end":{"line":115,"column":1,"offset":3735},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">strings.Index(..., ....)</code>","position":{"start":{"line":115,"column":1,"offset":3735},"end":{"line":115,"column":27,"offset":3761},"indent":[]}},{"type":"text","value":" match syntax of ","position":{"start":{"line":115,"column":27,"offset":3761},"end":{"line":115,"column":44,"offset":3778},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">strings.Index</code>","position":{"start":{"line":115,"column":44,"offset":3778},"end":{"line":115,"column":59,"offset":3793},"indent":[]}},{"type":"text","value":" calls, and the ","position":{"start":{"line":115,"column":59,"offset":3793},"end":{"line":115,"column":75,"offset":3809},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">...</code>","position":{"start":{"line":115,"column":75,"offset":3809},"end":{"line":115,"column":80,"offset":3814},"indent":[]}},{"type":"text","value":"\nellipses are special placeholders that match at least two arguments.","position":{"start":{"line":115,"column":80,"offset":3814},"end":{"line":116,"column":69,"offset":3883},"indent":[1]}},{"type":"html","value":"<sup>","position":{"start":{"line":116,"column":69,"offset":3883},"end":{"line":116,"column":74,"offset":3888},"indent":[]}},{"type":"text","value":"2","position":{"start":{"line":116,"column":74,"offset":3888},"end":{"line":116,"column":75,"offset":3889},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":116,"column":75,"offset":3889},"end":{"line":116,"column":81,"offset":3895},"indent":[]}},{"type":"text","value":"\nThe ","position":{"start":{"line":116,"column":81,"offset":3895},"end":{"line":117,"column":5,"offset":3900},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">or</code>","position":{"start":{"line":117,"column":5,"offset":3900},"end":{"line":117,"column":9,"offset":3904},"indent":[]}},{"type":"text","value":" keyword separates individual patterns.","position":{"start":{"line":117,"column":9,"offset":3904},"end":{"line":117,"column":48,"offset":3943},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":3504},"end":{"line":117,"column":48,"offset":3943},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We can search over the top 100 Go repositories on GitHub (by stars) those by\nadding ","position":{"start":{"line":119,"column":1,"offset":3945},"end":{"line":120,"column":8,"offset":4029},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">repogroup:go-gh-100</code>","position":{"start":{"line":120,"column":8,"offset":4029},"end":{"line":120,"column":29,"offset":4050},"indent":[]}},{"type":"text","value":" to the query. Have a look at some of the results:","position":{"start":{"line":120,"column":29,"offset":4050},"end":{"line":120,"column":79,"offset":4100},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":3945},"end":{"line":120,"column":79,"offset":4100},"indent":[1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://sourcegraph.com/search/console?q=repogroup%3Ago-gh-100%0Alanguage%3Ago%0Anot%20file%3Atest%0Anot%20file%3Avendor%0Anot%20file%3AGodeps%0Aindex%3Aonly%0A%0A%2F%2F%20Find%20strings.Index%20calls%20that%20can%20be%20replaced%20by%20strings.Contains%0A%2F%2F%20See%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1003%0A%0Astrings.Index(...%2C%20...)%20%3E%20-1%0A%0Aor%0A%0Astrings.Index(...%2C%20...)%20%3E%3D%200%0A%0Aor%0A%0Astrings.Index(...%2C%20...)%20!%3D%20-1","children":[{"type":"text","value":"🔘 Find ways to improve code in popular Go projects ↗","position":{"start":{"line":122,"column":2,"offset":4103},"end":{"line":122,"column":55,"offset":4156},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":4102},"end":{"line":122,"column":532,"offset":4633},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":122,"column":532,"offset":4633},"end":{"line":123,"column":1,"offset":4634},"indent":[1]}},{"type":"html","value":"<br />","position":{"start":{"line":123,"column":1,"offset":4634},"end":{"line":123,"column":7,"offset":4640},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":123,"column":7,"offset":4640},"end":{"line":124,"column":1,"offset":4641},"indent":[1]}},{"type":"html","value":"<sup>","position":{"start":{"line":124,"column":1,"offset":4641},"end":{"line":124,"column":6,"offset":4646},"indent":[]}},{"type":"text","value":"Side note: our multiline query editor is in a proof-of-concept phase.","position":{"start":{"line":124,"column":6,"offset":4646},"end":{"line":124,"column":75,"offset":4715},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":124,"column":75,"offset":4715},"end":{"line":124,"column":81,"offset":4721},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":4102},"end":{"line":124,"column":81,"offset":4721},"indent":[1,1]}},{"type":"html","value":"<img src=\"https://storage.googleapis.com/sourcegraph-assets/about.sourcegraph.com/blog/2020/strings-dot-index-hits.png\" style=\"width: 40rem\">","position":{"start":{"line":126,"column":1,"offset":4723},"end":{"line":126,"column":142,"offset":4864},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<sup>","position":{"start":{"line":128,"column":1,"offset":4866},"end":{"line":128,"column":6,"offset":4871},"indent":[]}},{"type":"text","value":"Some search hits in projects like Go and Kubernetes where a simpler ","position":{"start":{"line":128,"column":6,"offset":4871},"end":{"line":128,"column":74,"offset":4939},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">strings.Contains</code>","position":{"start":{"line":128,"column":74,"offset":4939},"end":{"line":128,"column":92,"offset":4957},"indent":[]}},{"type":"text","value":" can be used instead.","position":{"start":{"line":128,"column":92,"offset":4957},"end":{"line":128,"column":113,"offset":4978},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":128,"column":113,"offset":4978},"end":{"line":128,"column":119,"offset":4984},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":4866},"end":{"line":128,"column":119,"offset":4984},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The query finds matches in some of the most popular Go projects in a\ncouple of seconds. An exhaustive search shows that there are more than 10 matches\nat the time of writing. For this flavor of syntactic change, I have a good sense\nthat these are real hits of code that we can fix up.","position":{"start":{"line":130,"column":1,"offset":4986},"end":{"line":133,"column":53,"offset":5270},"indent":[1,1,1]}}],"position":{"start":{"line":130,"column":1,"offset":4986},"end":{"line":133,"column":53,"offset":5270},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#Turning-more-code-checks-into-search-queries","title":null,"children":[],"data":{"hProperties":{"aria-label":"Turning more code checks into search queries permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]}},{"type":"text","value":"Turning more code checks into search queries","position":{"start":{"line":136,"column":4,"offset":5276},"end":{"line":136,"column":48,"offset":5320},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":5273},"end":{"line":136,"column":48,"offset":5320},"indent":[]},"data":{"id":"Turning-more-code-checks-into-search-queries","htmlAttributes":{"id":"Turning-more-code-checks-into-search-queries"},"hProperties":{"id":"Turning-more-code-checks-into-search-queries","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"Because structural search only looks at syntax, it can’t yet operate at the\nlevel of a tool like ","position":{"start":{"line":138,"column":1,"offset":5322},"end":{"line":139,"column":22,"offset":5419},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":139,"column":22,"offset":5419},"end":{"line":139,"column":35,"offset":5432},"indent":[]}},{"type":"text","value":", which knows more about static properties\nlike type information and variable scope to implement checks. At the same time,\n","position":{"start":{"line":139,"column":35,"offset":5432},"end":{"line":141,"column":1,"offset":5555},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":141,"column":1,"offset":5555},"end":{"line":141,"column":14,"offset":5568},"indent":[]}},{"type":"text","value":" isn’t a search tool, it’s an entire toolset that includes a suite\nof pre-written, high-precision checks that’s very effective in certain\nworkflows, like CI. The question is not necessarily whether a search tool can\nachieve parity with a tool like ","position":{"start":{"line":141,"column":14,"offset":5568},"end":{"line":144,"column":33,"offset":5816},"indent":[1,1,1]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":144,"column":33,"offset":5816},"end":{"line":144,"column":46,"offset":5829},"indent":[]}},{"type":"text","value":". But given the overlap with\nnow-expressible search queries, I wanted to know how this search workflow stacks\nup: how far can we push structural code search to find similarly ","position":{"start":{"line":144,"column":46,"offset":5829},"end":{"line":146,"column":66,"offset":6004},"indent":[1,1]}},{"type":"emphasis","children":[{"type":"text","value":"actionable","position":{"start":{"line":146,"column":67,"offset":6005},"end":{"line":146,"column":77,"offset":6015},"indent":[]}}],"position":{"start":{"line":146,"column":66,"offset":6004},"end":{"line":146,"column":78,"offset":6016},"indent":[]}},{"type":"text","value":"\ncode checks? I.e., checks that match real cases of code waiting to be improved,\nminus the hassle.","position":{"start":{"line":146,"column":78,"offset":6016},"end":{"line":148,"column":18,"offset":6114},"indent":[1,1]}}],"position":{"start":{"line":138,"column":1,"offset":5322},"end":{"line":148,"column":18,"offset":6114},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#Approach","title":null,"children":[],"data":{"hProperties":{"aria-label":"Approach permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]}},{"type":"text","value":"Approach","position":{"start":{"line":150,"column":5,"offset":6120},"end":{"line":150,"column":13,"offset":6128},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":6116},"end":{"line":150,"column":13,"offset":6128},"indent":[]},"data":{"id":"Approach","htmlAttributes":{"id":"Approach"},"hProperties":{"id":"Approach","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"So, taking inspiration from ","position":{"start":{"line":152,"column":1,"offset":6130},"end":{"line":152,"column":29,"offset":6158},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":152,"column":29,"offset":6158},"end":{"line":152,"column":42,"offset":6171},"indent":[]}},{"type":"text","value":", I wanted to see how many of its\nchecks translate to search queries that I could have high confidence in (i.e.,\nall patterns find legitimate issues; zero or very-near-zero false positives). I\nchose to look at ","position":{"start":{"line":152,"column":42,"offset":6171},"end":{"line":155,"column":18,"offset":6381},"indent":[1,1,1]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":155,"column":18,"offset":6381},"end":{"line":155,"column":31,"offset":6394},"indent":[]}},{"type":"text","value":" for its clear documentation, which made it easy\nto find examples.","position":{"start":{"line":155,"column":31,"offset":6394},"end":{"line":156,"column":18,"offset":6460},"indent":[1]}},{"type":"html","value":"<sup>","position":{"start":{"line":156,"column":18,"offset":6460},"end":{"line":156,"column":23,"offset":6465},"indent":[]}},{"type":"text","value":"3","position":{"start":{"line":156,"column":23,"offset":6465},"end":{"line":156,"column":24,"offset":6466},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":156,"column":24,"offset":6466},"end":{"line":156,"column":30,"offset":6472},"indent":[]}},{"type":"text","value":" I ran my search queries against ","position":{"start":{"line":156,"column":30,"offset":6472},"end":{"line":156,"column":63,"offset":6505},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":156,"column":63,"offset":6505},"end":{"line":156,"column":76,"offset":6518},"indent":[]}},{"type":"text","value":"’s\nown test files to check that they don’t match unintended patterns (false\npositives) and don’t miss real patterns (false negatives). Each check may have\nmore than one syntactic ","position":{"start":{"line":156,"column":76,"offset":6518},"end":{"line":159,"column":25,"offset":6697},"indent":[1,1,1]}},{"type":"emphasis","children":[{"type":"text","value":"variant","position":{"start":{"line":159,"column":26,"offset":6698},"end":{"line":159,"column":33,"offset":6705},"indent":[]}}],"position":{"start":{"line":159,"column":25,"offset":6697},"end":{"line":159,"column":34,"offset":6706},"indent":[]}},{"type":"text","value":", so I tried to implement patterns for as many\nvariants as I could find in tests. It’s a neat exercise to develop patterns\nagainst the reference tests and discover which variants to cover, all in a\nself-contained search webapp. Here’s an example where the query matches all the\ntrue hits in the test file, annotated with ","position":{"start":{"line":159,"column":34,"offset":6706},"end":{"line":163,"column":44,"offset":7027},"indent":[1,1,1,1]}},{"type":"html","value":"<code class=\"language-text\">// want strings.Contains ...</code>","position":{"start":{"line":163,"column":44,"offset":7027},"end":{"line":163,"column":74,"offset":7057},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":163,"column":74,"offset":7057},"end":{"line":163,"column":75,"offset":7058},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":6130},"end":{"line":163,"column":75,"offset":7058},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<img src=\"https://storage.googleapis.com/sourcegraph-assets/about.sourcegraph.com/blog/2020/multiline-query-editor.png\">","position":{"start":{"line":165,"column":1,"offset":7060},"end":{"line":165,"column":121,"offset":7180},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://sourcegraph.com/search/console?q=repo%3A%5Egithub%5C.com%2Fdominikh%2Fgo-tools%24%20%0Alang%3Ago%0Afile%3Atest%0A%0Astrings.IndexRune(...%2C%20...)%20%3E%20-1%20or%0Astrings.IndexRune(...%2C%20...)%20%3E%3D%200%20or%0Astrings.IndexRune(...%2C%20...)%20!%3D%20-1%20or%0Astrings.IndexRune(...%2C%20...)%20%3D%3D%20-1%20or%0Astrings.IndexRune(...%2C%20...)%20%3C%200%20or%0Astrings.IndexAny(...%2C%20...)%20%3E%20-1%20or%0Astrings.IndexAny(...%2C%20...)%20%3E%3D%200%20or%0Astrings.IndexAny(...%2C%20...)%20!%3D%20-1%20or%0Astrings.IndexAny(...%2C%20...)%20%3D%3D%20-1%20or%0Astrings.IndexAny(...%2C%20...)%20%3C%200%20or%0Astrings.Index(...%2C%20...)%20%3E%20-1%20or%0Astrings.Index(...%2C%20...)%20%3E%3D%200%20or%0Astrings.Index(...%2C%20...)%20!%3D%20-1%20or%0Astrings.Index(...%2C%20...)%20%3D%3D%20-1%20or%0Astrings.Index(...%2C%20...)%20%3C%200%0A","children":[{"type":"text","value":"🔘 Example query to match known patterns in test files↗","position":{"start":{"line":167,"column":2,"offset":7183},"end":{"line":167,"column":57,"offset":7238},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":7182},"end":{"line":167,"column":919,"offset":8100},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":7182},"end":{"line":167,"column":919,"offset":8100},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using the test files isn’t a guarantee that I’ve implemented all the checks or\nthat it’s entirely precise, but it adds a lot more confidence than inferring\npatterns only from documentation.","position":{"start":{"line":169,"column":1,"offset":8102},"end":{"line":171,"column":34,"offset":8291},"indent":[1,1]}}],"position":{"start":{"line":169,"column":1,"offset":8102},"end":{"line":171,"column":34,"offset":8291},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#Results","title":null,"children":[],"data":{"hProperties":{"aria-label":"Results permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]}},{"type":"text","value":"Results","position":{"start":{"line":173,"column":5,"offset":8297},"end":{"line":173,"column":12,"offset":8304},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":8293},"end":{"line":173,"column":12,"offset":8304},"indent":[]},"data":{"id":"Results","htmlAttributes":{"id":"Results"},"hProperties":{"id":"Results","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"Without making any claims about completeness, I was able to implement\nat least one variant for 20 out of 34 checks that I feel confident\nabout. I relied only on patterns in ","position":{"start":{"line":175,"column":1,"offset":8306},"end":{"line":177,"column":37,"offset":8479},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":177,"column":37,"offset":8479},"end":{"line":177,"column":50,"offset":8492},"indent":[]}},{"type":"text","value":"’s test data to discover syntactic\nvariants for checks, so I don’t know if I covered all the patterns that\n","position":{"start":{"line":177,"column":50,"offset":8492},"end":{"line":179,"column":1,"offset":8599},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":179,"column":1,"offset":8599},"end":{"line":179,"column":14,"offset":8612},"indent":[]}},{"type":"text","value":" implements in its code.","position":{"start":{"line":179,"column":14,"offset":8612},"end":{"line":179,"column":38,"offset":8636},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":8306},"end":{"line":179,"column":38,"offset":8636},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The majority of checks that I couldn’t write required type information to\nimplement correctly (13 of 34). Other checks I couldn’t write required more\ncomplex syntax matching rules (8 of 34). This table roughly quantifies the\nexpressive needs for implementing checks:","position":{"start":{"line":181,"column":1,"offset":8638},"end":{"line":184,"column":42,"offset":8904},"indent":[1,1,1]}}],"position":{"start":{"line":181,"column":1,"offset":8638},"end":{"line":184,"column":42,"offset":8904},"indent":[1,1,1]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":186,"column":3,"offset":8908},"end":{"line":186,"column":14,"offset":8919},"indent":[]}}],"position":{"start":{"line":186,"column":3,"offset":8908},"end":{"line":186,"column":35,"offset":8940},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"# of checks","position":{"start":{"line":186,"column":38,"offset":8943},"end":{"line":186,"column":49,"offset":8954},"indent":[]}}],"position":{"start":{"line":186,"column":38,"offset":8943},"end":{"line":186,"column":49,"offset":8954},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":8906},"end":{"line":186,"column":51,"offset":8956},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Total","position":{"start":{"line":188,"column":3,"offset":9010},"end":{"line":188,"column":8,"offset":9015},"indent":[]}}],"position":{"start":{"line":188,"column":3,"offset":9010},"end":{"line":188,"column":35,"offset":9042},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"34","position":{"start":{"line":188,"column":38,"offset":9045},"end":{"line":188,"column":40,"offset":9047},"indent":[]}}],"position":{"start":{"line":188,"column":38,"offset":9045},"end":{"line":188,"column":49,"offset":9056},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":9008},"end":{"line":188,"column":51,"offset":9058},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Works (at least one variant)","position":{"start":{"line":189,"column":3,"offset":9061},"end":{"line":189,"column":31,"offset":9089},"indent":[]}}],"position":{"start":{"line":189,"column":3,"offset":9061},"end":{"line":189,"column":35,"offset":9093},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"20","position":{"start":{"line":189,"column":38,"offset":9096},"end":{"line":189,"column":40,"offset":9098},"indent":[]}}],"position":{"start":{"line":189,"column":38,"offset":9096},"end":{"line":189,"column":49,"offset":9107},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":9059},"end":{"line":189,"column":51,"offset":9109},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Works (all variants)","position":{"start":{"line":190,"column":3,"offset":9112},"end":{"line":190,"column":23,"offset":9132},"indent":[]}}],"position":{"start":{"line":190,"column":3,"offset":9112},"end":{"line":190,"column":35,"offset":9144},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"11","position":{"start":{"line":190,"column":38,"offset":9147},"end":{"line":190,"column":40,"offset":9149},"indent":[]}}],"position":{"start":{"line":190,"column":38,"offset":9147},"end":{"line":190,"column":49,"offset":9158},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":9110},"end":{"line":190,"column":51,"offset":9160},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Needs type info","position":{"start":{"line":191,"column":3,"offset":9163},"end":{"line":191,"column":18,"offset":9178},"indent":[]}}],"position":{"start":{"line":191,"column":3,"offset":9163},"end":{"line":191,"column":35,"offset":9195},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"13","position":{"start":{"line":191,"column":38,"offset":9198},"end":{"line":191,"column":40,"offset":9200},"indent":[]}}],"position":{"start":{"line":191,"column":38,"offset":9198},"end":{"line":191,"column":49,"offset":9209},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":9161},"end":{"line":191,"column":51,"offset":9211},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Needs additional syntax matching","position":{"start":{"line":192,"column":3,"offset":9214},"end":{"line":192,"column":35,"offset":9246},"indent":[]}}],"position":{"start":{"line":192,"column":3,"offset":9214},"end":{"line":192,"column":35,"offset":9246},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"8","position":{"start":{"line":192,"column":38,"offset":9249},"end":{"line":192,"column":39,"offset":9250},"indent":[]}}],"position":{"start":{"line":192,"column":38,"offset":9249},"end":{"line":192,"column":49,"offset":9260},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":9212},"end":{"line":192,"column":51,"offset":9262},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":8906},"end":{"line":192,"column":51,"offset":9262},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"html","value":"<sup>","position":{"start":{"line":194,"column":1,"offset":9264},"end":{"line":194,"column":6,"offset":9269},"indent":[]}},{"type":"text","value":"Note that some checks require type info ","position":{"start":{"line":194,"column":6,"offset":9269},"end":{"line":194,"column":46,"offset":9309},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"and","position":{"start":{"line":194,"column":47,"offset":9310},"end":{"line":194,"column":50,"offset":9313},"indent":[]}}],"position":{"start":{"line":194,"column":46,"offset":9309},"end":{"line":194,"column":51,"offset":9314},"indent":[]}},{"type":"text","value":" additional syntax matching.\nAlso, one working variant for a check may not require type info, but another\nvariant for the same check may. I.e., the values overlap and do not sum to\nTotal.","position":{"start":{"line":194,"column":51,"offset":9314},"end":{"line":197,"column":7,"offset":9501},"indent":[1,1,1]}},{"type":"html","value":"</sup>","position":{"start":{"line":197,"column":7,"offset":9501},"end":{"line":197,"column":13,"offset":9507},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":9264},"end":{"line":197,"column":13,"offset":9507},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can see and run the final query here:","position":{"start":{"line":199,"column":1,"offset":9509},"end":{"line":199,"column":42,"offset":9550},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":9509},"end":{"line":199,"column":42,"offset":9550},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://sourcegraph.com/search/console?q=repogroup%3Ago-gh-100%0Alang%3Ago%0Anot%20file%3Atest%0Anot%20file%3Avendor%0Anot%20file%3AGodeps%0Aindex%3Aonly%0A%0A%2F%2F%20Inefficient%20string%20comparison%20with%20strings.ToLower%20or%20strings.ToUpper%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23SA6005%0Aif%20strings.ToLower(...)%20%3D%3D%20strings.ToLower(...)%20or%0Aif%20strings.ToLower(...)%20!%3D%20strings.ToLower(...)%20or%0Aif%20strings.ToUpper(...)%20%3D%3D%20strings.ToUpper(...)%20or%0Aif%20strings.ToUpper(...)%20!%3D%20strings.ToUpper(...)%20or%0A%0A%2F%2F%20Replace%20call%20to%20strings.Index%20with%20strings.Contains%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1003%0Astrings.IndexRune(...%2C%20...)%20%3E%20-1%20or%0Astrings.IndexRune(...%2C%20...)%20%3E%3D%200%20or%0Astrings.IndexRune(...%2C%20...)%20!%3D%20-1%20or%0Astrings.IndexRune(...%2C%20...)%20%3D%3D%20-1%20or%0Astrings.IndexRune(...%2C%20...)%20%3C%200%20or%0Astrings.IndexAny(...%2C%20...)%20%3E%20-1%20or%0Astrings.IndexAny(...%2C%20...)%20%3E%3D%200%20or%0Astrings.IndexAny(...%2C%20...)%20!%3D%20-1%20or%0Astrings.IndexAny(...%2C%20...)%20%3D%3D%20-1%20or%0Astrings.IndexAny(...%2C%20...)%20%3C%200%20or%0Astrings.Index(...%2C%20...)%20%3E%20-1%20or%0Astrings.Index(...%2C%20...)%20%3E%3D%200%20or%0Astrings.Index(...%2C%20...)%20!%3D%20-1%20or%0Astrings.Index(...%2C%20...)%20%3D%3D%20-1%20or%0Astrings.Index(...%2C%20...)%20%3C%200%20or%0A%0A%2F%2F%20Replace%20call%20to%20bytes.Compare%20with%20bytes.Equal%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1004%0Abytes.Compare(...%2C%20...)%20%3D%3D%200%20or%0Abytes.Compare(...%2C%20...)%20!%3D%200%20or%0A%0A%2F%2F%20Drop%20unnecessary%20use%20of%20the%20blank%20identifier%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1005%0Afor%20%3A%5B~_%5D%2C%20%3A%5B~_%5D%20%3D%20range%20or%0Afor%20%3A%5B~_%5D%20%3D%20range%20or%0A%0A%2F%2F%20Use%20for%20%7B%20...%20%7D%20for%20infinite%20loops%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1006%0Afor%20true%20%7B...%7D%20or%0A%0A%2F%2F%20Omit%20default%20slice%20index%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1010%0A%3A%5Bs.%5D%5B%3Alen(%3A%5Bs%5D)%5D%20or%0A%0A%2F%2F%20Replace%20time.Now().Sub(x)%20with%20time.Since(x)%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1012%0Atime.Now().Sub(...)%20or%0A%0A%2F%2F%20Use%20copy%20for%20sliding%20elements%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1018%0Afor%20%3A%5Bi.%5D%20%3A%3D%200%3B%20%3A%5Bi.%5D%20%3C%20%3A%5Bn.%5D%3B%20%3A%5Bi.%5D%20%20%20%7B%0A%20%20%3A%5Bbs.%5D%5B%3A%5Bi%5D%5D%20%3D%20%3A%5Bbs.%5D%5B%3A%5Boffset.%5D%20%3A%5Bi.%5D%5D%0A%7D%0A%0Aor%0A%0A%2F%2F%20Simplify%20make%20call%20by%20omitting%20redundant%20arguments%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1019%0Amake(...%2C%20%3A%5Bx%5D%2C%20%3A%5Bx%5D)%20or%20%0Amake(map%5B%3A%5B%5Bw%5D%5D%5D%3A%5B%5Bw%5D%5D%2C%200)%20or%0Amake(chan%20int%2C%200)%20or%0A%0A%2F%2F%20Omit%20redundant%20nil%20check%20in%20type%20assertion%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1020%0Aif%20%3A%5B_.%5D%2C%20ok%20%3A%3D%20%3A%5Bi.%5D.(%3A%5BT%5D)%3B%20ok%20%26%26%20%3A%5Bi.%5D%20!%3D%20nil%20%7B%20...%20%7D%20or%0Aif%20%3A%5B_.%5D%2C%20ok%20%3A%3D%20%3A%5Bi.%5D.(%3A%5BT%5D)%3B%20%3A%5Bi.%5D%20!%3D%20nil%20%26%26%20ok%20%7B%20...%20%7D%20or%0A%0Aif%20%3A%5Bi.%5D%20!%3D%20nil%20%7B%0A%20%20if%20%3A%5B_.%5D%2C%20ok%20%3A%3D%20%3A%5Bi.%5D.(%3A%5BT%5D)%3B%20ok%20%7B%20...%20%7D%0A%7D%0A%0Aor%0A%0A%2F%2F%20Omit%20redundant%20control%20flow%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1023%0Afunc%20%3A%5Bfn.%5D(...)%20%7B...%20return%20%7D%20%20or%20%0Afunc()%20%7B...%20return%20%7D%20or%0A%0A%2F%2F%20Replace%20x.Sub(time.Now())%20with%20time.Until(x)%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1024%0A.Sub(time.Now())%20or%0A%0A%2F%2F%20Don%27t%20use%20fmt.Sprintf(%22%25s%22%2C%20x)%20unnecessarily%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1025%0Afmt.Println(%22%25s%22%2C%20%22...%22)%20or%0A%0A%2F%2F%20Simplify%20error%20construction%20with%20fmt.Errorf%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1028%0Aerrors.New(fmt.Sprintf(...))%20or%0A%0A%2F%2F%20Range%20over%20the%20string%20directly%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1029%0Afor%20%3A%5B~_%5D%2C%20%3A%5B_.%5D%20%3A%3D%20range%20%5B%5Drune(...)%20or%0A%0A%2F%2F%20Use%20sort.Ints(x)%2C%20sort.Float64s(x)%2C%20and%20sort.Strings(x)%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1032%0Asort.Sort(sort.IntSlice(...))%20or%0Asort.Sort(sort.Float64Slice(...))%20or%0Asort.Sort(sort.StringSlice(...))%20or%0A%0A%2F%2F%20Redundant%20call%20to%20net%2Fhttp.CanonicalHeaderKey%20in%20method%20call%20on%20net%2Fhttp.Header%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1035%0Aheaders.Add(http.CanonicalHeaderKey(...)%2C%20...)%20or%0Aheaders.Del(http.CanonicalHeaderKey(...))%20or%0Aheaders.Get(http.CanonicalHeaderKey(...))%20or%0Aheaders.Set(http.CanonicalHeaderKey(...)%2C%20...)%20or%0A%0A%2F%2F%20Unnecessary%20guard%20around%20map%20access%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1036%0Aif%20%3A%5B~_%5D%2C%20ok%20%3A%3D%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%3B%20ok%20%7B%0A%20%20%20%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%2B%3D%20%3A%5Bx.%5D%0A%7D%20else%20%7B%0A%20%20%20%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20%3A%5Bx.%5D%0A%7D%0A%0Aor%0A%0Aif%20%3A%5B~_%5D%2C%20ok%20%3A%3D%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%3B%20ok%20%7B%0A%20%20%20%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%2B%2B%0A%7D%20else%20%7B%0A%20%20%20%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%201%0A%7D%0A%0Aor%0A%0Aif%20%3A%5B~_%5D%2C%20ok%20%3A%3D%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%3B%20ok%20%7B%0A%09%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20append(%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%2C%20%22%3A%5Bv1%5D%22)%0A%7D%20else%20%7B%0A%09%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20%5B%5Dstring%7B%22%3A%5Bv1%5D%22%7D%0A%7D%0A%0Aor%0A%0Aif%20%3A%5B~_%5D%2C%20ok%20%3A%3D%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%3B%20ok%20%7B%0A%09%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20append(%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%2C%20%22%3A%5Bv1%5D%22%2C%20%22%3A%5Bv2%5D%22)%0A%7D%20else%20%7B%0A%09%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20%5B%5Dstring%7B%22%3A%5Bv1%5D%22%2C%20%22%3A%5Bv2%5D%22%7D%0A%7D%0A%0Aor%0A%0A%2F%2F%20Elaborate%20way%20of%20sleeping%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1037%0Aselect%20%7B%0A%09case%20%3C-time.After(0)%3A%0A%7D%0A%0Aor%0A%0A%2F%2F%20Unnecessarily%20complex%20way%20of%20printing%20formatted%20string%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1038%0Afmt.Print(fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Println(fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Fprint(nil%2C%20fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Fprintln(nil%2C%20fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Sprint(fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Sprintln(fmt.Sprintf(%22...%22%2C%20...))%20or%20%0A%0A%2F%2F%20Unnecessary%20use%20of%20fmt.Sprint%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1039%0Afmt.Sprintf(%22%25s%22%2C%20%22...%22)","children":[{"type":"text","value":"🔘 Run the query for all code checks on popular Go projects ↗","position":{"start":{"line":201,"column":2,"offset":9553},"end":{"line":201,"column":63,"offset":9614},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":9552},"end":{"line":201,"column":7177,"offset":16728},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":7177,"offset":16728},"end":{"line":202,"column":1,"offset":16729},"indent":[1]}},{"type":"html","value":"<br />","position":{"start":{"line":202,"column":1,"offset":16729},"end":{"line":202,"column":7,"offset":16735},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":7,"offset":16735},"end":{"line":203,"column":1,"offset":16736},"indent":[1]}},{"type":"html","value":"<sup>","position":{"start":{"line":203,"column":1,"offset":16736},"end":{"line":203,"column":6,"offset":16741},"indent":[]}},{"type":"text","value":"Side note: patterns run in order and search stops after finding at least 30 matches. Feel free to delete some patterns to see others in action.","position":{"start":{"line":203,"column":6,"offset":16741},"end":{"line":203,"column":149,"offset":16884},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":203,"column":149,"offset":16884},"end":{"line":203,"column":155,"offset":16890},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":9552},"end":{"line":203,"column":155,"offset":16890},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It was tempting to compare more directly by downloading the\n100 Go repositories to disk, running ","position":{"start":{"line":205,"column":1,"offset":16892},"end":{"line":206,"column":38,"offset":16989},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":206,"column":38,"offset":16989},"end":{"line":206,"column":51,"offset":17002},"indent":[]}},{"type":"text","value":", and comparing matches.\nFor ","position":{"start":{"line":206,"column":51,"offset":17002},"end":{"line":207,"column":5,"offset":17031},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":207,"column":5,"offset":17031},"end":{"line":207,"column":18,"offset":17044},"indent":[]}},{"type":"text","value":" to be effective, the project typically needs to be built first\n(my experience was that running ","position":{"start":{"line":207,"column":18,"offset":17044},"end":{"line":208,"column":33,"offset":17140},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":208,"column":33,"offset":17140},"end":{"line":208,"column":46,"offset":17153},"indent":[]}},{"type":"text","value":" on individual files can be\nhit-and-miss, and understandably so). I didn’t like the idea of doing all that\nwork, so I punted. That’s really the takeaway of these results: many useful checks can fit into\na lightweight search workflow that scales and generalizes to a lot of projects, without\nad-hoc setup for project builds and dedicated tools.","position":{"start":{"line":208,"column":46,"offset":17153},"end":{"line":212,"column":53,"offset":17496},"indent":[1,1,1,1]}},{"type":"html","value":"<sup>","position":{"start":{"line":212,"column":53,"offset":17496},"end":{"line":212,"column":58,"offset":17501},"indent":[]}},{"type":"text","value":"5","position":{"start":{"line":212,"column":58,"offset":17501},"end":{"line":212,"column":59,"offset":17502},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":212,"column":59,"offset":17502},"end":{"line":212,"column":65,"offset":17508},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":16892},"end":{"line":212,"column":65,"offset":17508},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Extending search queries to access static properties like type information is a also\nnatural extension for writing better code checks, and an area of ","position":{"start":{"line":214,"column":1,"offset":17510},"end":{"line":215,"column":66,"offset":17660},"indent":[1]}},{"type":"link","title":null,"url":"https://docs.sourcegraph.com/code_intelligence","children":[{"type":"text","value":"code intelligence","position":{"start":{"line":215,"column":67,"offset":17661},"end":{"line":215,"column":84,"offset":17678},"indent":[]}}],"position":{"start":{"line":215,"column":66,"offset":17660},"end":{"line":215,"column":133,"offset":17727},"indent":[]}},{"type":"text","value":"\nwork that we’re exploring.","position":{"start":{"line":215,"column":133,"offset":17727},"end":{"line":216,"column":27,"offset":17754},"indent":[1]}}],"position":{"start":{"line":214,"column":1,"offset":17510},"end":{"line":216,"column":27,"offset":17754},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#Code-checks-beyond-dedicated-tools","title":null,"children":[],"data":{"hProperties":{"aria-label":"Code checks beyond dedicated tools permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]}},{"type":"text","value":"Code checks beyond dedicated tools","position":{"start":{"line":219,"column":5,"offset":17761},"end":{"line":219,"column":39,"offset":17795},"indent":[]}}],"position":{"start":{"line":219,"column":1,"offset":17757},"end":{"line":219,"column":39,"offset":17795},"indent":[]},"data":{"id":"Code-checks-beyond-dedicated-tools","htmlAttributes":{"id":"Code-checks-beyond-dedicated-tools"},"hProperties":{"id":"Code-checks-beyond-dedicated-tools","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"The direct comparison to ","position":{"start":{"line":221,"column":1,"offset":17797},"end":{"line":221,"column":26,"offset":17822},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":221,"column":26,"offset":17822},"end":{"line":221,"column":39,"offset":17835},"indent":[]}},{"type":"text","value":" is interesting, but the ease of\na search workflow means there are also different benefits over dedicated tools. For\nexample, in just the last couple of weeks I learned about a more elegant way to\nwrite code for ","position":{"start":{"line":221,"column":39,"offset":17835},"end":{"line":224,"column":16,"offset":18047},"indent":[1,1,1]}},{"type":"link","title":null,"url":"https://golang.org/ref/spec#Appending_and_copying_slices","children":[{"type":"text","value":"appending bytes in Go","position":{"start":{"line":224,"column":17,"offset":18048},"end":{"line":224,"column":38,"offset":18069},"indent":[]}}],"position":{"start":{"line":224,"column":16,"offset":18047},"end":{"line":224,"column":97,"offset":18128},"indent":[]}},{"type":"text","value":".\nA pattern like this:","position":{"start":{"line":224,"column":97,"offset":18128},"end":{"line":225,"column":21,"offset":18150},"indent":[1]}}],"position":{"start":{"line":221,"column":1,"offset":17797},"end":{"line":225,"column":21,"offset":18150},"indent":[1,1,1,1]}},{"type":"html","lang":"go","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">b <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> <span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":227,"column":1,"offset":18152},"end":{"line":229,"column":4,"offset":18190},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"can instead be written:","position":{"start":{"line":231,"column":1,"offset":18192},"end":{"line":231,"column":24,"offset":18215},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":18192},"end":{"line":231,"column":24,"offset":18215},"indent":[]}},{"type":"html","lang":"go","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">b <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> <span class=\"token string\">\"foo\"</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":233,"column":1,"offset":18217},"end":{"line":235,"column":4,"offset":18250},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This one isn’t available in ","position":{"start":{"line":237,"column":1,"offset":18252},"end":{"line":237,"column":29,"offset":18280},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":237,"column":29,"offset":18280},"end":{"line":237,"column":42,"offset":18293},"indent":[]}},{"type":"text","value":", but I could immediately implement the check and find hits using Sourcegraph:","position":{"start":{"line":237,"column":42,"offset":18293},"end":{"line":237,"column":120,"offset":18371},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":18252},"end":{"line":237,"column":120,"offset":18371},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://sourcegraph.com/search?q=repogroup:go-gh-100+lang:go+index:only+append%28...%2C+%27...%27%2C+%27...%27%2C+%27...%27%29&patternType=structural","children":[{"type":"text","value":"🔘 Find appends of three or more bytes ↗","position":{"start":{"line":239,"column":2,"offset":18374},"end":{"line":239,"column":42,"offset":18414},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":18373},"end":{"line":239,"column":194,"offset":18566},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":18373},"end":{"line":239,"column":194,"offset":18566},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There’s also the notion of project-specific checks\nthat will never make it into a general tool like ","position":{"start":{"line":241,"column":1,"offset":18568},"end":{"line":242,"column":50,"offset":18668},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":242,"column":50,"offset":18668},"end":{"line":242,"column":63,"offset":18681},"indent":[]}},{"type":"text","value":". For example, in\nour Sourcegraph codebase we’ve mostly moved away from testing values with ","position":{"start":{"line":242,"column":63,"offset":18681},"end":{"line":243,"column":75,"offset":18773},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">!=</code>","position":{"start":{"line":243,"column":75,"offset":18773},"end":{"line":243,"column":79,"offset":18777},"indent":[]}},{"type":"text","value":" and\ninstead use ","position":{"start":{"line":243,"column":79,"offset":18777},"end":{"line":244,"column":13,"offset":18794},"indent":[1]}},{"type":"link","title":null,"url":"https://godoc.org/github.com/google/go-cmp/cmp#Diff","children":[{"type":"html","value":"<code class=\"language-text\">cmp.Diff</code>","position":{"start":{"line":244,"column":14,"offset":18795},"end":{"line":244,"column":24,"offset":18805},"indent":[]}}],"position":{"start":{"line":244,"column":13,"offset":18794},"end":{"line":244,"column":78,"offset":18859},"indent":[]}},{"type":"text","value":".\nBut I know there are still places where we do comparisons the old way. This\nquery highlights some of the remnants, and how how the inner block uses the\ncompared values:","position":{"start":{"line":244,"column":78,"offset":18859},"end":{"line":247,"column":17,"offset":19029},"indent":[1,1,1]}}],"position":{"start":{"line":241,"column":1,"offset":18568},"end":{"line":247,"column":17,"offset":19029},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/sourcegraph/sourcegraph%24+file:test+if+want+%21%3D+got+%7B...%7D&patternType=structural","children":[{"type":"text","value":"🔘 file:test if want != got {…} ↗","position":{"start":{"line":249,"column":2,"offset":19032},"end":{"line":249,"column":37,"offset":19067},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":19031},"end":{"line":249,"column":183,"offset":19213},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":19031},"end":{"line":249,"column":183,"offset":19213},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So code checks can also be specific and customizable to your organization that\nyou won’t find in off-the-shelf tools.","position":{"start":{"line":251,"column":1,"offset":19215},"end":{"line":252,"column":39,"offset":19332},"indent":[1]}}],"position":{"start":{"line":251,"column":1,"offset":19215},"end":{"line":252,"column":39,"offset":19332},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#Takeaway","title":null,"children":[],"data":{"hProperties":{"aria-label":"Takeaway permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]}},{"type":"text","value":"Takeaway","position":{"start":{"line":254,"column":4,"offset":19337},"end":{"line":254,"column":12,"offset":19345},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":19334},"end":{"line":254,"column":12,"offset":19345},"indent":[]},"data":{"id":"Takeaway","htmlAttributes":{"id":"Takeaway"},"hProperties":{"id":"Takeaway","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"Code search can be so much more than finding your favorite provider called\n","position":{"start":{"line":256,"column":1,"offset":19347},"end":{"line":257,"column":1,"offset":19422},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">ChocolateCake</code>","position":{"start":{"line":257,"column":1,"offset":19422},"end":{"line":257,"column":16,"offset":19437},"indent":[]}},{"type":"text","value":" identifier","position":{"start":{"line":257,"column":16,"offset":19437},"end":{"line":257,"column":27,"offset":19448},"indent":[]}},{"type":"link","title":null,"url":"https://sourcegraph.com/search?q=ChocolateCake&patternType=literal","children":[{"type":"text","value":"↗","position":{"start":{"line":257,"column":28,"offset":19449},"end":{"line":257,"column":29,"offset":19450},"indent":[]}}],"position":{"start":{"line":257,"column":27,"offset":19448},"end":{"line":257,"column":98,"offset":19519},"indent":[]}},{"type":"text","value":".\nIt can be a lightweight workflow for revealing short-and-sweet ways to make your\ncode better. Perhaps the most powerful idea is that a universal code search can\nwholesale find and eradicate the code slips we’re always bound to make.","position":{"start":{"line":257,"column":98,"offset":19519},"end":{"line":260,"column":72,"offset":19753},"indent":[1,1,1]}}],"position":{"start":{"line":256,"column":1,"offset":19347},"end":{"line":260,"column":72,"offset":19753},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Starting small, the solution could look like a search query that finds issues in\nactive and popular Go projects at just the push of a button. Why not start\nthere? I’m excited about the idea that we can run that query for everything\nat once:","position":{"start":{"line":262,"column":1,"offset":19755},"end":{"line":265,"column":9,"offset":19995},"indent":[1,1,1]}}],"position":{"start":{"line":262,"column":1,"offset":19755},"end":{"line":265,"column":9,"offset":19995},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://sourcegraph.com/search/console?q=repogroup%3Ago-gh-100%0Alang%3Ago%0Anot%20file%3Atest%0Anot%20file%3Avendor%0Anot%20file%3AGodeps%0Aindex%3Aonly%0A%0A%2F%2F%20Inefficient%20string%20comparison%20with%20strings.ToLower%20or%20strings.ToUpper%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23SA6005%0Aif%20strings.ToLower(...)%20%3D%3D%20strings.ToLower(...)%20or%0Aif%20strings.ToLower(...)%20!%3D%20strings.ToLower(...)%20or%0Aif%20strings.ToUpper(...)%20%3D%3D%20strings.ToUpper(...)%20or%0Aif%20strings.ToUpper(...)%20!%3D%20strings.ToUpper(...)%20or%0A%0A%2F%2F%20Replace%20call%20to%20strings.Index%20with%20strings.Contains%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1003%0Astrings.IndexRune(...%2C%20...)%20%3E%20-1%20or%0Astrings.IndexRune(...%2C%20...)%20%3E%3D%200%20or%0Astrings.IndexRune(...%2C%20...)%20!%3D%20-1%20or%0Astrings.IndexRune(...%2C%20...)%20%3D%3D%20-1%20or%0Astrings.IndexRune(...%2C%20...)%20%3C%200%20or%0Astrings.IndexAny(...%2C%20...)%20%3E%20-1%20or%0Astrings.IndexAny(...%2C%20...)%20%3E%3D%200%20or%0Astrings.IndexAny(...%2C%20...)%20!%3D%20-1%20or%0Astrings.IndexAny(...%2C%20...)%20%3D%3D%20-1%20or%0Astrings.IndexAny(...%2C%20...)%20%3C%200%20or%0Astrings.Index(...%2C%20...)%20%3E%20-1%20or%0Astrings.Index(...%2C%20...)%20%3E%3D%200%20or%0Astrings.Index(...%2C%20...)%20!%3D%20-1%20or%0Astrings.Index(...%2C%20...)%20%3D%3D%20-1%20or%0Astrings.Index(...%2C%20...)%20%3C%200%20or%0A%0A%2F%2F%20Replace%20call%20to%20bytes.Compare%20with%20bytes.Equal%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1004%0Abytes.Compare(...%2C%20...)%20%3D%3D%200%20or%0Abytes.Compare(...%2C%20...)%20!%3D%200%20or%0A%0A%2F%2F%20Drop%20unnecessary%20use%20of%20the%20blank%20identifier%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1005%0Afor%20%3A%5B~_%5D%2C%20%3A%5B~_%5D%20%3D%20range%20or%0Afor%20%3A%5B~_%5D%20%3D%20range%20or%0A%0A%2F%2F%20Use%20for%20%7B%20...%20%7D%20for%20infinite%20loops%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1006%0Afor%20true%20%7B...%7D%20or%0A%0A%2F%2F%20Omit%20default%20slice%20index%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1010%0A%3A%5Bs.%5D%5B%3Alen(%3A%5Bs%5D)%5D%20or%0A%0A%2F%2F%20Replace%20time.Now().Sub(x)%20with%20time.Since(x)%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1012%0Atime.Now().Sub(...)%20or%0A%0A%2F%2F%20Use%20copy%20for%20sliding%20elements%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1018%0Afor%20%3A%5Bi.%5D%20%3A%3D%200%3B%20%3A%5Bi.%5D%20%3C%20%3A%5Bn.%5D%3B%20%3A%5Bi.%5D%20%20%20%7B%0A%20%20%3A%5Bbs.%5D%5B%3A%5Bi%5D%5D%20%3D%20%3A%5Bbs.%5D%5B%3A%5Boffset.%5D%20%3A%5Bi.%5D%5D%0A%7D%0A%0Aor%0A%0A%2F%2F%20Simplify%20make%20call%20by%20omitting%20redundant%20arguments%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1019%0Amake(...%2C%20%3A%5Bx%5D%2C%20%3A%5Bx%5D)%20or%20%0Amake(map%5B%3A%5B%5Bw%5D%5D%5D%3A%5B%5Bw%5D%5D%2C%200)%20or%0Amake(chan%20int%2C%200)%20or%0A%0A%2F%2F%20Omit%20redundant%20nil%20check%20in%20type%20assertion%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1020%0Aif%20%3A%5B_.%5D%2C%20ok%20%3A%3D%20%3A%5Bi.%5D.(%3A%5BT%5D)%3B%20ok%20%26%26%20%3A%5Bi.%5D%20!%3D%20nil%20%7B%20...%20%7D%20or%0Aif%20%3A%5B_.%5D%2C%20ok%20%3A%3D%20%3A%5Bi.%5D.(%3A%5BT%5D)%3B%20%3A%5Bi.%5D%20!%3D%20nil%20%26%26%20ok%20%7B%20...%20%7D%20or%0A%0Aif%20%3A%5Bi.%5D%20!%3D%20nil%20%7B%0A%20%20if%20%3A%5B_.%5D%2C%20ok%20%3A%3D%20%3A%5Bi.%5D.(%3A%5BT%5D)%3B%20ok%20%7B%20...%20%7D%0A%7D%0A%0Aor%0A%0A%2F%2F%20Omit%20redundant%20control%20flow%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1023%0Afunc%20%3A%5Bfn.%5D(...)%20%7B...%20return%20%7D%20%20or%20%0Afunc()%20%7B...%20return%20%7D%20or%0A%0A%2F%2F%20Replace%20x.Sub(time.Now())%20with%20time.Until(x)%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1024%0A.Sub(time.Now())%20or%0A%0A%2F%2F%20Don%27t%20use%20fmt.Sprintf(%22%25s%22%2C%20x)%20unnecessarily%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1025%0Afmt.Println(%22%25s%22%2C%20%22...%22)%20or%0A%0A%2F%2F%20Simplify%20error%20construction%20with%20fmt.Errorf%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1028%0Aerrors.New(fmt.Sprintf(...))%20or%0A%0A%2F%2F%20Range%20over%20the%20string%20directly%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1029%0Afor%20%3A%5B~_%5D%2C%20%3A%5B_.%5D%20%3A%3D%20range%20%5B%5Drune(...)%20or%0A%0A%2F%2F%20Use%20sort.Ints(x)%2C%20sort.Float64s(x)%2C%20and%20sort.Strings(x)%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1032%0Asort.Sort(sort.IntSlice(...))%20or%0Asort.Sort(sort.Float64Slice(...))%20or%0Asort.Sort(sort.StringSlice(...))%20or%0A%0A%2F%2F%20Redundant%20call%20to%20net%2Fhttp.CanonicalHeaderKey%20in%20method%20call%20on%20net%2Fhttp.Header%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1035%0Aheaders.Add(http.CanonicalHeaderKey(...)%2C%20...)%20or%0Aheaders.Del(http.CanonicalHeaderKey(...))%20or%0Aheaders.Get(http.CanonicalHeaderKey(...))%20or%0Aheaders.Set(http.CanonicalHeaderKey(...)%2C%20...)%20or%0A%0A%2F%2F%20Unnecessary%20guard%20around%20map%20access%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1036%0Aif%20%3A%5B~_%5D%2C%20ok%20%3A%3D%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%3B%20ok%20%7B%0A%20%20%20%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%2B%3D%20%3A%5Bx.%5D%0A%7D%20else%20%7B%0A%20%20%20%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20%3A%5Bx.%5D%0A%7D%0A%0Aor%0A%0Aif%20%3A%5B~_%5D%2C%20ok%20%3A%3D%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%3B%20ok%20%7B%0A%20%20%20%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%2B%2B%0A%7D%20else%20%7B%0A%20%20%20%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%201%0A%7D%0A%0Aor%0A%0Aif%20%3A%5B~_%5D%2C%20ok%20%3A%3D%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%3B%20ok%20%7B%0A%09%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20append(%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%2C%20%22%3A%5Bv1%5D%22)%0A%7D%20else%20%7B%0A%09%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20%5B%5Dstring%7B%22%3A%5Bv1%5D%22%7D%0A%7D%0A%0Aor%0A%0Aif%20%3A%5B~_%5D%2C%20ok%20%3A%3D%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%3B%20ok%20%7B%0A%09%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20append(%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%2C%20%22%3A%5Bv1%5D%22%2C%20%22%3A%5Bv2%5D%22)%0A%7D%20else%20%7B%0A%09%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20%5B%5Dstring%7B%22%3A%5Bv1%5D%22%2C%20%22%3A%5Bv2%5D%22%7D%0A%7D%0A%0Aor%0A%0A%2F%2F%20Elaborate%20way%20of%20sleeping%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1037%0Aselect%20%7B%0A%09case%20%3C-time.After(0)%3A%0A%7D%0A%0Aor%0A%0A%2F%2F%20Unnecessarily%20complex%20way%20of%20printing%20formatted%20string%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1038%0Afmt.Print(fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Println(fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Fprint(nil%2C%20fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Fprintln(nil%2C%20fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Sprint(fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Sprintln(fmt.Sprintf(%22...%22%2C%20...))%20or%20%0A%0A%2F%2F%20Unnecessary%20use%20of%20fmt.Sprint%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1039%0Afmt.Sprintf(%22%25s%22%2C%20%22...%22)","children":[{"type":"text","value":"🔘 Run all the code checks on popular Go projects ↗","position":{"start":{"line":267,"column":2,"offset":19998},"end":{"line":267,"column":53,"offset":20049},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":19997},"end":{"line":267,"column":7167,"offset":27163},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":267,"column":7167,"offset":27163},"end":{"line":268,"column":1,"offset":27164},"indent":[1]}},{"type":"html","value":"<br />","position":{"start":{"line":268,"column":1,"offset":27164},"end":{"line":268,"column":7,"offset":27170},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":19997},"end":{"line":268,"column":7,"offset":27170},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The great thing about code checks as queries is that it’s easy to simply\ndelete patterns that we don’t find as valuable. When I explored some\nindividual queries, it was also reassuring to discover that ","position":{"start":{"line":270,"column":1,"offset":27172},"end":{"line":272,"column":61,"offset":27374},"indent":[1,1]}},{"type":"emphasis","children":[{"type":"text","value":"no","position":{"start":{"line":272,"column":62,"offset":27375},"end":{"line":272,"column":64,"offset":27377},"indent":[]}}],"position":{"start":{"line":272,"column":61,"offset":27374},"end":{"line":272,"column":65,"offset":27378},"indent":[]}},{"type":"text","value":" patterns occur\nin any of the Go repositories. For example,\n","position":{"start":{"line":272,"column":65,"offset":27378},"end":{"line":274,"column":1,"offset":27438},"indent":[1,1]}},{"type":"link","title":null,"url":"https://staticcheck.io/docs/checks#S1035","children":[{"type":"text","value":"S1035","position":{"start":{"line":274,"column":2,"offset":27439},"end":{"line":274,"column":7,"offset":27444},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":27438},"end":{"line":274,"column":50,"offset":27487},"indent":[]}},{"type":"text","value":" checks that there are unneeded\n","position":{"start":{"line":274,"column":50,"offset":27487},"end":{"line":275,"column":1,"offset":27519},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">http.CanonicalHeaderKey</code>","position":{"start":{"line":275,"column":1,"offset":27519},"end":{"line":275,"column":26,"offset":27544},"indent":[]}},{"type":"text","value":" calls on the first argument of certain functions:","position":{"start":{"line":275,"column":26,"offset":27544},"end":{"line":275,"column":76,"offset":27594},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":27172},"end":{"line":275,"column":76,"offset":27594},"indent":[1,1,1,1,1]}},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">headers<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>CanonicalHeaderKey<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span>\nheaders<span class=\"token punctuation\">.</span>Del<span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>CanonicalHeaderKey<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span>\nheaders<span class=\"token punctuation\">.</span>Get<span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>CanonicalHeaderKey<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span>\nheaders<span class=\"token punctuation\">.</span>Set<span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>CanonicalHeaderKey<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":277,"column":1,"offset":27596},"end":{"line":282,"column":4,"offset":27796},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are ","position":{"start":{"line":284,"column":1,"offset":27798},"end":{"line":284,"column":11,"offset":27808},"indent":[]}},{"type":"link","title":null,"url":"https://sourcegraph.com/search/console?q=repogroup%3Ago-gh-100%0Alang%3Ago%0Anot%20file%3Atest%0Anot%20file%3Avendor%0Anot%20file%3AGodeps%0Aindex%3Aonly%0A%0A%2F%2F%20Good%20thing%3A%20there%20are%20no%20matches%20for%20these%20patterns%20in%20the%20top%20100%20Go%20repositories%0Aheaders.Add(http.CanonicalHeaderKey(...)%2C%20...)%20or%0Aheaders.Del(http.CanonicalHeaderKey(...))%20or%0Aheaders.Get(http.CanonicalHeaderKey(...))%20or%0Aheaders.Set(http.CanonicalHeaderKey(...)%2C%20...)","children":[{"type":"text","value":"no matches ↗","position":{"start":{"line":284,"column":12,"offset":27809},"end":{"line":284,"column":24,"offset":27821},"indent":[]}}],"position":{"start":{"line":284,"column":11,"offset":27808},"end":{"line":284,"column":516,"offset":28313},"indent":[]}},{"type":"text","value":" for this pattern in the Go repositories, but there are ","position":{"start":{"line":284,"column":516,"offset":28313},"end":{"line":284,"column":572,"offset":28369},"indent":[]}},{"type":"link","title":null,"url":"https://sourcegraph.com/search/console?q=repogroup%3Ago-gh-100%0Alang%3Ago%0Anot%20file%3Atest%0Aindex%3Aonly%0A%0A%2F%2F%20There%20are%20some%20matches%20for%20these%20patterns%20in%20vendored%20files%0Aheaders.Add(http.CanonicalHeaderKey(...)%2C%20...)%20or%0Aheaders.Del(http.CanonicalHeaderKey(...))%20or%0Aheaders.Get(http.CanonicalHeaderKey(...))%20or%0Aheaders.Set(http.CanonicalHeaderKey(...)%2C%20...)","children":[{"type":"text","value":"some matches ↗","position":{"start":{"line":284,"column":573,"offset":28370},"end":{"line":284,"column":587,"offset":28384},"indent":[]}}],"position":{"start":{"line":284,"column":572,"offset":28369},"end":{"line":284,"column":1000,"offset":28797},"indent":[]}},{"type":"text","value":" in vendored files, when we we remove the ","position":{"start":{"line":284,"column":1000,"offset":28797},"end":{"line":284,"column":1042,"offset":28839},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">not file:vendor</code>","position":{"start":{"line":284,"column":1042,"offset":28839},"end":{"line":284,"column":1059,"offset":28856},"indent":[]}},{"type":"text","value":" filter.","position":{"start":{"line":284,"column":1059,"offset":28856},"end":{"line":284,"column":1067,"offset":28864},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":27798},"end":{"line":284,"column":1067,"offset":28864},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#Proposing-changes","title":null,"children":[],"data":{"hProperties":{"aria-label":"Proposing changes permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]}},{"type":"text","value":"Proposing changes","position":{"start":{"line":287,"column":5,"offset":28871},"end":{"line":287,"column":22,"offset":28888},"indent":[]}}],"position":{"start":{"line":287,"column":1,"offset":28867},"end":{"line":287,"column":22,"offset":28888},"indent":[]},"data":{"id":"Proposing-changes","htmlAttributes":{"id":"Proposing-changes"},"hProperties":{"id":"Proposing-changes","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"The most exciting part of finding real hits with any code checking tool is that\nwe discover an ","position":{"start":{"line":289,"column":1,"offset":28890},"end":{"line":290,"column":16,"offset":28985},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"actionable","position":{"start":{"line":290,"column":17,"offset":28986},"end":{"line":290,"column":27,"offset":28996},"indent":[]}}],"position":{"start":{"line":290,"column":16,"offset":28985},"end":{"line":290,"column":28,"offset":28997},"indent":[]}},{"type":"text","value":" way to improve the code! I’ve narrowed down the\nsearch query so that it (hopefully) finds only real and uncontroversial patterns\nto improve and contribute to active Go projects.","position":{"start":{"line":290,"column":28,"offset":28997},"end":{"line":292,"column":49,"offset":29175},"indent":[1,1]}}],"position":{"start":{"line":289,"column":1,"offset":28890},"end":{"line":292,"column":49,"offset":29175},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Part of an effective contribution means that we need to avoid matches in files\nthat are tests, vendored, or external dependencies. While anyone can use the\nresults to make contributions, it’s important to be mindful of contributor\nguidelines, clearly communicate and motivate proposed changes in pull requests,\nand validate that the change passes a project’s tests or CI checks. And, while the\nquery does exclude common test and vendored files, it’s best to check that\nmatches occur in files that really are part of the project.","position":{"start":{"line":294,"column":1,"offset":29177},"end":{"line":300,"column":60,"offset":29705},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":294,"column":1,"offset":29177},"end":{"line":300,"column":60,"offset":29705},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you’re interested in turning the results of ","position":{"start":{"line":302,"column":1,"offset":29707},"end":{"line":302,"column":48,"offset":29754},"indent":[]}},{"type":"link","title":null,"url":"https://sourcegraph.com/search/console?q=repogroup%3Ago-gh-100%0Alang%3Ago%0Anot%20file%3Atest%0Anot%20file%3Avendor%0Anot%20file%3AGodeps%0Aindex%3Aonly%0A%0A%2F%2F%20Inefficient%20string%20comparison%20with%20strings.ToLower%20or%20strings.ToUpper%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23SA6005%0Aif%20strings.ToLower(...)%20%3D%3D%20strings.ToLower(...)%20or%0Aif%20strings.ToLower(...)%20!%3D%20strings.ToLower(...)%20or%0Aif%20strings.ToUpper(...)%20%3D%3D%20strings.ToUpper(...)%20or%0Aif%20strings.ToUpper(...)%20!%3D%20strings.ToUpper(...)%20or%0A%0A%2F%2F%20Replace%20call%20to%20strings.Index%20with%20strings.Contains%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1003%0Astrings.IndexRune(...%2C%20...)%20%3E%20-1%20or%0Astrings.IndexRune(...%2C%20...)%20%3E%3D%200%20or%0Astrings.IndexRune(...%2C%20...)%20!%3D%20-1%20or%0Astrings.IndexRune(...%2C%20...)%20%3D%3D%20-1%20or%0Astrings.IndexRune(...%2C%20...)%20%3C%200%20or%0Astrings.IndexAny(...%2C%20...)%20%3E%20-1%20or%0Astrings.IndexAny(...%2C%20...)%20%3E%3D%200%20or%0Astrings.IndexAny(...%2C%20...)%20!%3D%20-1%20or%0Astrings.IndexAny(...%2C%20...)%20%3D%3D%20-1%20or%0Astrings.IndexAny(...%2C%20...)%20%3C%200%20or%0Astrings.Index(...%2C%20...)%20%3E%20-1%20or%0Astrings.Index(...%2C%20...)%20%3E%3D%200%20or%0Astrings.Index(...%2C%20...)%20!%3D%20-1%20or%0Astrings.Index(...%2C%20...)%20%3D%3D%20-1%20or%0Astrings.Index(...%2C%20...)%20%3C%200%20or%0A%0A%2F%2F%20Replace%20call%20to%20bytes.Compare%20with%20bytes.Equal%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1004%0Abytes.Compare(...%2C%20...)%20%3D%3D%200%20or%0Abytes.Compare(...%2C%20...)%20!%3D%200%20or%0A%0A%2F%2F%20Drop%20unnecessary%20use%20of%20the%20blank%20identifier%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1005%0Afor%20%3A%5B~_%5D%2C%20%3A%5B~_%5D%20%3D%20range%20or%0Afor%20%3A%5B~_%5D%20%3D%20range%20or%0A%0A%2F%2F%20Use%20for%20%7B%20...%20%7D%20for%20infinite%20loops%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1006%0Afor%20true%20%7B...%7D%20or%0A%0A%2F%2F%20Omit%20default%20slice%20index%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1010%0A%3A%5Bs.%5D%5B%3Alen(%3A%5Bs%5D)%5D%20or%0A%0A%2F%2F%20Replace%20time.Now().Sub(x)%20with%20time.Since(x)%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1012%0Atime.Now().Sub(...)%20or%0A%0A%2F%2F%20Use%20copy%20for%20sliding%20elements%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1018%0Afor%20%3A%5Bi.%5D%20%3A%3D%200%3B%20%3A%5Bi.%5D%20%3C%20%3A%5Bn.%5D%3B%20%3A%5Bi.%5D%20%20%20%7B%0A%20%20%3A%5Bbs.%5D%5B%3A%5Bi%5D%5D%20%3D%20%3A%5Bbs.%5D%5B%3A%5Boffset.%5D%20%3A%5Bi.%5D%5D%0A%7D%0A%0Aor%0A%0A%2F%2F%20Simplify%20make%20call%20by%20omitting%20redundant%20arguments%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1019%0Amake(...%2C%20%3A%5Bx%5D%2C%20%3A%5Bx%5D)%20or%20%0Amake(map%5B%3A%5B%5Bw%5D%5D%5D%3A%5B%5Bw%5D%5D%2C%200)%20or%0Amake(chan%20int%2C%200)%20or%0A%0A%2F%2F%20Omit%20redundant%20nil%20check%20in%20type%20assertion%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1020%0Aif%20%3A%5B_.%5D%2C%20ok%20%3A%3D%20%3A%5Bi.%5D.(%3A%5BT%5D)%3B%20ok%20%26%26%20%3A%5Bi.%5D%20!%3D%20nil%20%7B%20...%20%7D%20or%0Aif%20%3A%5B_.%5D%2C%20ok%20%3A%3D%20%3A%5Bi.%5D.(%3A%5BT%5D)%3B%20%3A%5Bi.%5D%20!%3D%20nil%20%26%26%20ok%20%7B%20...%20%7D%20or%0A%0Aif%20%3A%5Bi.%5D%20!%3D%20nil%20%7B%0A%20%20if%20%3A%5B_.%5D%2C%20ok%20%3A%3D%20%3A%5Bi.%5D.(%3A%5BT%5D)%3B%20ok%20%7B%20...%20%7D%0A%7D%0A%0Aor%0A%0A%2F%2F%20Omit%20redundant%20control%20flow%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1023%0Afunc%20%3A%5Bfn.%5D(...)%20%7B...%20return%20%7D%20%20or%20%0Afunc()%20%7B...%20return%20%7D%20or%0A%0A%2F%2F%20Replace%20x.Sub(time.Now())%20with%20time.Until(x)%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1024%0A.Sub(time.Now())%20or%0A%0A%2F%2F%20Don%27t%20use%20fmt.Sprintf(%22%25s%22%2C%20x)%20unnecessarily%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1025%0Afmt.Println(%22%25s%22%2C%20%22...%22)%20or%0A%0A%2F%2F%20Simplify%20error%20construction%20with%20fmt.Errorf%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1028%0Aerrors.New(fmt.Sprintf(...))%20or%0A%0A%2F%2F%20Range%20over%20the%20string%20directly%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1029%0Afor%20%3A%5B~_%5D%2C%20%3A%5B_.%5D%20%3A%3D%20range%20%5B%5Drune(...)%20or%0A%0A%2F%2F%20Use%20sort.Ints(x)%2C%20sort.Float64s(x)%2C%20and%20sort.Strings(x)%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1032%0Asort.Sort(sort.IntSlice(...))%20or%0Asort.Sort(sort.Float64Slice(...))%20or%0Asort.Sort(sort.StringSlice(...))%20or%0A%0A%2F%2F%20Redundant%20call%20to%20net%2Fhttp.CanonicalHeaderKey%20in%20method%20call%20on%20net%2Fhttp.Header%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1035%0Aheaders.Add(http.CanonicalHeaderKey(...)%2C%20...)%20or%0Aheaders.Del(http.CanonicalHeaderKey(...))%20or%0Aheaders.Get(http.CanonicalHeaderKey(...))%20or%0Aheaders.Set(http.CanonicalHeaderKey(...)%2C%20...)%20or%0A%0A%2F%2F%20Unnecessary%20guard%20around%20map%20access%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1036%0Aif%20%3A%5B~_%5D%2C%20ok%20%3A%3D%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%3B%20ok%20%7B%0A%20%20%20%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%2B%3D%20%3A%5Bx.%5D%0A%7D%20else%20%7B%0A%20%20%20%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20%3A%5Bx.%5D%0A%7D%0A%0Aor%0A%0Aif%20%3A%5B~_%5D%2C%20ok%20%3A%3D%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%3B%20ok%20%7B%0A%20%20%20%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%2B%2B%0A%7D%20else%20%7B%0A%20%20%20%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%201%0A%7D%0A%0Aor%0A%0Aif%20%3A%5B~_%5D%2C%20ok%20%3A%3D%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%3B%20ok%20%7B%0A%09%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20append(%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%2C%20%22%3A%5Bv1%5D%22)%0A%7D%20else%20%7B%0A%09%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20%5B%5Dstring%7B%22%3A%5Bv1%5D%22%7D%0A%7D%0A%0Aor%0A%0Aif%20%3A%5B~_%5D%2C%20ok%20%3A%3D%20%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%3B%20ok%20%7B%0A%09%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20append(%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%2C%20%22%3A%5Bv1%5D%22%2C%20%22%3A%5Bv2%5D%22)%0A%7D%20else%20%7B%0A%09%3A%5Bm.%5D%5B%3A%5Bk%5D%5D%20%3D%20%5B%5Dstring%7B%22%3A%5Bv1%5D%22%2C%20%22%3A%5Bv2%5D%22%7D%0A%7D%0A%0Aor%0A%0A%2F%2F%20Elaborate%20way%20of%20sleeping%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1037%0Aselect%20%7B%0A%09case%20%3C-time.After(0)%3A%0A%7D%0A%0Aor%0A%0A%2F%2F%20Unnecessarily%20complex%20way%20of%20printing%20formatted%20string%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1038%0Afmt.Print(fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Println(fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Fprint(nil%2C%20fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Fprintln(nil%2C%20fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Sprint(fmt.Sprintf(%22...%22%2C%20...))%20or%0Afmt.Sprintln(fmt.Sprintf(%22...%22%2C%20...))%20or%20%0A%0A%2F%2F%20Unnecessary%20use%20of%20fmt.Sprint%0A%2F%2F%20https%3A%2F%2Fstaticcheck.io%2Fdocs%2Fchecks%23S1039%0Afmt.Sprintf(%22%25s%22%2C%20%22...%22)","children":[{"type":"text","value":"the complete query","position":{"start":{"line":302,"column":49,"offset":29755},"end":{"line":302,"column":67,"offset":29773},"indent":[]}}],"position":{"start":{"line":302,"column":48,"offset":29754},"end":{"line":302,"column":7181,"offset":36887},"indent":[]}},{"type":"text","value":" into open source\ncontributions, e-mail me at ","position":{"start":{"line":302,"column":7181,"offset":36887},"end":{"line":303,"column":29,"offset":36933},"indent":[1]}},{"type":"link","title":null,"url":"mailto:rijnard@sourcegraph.com","children":[{"type":"text","value":"rijnard@sourcegraph.com","position":{"start":{"line":303,"column":30,"offset":36934},"end":{"line":303,"column":53,"offset":36957},"indent":[]}}],"position":{"start":{"line":303,"column":29,"offset":36933},"end":{"line":303,"column":54,"offset":36958},"indent":[]}},{"type":"text","value":", I can help.","position":{"start":{"line":303,"column":54,"offset":36958},"end":{"line":303,"column":67,"offset":36971},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":29707},"end":{"line":303,"column":67,"offset":36971},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#Whats-next-for-search-queries","title":null,"children":[],"data":{"hProperties":{"aria-label":"Whats next for search queries permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]}},{"type":"text","value":"What’s next for search queries","position":{"start":{"line":305,"column":4,"offset":36976},"end":{"line":305,"column":34,"offset":37006},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":36973},"end":{"line":305,"column":34,"offset":37006},"indent":[]},"data":{"id":"Whats-next-for-search-queries","htmlAttributes":{"id":"Whats-next-for-search-queries"},"hProperties":{"id":"Whats-next-for-search-queries","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"There are many languages and code checkers to explore, and this post only skims\nthe surface. We want to make high-quality code checks available for your\nprojects and languages. If you have a project or query in mind, feel free to\n","position":{"start":{"line":307,"column":1,"offset":37008},"end":{"line":310,"column":1,"offset":37238},"indent":[1,1,1]}},{"type":"link","title":null,"url":"https://github.com/sourcegraph/sourcegraph/issues/new?assignees=&labels=&template=feature_request.md&title=Code%20check","children":[{"type":"text","value":"open an issue on GitHub","position":{"start":{"line":310,"column":2,"offset":37239},"end":{"line":310,"column":25,"offset":37262},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":37238},"end":{"line":310,"column":147,"offset":37384},"indent":[]}},{"type":"text","value":"\nwith your thoughts. We’re still working on performance and usability enhancements\nso that you can search your code and not just popular projects, so stay tuned!\nIn the meantime, you can find an all-in-one config for replacing the patterns on your local machine\nat ","position":{"start":{"line":310,"column":147,"offset":37384},"end":{"line":314,"column":4,"offset":37649},"indent":[1,1,1,1]}},{"type":"link","title":null,"url":"https://github.com/comby-tools/go-patterns","children":[{"type":"text","value":"comby-tools/go-patterns","position":{"start":{"line":314,"column":5,"offset":37650},"end":{"line":314,"column":28,"offset":37673},"indent":[]}}],"position":{"start":{"line":314,"column":4,"offset":37649},"end":{"line":314,"column":73,"offset":37718},"indent":[]}},{"type":"text","value":". If you want to make large scale,\norg-wide changes, talk to us about ","position":{"start":{"line":314,"column":73,"offset":37718},"end":{"line":315,"column":36,"offset":37788},"indent":[1]}},{"type":"link","title":null,"url":"https://docs.sourcegraph.com/batch_changes","children":[{"type":"text","value":"Batch Changes","position":{"start":{"line":315,"column":37,"offset":37789},"end":{"line":315,"column":50,"offset":37802},"indent":[]}}],"position":{"start":{"line":315,"column":36,"offset":37788},"end":{"line":315,"column":95,"offset":37847},"indent":[]}},{"type":"text","value":".\nAnd if you find code checking valuable and want to learn more about our work at Sourcegraph, reach us at\n","position":{"start":{"line":315,"column":95,"offset":37847},"end":{"line":317,"column":1,"offset":37954},"indent":[1,1]}},{"type":"link","title":null,"url":"mailto:feedback@sourcegraph.com","children":[{"type":"text","value":"feedback@sourcegraph.com","position":{"start":{"line":317,"column":2,"offset":37955},"end":{"line":317,"column":26,"offset":37979},"indent":[]}}],"position":{"start":{"line":317,"column":1,"offset":37954},"end":{"line":317,"column":27,"offset":37980},"indent":[]}},{"type":"text","value":". Happy searching!","position":{"start":{"line":317,"column":27,"offset":37980},"end":{"line":317,"column":45,"offset":37998},"indent":[]}}],"position":{"start":{"line":307,"column":1,"offset":37008},"end":{"line":317,"column":45,"offset":37998},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":319,"column":1,"offset":38000},"end":{"line":319,"column":4,"offset":38003},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<sup>","position":{"start":{"line":321,"column":1,"offset":38005},"end":{"line":321,"column":6,"offset":38010},"indent":[]}},{"type":"text","value":"1","position":{"start":{"line":321,"column":6,"offset":38010},"end":{"line":321,"column":7,"offset":38011},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":321,"column":7,"offset":38011},"end":{"line":321,"column":13,"offset":38017},"indent":[]}},{"type":"text","value":" Another one of my favorites tools using the same principle is ","position":{"start":{"line":321,"column":13,"offset":38017},"end":{"line":321,"column":76,"offset":38080},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/jonase/kibit","children":[{"type":"text","value":"Kibit","position":{"start":{"line":321,"column":77,"offset":38081},"end":{"line":321,"column":82,"offset":38086},"indent":[]}}],"position":{"start":{"line":321,"column":76,"offset":38080},"end":{"line":321,"column":116,"offset":38120},"indent":[]}},{"type":"text","value":" for Clojure.\n","position":{"start":{"line":321,"column":116,"offset":38120},"end":{"line":322,"column":1,"offset":38134},"indent":[1]}},{"type":"html","value":"<br/>","position":{"start":{"line":322,"column":1,"offset":38134},"end":{"line":322,"column":6,"offset":38139},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":322,"column":6,"offset":38139},"end":{"line":323,"column":1,"offset":38140},"indent":[1]}},{"type":"html","value":"<sup>","position":{"start":{"line":323,"column":1,"offset":38140},"end":{"line":323,"column":6,"offset":38145},"indent":[]}},{"type":"text","value":"2","position":{"start":{"line":323,"column":6,"offset":38145},"end":{"line":323,"column":7,"offset":38146},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":323,"column":7,"offset":38146},"end":{"line":323,"column":13,"offset":38152},"indent":[]}},{"type":"text","value":" See the ","position":{"start":{"line":323,"column":13,"offset":38152},"end":{"line":323,"column":22,"offset":38161},"indent":[]}},{"type":"link","title":null,"url":"https://about.sourcegraph.com/blog/code-search-turned-code-checker/","children":[{"type":"text","value":"structural search reference","position":{"start":{"line":323,"column":23,"offset":38162},"end":{"line":323,"column":50,"offset":38189},"indent":[]}}],"position":{"start":{"line":323,"column":22,"offset":38161},"end":{"line":323,"column":120,"offset":38259},"indent":[]}},{"type":"text","value":" for more details about special syntax.\n","position":{"start":{"line":323,"column":120,"offset":38259},"end":{"line":324,"column":1,"offset":38299},"indent":[1]}},{"type":"html","value":"<br/>","position":{"start":{"line":324,"column":1,"offset":38299},"end":{"line":324,"column":6,"offset":38304},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":324,"column":6,"offset":38304},"end":{"line":325,"column":1,"offset":38305},"indent":[1]}},{"type":"html","value":"<sup>","position":{"start":{"line":325,"column":1,"offset":38305},"end":{"line":325,"column":6,"offset":38310},"indent":[]}},{"type":"text","value":"3","position":{"start":{"line":325,"column":6,"offset":38310},"end":{"line":325,"column":7,"offset":38311},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":325,"column":7,"offset":38311},"end":{"line":325,"column":13,"offset":38317},"indent":[]}},{"type":"text","value":" These are all the ","position":{"start":{"line":325,"column":13,"offset":38317},"end":{"line":325,"column":32,"offset":38336},"indent":[]}},{"type":"link","title":null,"url":"https://staticcheck.io/docs/checks","children":[{"type":"text","value":"simple static check","position":{"start":{"line":325,"column":33,"offset":38337},"end":{"line":325,"column":52,"offset":38356},"indent":[]}}],"position":{"start":{"line":325,"column":32,"offset":38336},"end":{"line":325,"column":89,"offset":38393},"indent":[]}},{"type":"text","value":" of the form ","position":{"start":{"line":325,"column":89,"offset":38393},"end":{"line":325,"column":102,"offset":38406},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">S&lt;number&gt;</code>","position":{"start":{"line":325,"column":102,"offset":38406},"end":{"line":325,"column":113,"offset":38417},"indent":[]}},{"type":"text","value":", excluding ","position":{"start":{"line":325,"column":113,"offset":38417},"end":{"line":325,"column":125,"offset":38429},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">SA</code>","position":{"start":{"line":325,"column":125,"offset":38429},"end":{"line":325,"column":129,"offset":38433},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":325,"column":129,"offset":38433},"end":{"line":325,"column":134,"offset":38438},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ST</code>","position":{"start":{"line":325,"column":134,"offset":38438},"end":{"line":325,"column":138,"offset":38442},"indent":[]}},{"type":"text","value":" checks.\n","position":{"start":{"line":325,"column":138,"offset":38442},"end":{"line":326,"column":1,"offset":38451},"indent":[1]}},{"type":"html","value":"<br/>","position":{"start":{"line":326,"column":1,"offset":38451},"end":{"line":326,"column":6,"offset":38456},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":326,"column":6,"offset":38456},"end":{"line":327,"column":1,"offset":38457},"indent":[1]}},{"type":"html","value":"<sup>","position":{"start":{"line":327,"column":1,"offset":38457},"end":{"line":327,"column":6,"offset":38462},"indent":[]}},{"type":"text","value":"4","position":{"start":{"line":327,"column":6,"offset":38462},"end":{"line":327,"column":7,"offset":38463},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":327,"column":7,"offset":38463},"end":{"line":327,"column":13,"offset":38469},"indent":[]}},{"type":"text","value":" There’s plenty of opportunity to pick other tools or languages, I picked ","position":{"start":{"line":327,"column":13,"offset":38469},"end":{"line":327,"column":87,"offset":38543},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":327,"column":87,"offset":38543},"end":{"line":327,"column":100,"offset":38556},"indent":[]}},{"type":"text","value":" because its the nicely illustrative.","position":{"start":{"line":327,"column":100,"offset":38556},"end":{"line":327,"column":137,"offset":38593},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":327,"column":137,"offset":38593},"end":{"line":327,"column":143,"offset":38599},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":327,"column":143,"offset":38599},"end":{"line":328,"column":1,"offset":38600},"indent":[1]}},{"type":"html","value":"<br/>","position":{"start":{"line":328,"column":1,"offset":38600},"end":{"line":328,"column":6,"offset":38605},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":328,"column":6,"offset":38605},"end":{"line":329,"column":1,"offset":38606},"indent":[1]}},{"type":"html","value":"<sup>","position":{"start":{"line":329,"column":1,"offset":38606},"end":{"line":329,"column":6,"offset":38611},"indent":[]}},{"type":"text","value":"5","position":{"start":{"line":329,"column":6,"offset":38611},"end":{"line":329,"column":7,"offset":38612},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":329,"column":7,"offset":38612},"end":{"line":329,"column":13,"offset":38618},"indent":[]}},{"type":"text","value":" Also, it probably makes sense for these projects to run ","position":{"start":{"line":329,"column":13,"offset":38618},"end":{"line":329,"column":70,"offset":38675},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">staticcheck</code>","position":{"start":{"line":329,"column":70,"offset":38675},"end":{"line":329,"column":83,"offset":38688},"indent":[]}},{"type":"text","value":" in their CI, and a quick search helps make it more obvious which ones do not 😛.","position":{"start":{"line":329,"column":83,"offset":38688},"end":{"line":329,"column":164,"offset":38769},"indent":[]}}],"position":{"start":{"line":321,"column":1,"offset":38005},"end":{"line":329,"column":164,"offset":38769},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":331,"column":1,"offset":38771},"end":{"line":331,"column":4,"offset":38774},"indent":[]}},{"type":"html","value":"<sup>","position":{"start":{"line":333,"column":1,"offset":38776},"end":{"line":333,"column":6,"offset":38781},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Acks: Thanks ","position":{"start":{"line":335,"column":1,"offset":38783},"end":{"line":335,"column":14,"offset":38796},"indent":[]}},{"type":"link","title":null,"url":"https://twitter.com/lguychard","children":[{"type":"text","value":"@lguychard","position":{"start":{"line":335,"column":15,"offset":38797},"end":{"line":335,"column":25,"offset":38807},"indent":[]}}],"position":{"start":{"line":335,"column":14,"offset":38796},"end":{"line":335,"column":57,"offset":38839},"indent":[]}},{"type":"text","value":",\n","position":{"start":{"line":335,"column":57,"offset":38839},"end":{"line":336,"column":1,"offset":38841},"indent":[1]}},{"type":"link","title":null,"url":"https://twitter.com/thorstenball","children":[{"type":"text","value":"@thorstenball","position":{"start":{"line":336,"column":2,"offset":38842},"end":{"line":336,"column":15,"offset":38855},"indent":[]}}],"position":{"start":{"line":336,"column":1,"offset":38841},"end":{"line":336,"column":50,"offset":38890},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":336,"column":50,"offset":38890},"end":{"line":336,"column":52,"offset":38892},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/stefanhengl","children":[{"type":"text","value":"@stefanhengl","position":{"start":{"line":336,"column":53,"offset":38893},"end":{"line":336,"column":65,"offset":38905},"indent":[]}}],"position":{"start":{"line":336,"column":52,"offset":38892},"end":{"line":336,"column":98,"offset":38938},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":336,"column":98,"offset":38938},"end":{"line":336,"column":99,"offset":38939},"indent":[]}},{"type":"link","title":null,"url":"https://twitter.com/beyang","children":[{"type":"text","value":"@beyang","position":{"start":{"line":336,"column":100,"offset":38940},"end":{"line":336,"column":107,"offset":38947},"indent":[]}}],"position":{"start":{"line":336,"column":99,"offset":38939},"end":{"line":336,"column":136,"offset":38976},"indent":[]}},{"type":"text","value":",\n","position":{"start":{"line":336,"column":136,"offset":38976},"end":{"line":337,"column":1,"offset":38978},"indent":[1]}},{"type":"link","title":null,"url":"https://twitter.com/sqs","children":[{"type":"text","value":"@sqs","position":{"start":{"line":337,"column":2,"offset":38979},"end":{"line":337,"column":6,"offset":38983},"indent":[]}}],"position":{"start":{"line":337,"column":1,"offset":38978},"end":{"line":337,"column":32,"offset":39009},"indent":[]}},{"type":"text","value":" for feedback on the content of this post.\n","position":{"start":{"line":337,"column":32,"offset":39009},"end":{"line":338,"column":1,"offset":39052},"indent":[1]}},{"type":"html","value":"</sup>","position":{"start":{"line":338,"column":1,"offset":39052},"end":{"line":338,"column":7,"offset":39058},"indent":[]}}],"position":{"start":{"line":335,"column":1,"offset":38783},"end":{"line":338,"column":7,"offset":39058},"indent":[1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":339,"column":1,"offset":39059}}}}