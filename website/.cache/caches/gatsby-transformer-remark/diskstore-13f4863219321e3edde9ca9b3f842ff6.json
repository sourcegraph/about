{"expireTime":9007200905229170000,"key":"transformer-remark-markdown-html-ast-f393fe42f85e3fea7b35e31336c1ff60-gatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-unwrap-imagesgatsby-remark-imagesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We’re introducing a new way to search code at Sourcegraph with structural code\nsearch. Structural code search lets you match nested expressions and whole code\nblocks that can be difficult or awkward to match using regular expressions.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":4,"column":76,"offset":235}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":4,"column":76,"offset":235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"What-is-structural-code-search","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#What-is-structural-code-search","aria-label":"What is structural code search permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]},{"type":"text","value":"What ","position":{"start":{"line":6,"column":4,"offset":240},"end":{"line":6,"column":9,"offset":245}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"is","position":{"start":{"line":6,"column":10,"offset":246},"end":{"line":6,"column":12,"offset":248}}}],"position":{"start":{"line":6,"column":9,"offset":245},"end":{"line":6,"column":13,"offset":249}}},{"type":"text","value":" structural code search?","position":{"start":{"line":6,"column":13,"offset":249},"end":{"line":6,"column":37,"offset":273}}}],"position":{"start":{"line":6,"column":1,"offset":237},"end":{"line":6,"column":37,"offset":273}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Structural code search is the idea that you can search for ","position":{"start":{"line":8,"column":1,"offset":275},"end":{"line":8,"column":60,"offset":334}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"syntactic\nstructures","position":{"start":{"line":8,"column":61,"offset":335},"end":{"line":9,"column":11,"offset":355}}}],"position":{"start":{"line":8,"column":60,"offset":334},"end":{"line":9,"column":12,"offset":356}}},{"type":"text","value":" in code that correspond more closely to a program’s underlying\nconcrete syntax tree (or parse tree). For example, ","position":{"start":{"line":9,"column":12,"offset":356},"end":{"line":10,"column":52,"offset":471}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":10,"column":52,"offset":471},"end":{"line":10,"column":57,"offset":476}}},{"type":"text","value":" ","position":{"start":{"line":10,"column":57,"offset":476},"end":{"line":10,"column":58,"offset":477}}},{"type":"element","tagName":"a","properties":{"href":"https://doc.rust-lang.org/1.2.0/book/for-loops.html"},"children":[{"type":"text","value":"loops in\nRust","position":{"start":{"line":10,"column":59,"offset":478},"end":{"line":11,"column":5,"offset":491}}}],"position":{"start":{"line":10,"column":58,"offset":477},"end":{"line":11,"column":59,"offset":545}}},{"type":"text","value":" look something like\nthis:","position":{"start":{"line":11,"column":59,"offset":545},"end":{"line":12,"column":6,"offset":571}}}],"position":{"start":{"line":8,"column":1,"offset":275},"end":{"line":12,"column":6,"offset":571}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">for</span> var <span class=\"token keyword\">in</span> expression <span class=\"token punctuation\">{</span>\n    code\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":14,"column":1,"offset":573},"end":{"line":18,"column":4,"offset":619}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":20,"column":1,"offset":621},"end":{"line":20,"column":5,"offset":625}}},{"type":"raw","value":"<code class=\"language-text\">code</code>","position":{"start":{"line":20,"column":5,"offset":625},"end":{"line":20,"column":11,"offset":631}}},{"type":"text","value":" block can contain nested ","position":{"start":{"line":20,"column":11,"offset":631},"end":{"line":20,"column":37,"offset":657}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":20,"column":37,"offset":657},"end":{"line":20,"column":42,"offset":662}}},{"type":"text","value":" loops, ","position":{"start":{"line":20,"column":42,"offset":662},"end":{"line":20,"column":50,"offset":670}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":20,"column":50,"offset":670},"end":{"line":20,"column":54,"offset":674}}},{"type":"text","value":" statements, and so on. To\nmatch all of the ","position":{"start":{"line":20,"column":54,"offset":674},"end":{"line":21,"column":18,"offset":718}}},{"type":"raw","value":"<code class=\"language-text\">code</code>","position":{"start":{"line":21,"column":18,"offset":718},"end":{"line":21,"column":24,"offset":724}}},{"type":"text","value":" block contents for these expressions, and search for\npatterns inside them, a search engine must understand that ","position":{"start":{"line":21,"column":24,"offset":724},"end":{"line":22,"column":60,"offset":837}}},{"type":"raw","value":"<code class=\"language-text\">code</code>","position":{"start":{"line":22,"column":60,"offset":837},"end":{"line":22,"column":66,"offset":843}}},{"type":"text","value":" exists\ninside the ","position":{"start":{"line":22,"column":66,"offset":843},"end":{"line":23,"column":12,"offset":862}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"balanced","position":{"start":{"line":23,"column":13,"offset":863},"end":{"line":23,"column":21,"offset":871}}}],"position":{"start":{"line":23,"column":12,"offset":862},"end":{"line":23,"column":22,"offset":872}}},{"type":"text","value":" braces ","position":{"start":{"line":23,"column":22,"offset":872},"end":{"line":23,"column":30,"offset":880}}},{"type":"raw","value":"<code class=\"language-text\">{ ... }</code>","position":{"start":{"line":23,"column":30,"offset":880},"end":{"line":23,"column":39,"offset":889}}},{"type":"text","value":". Regular expressions can go a long way to\nmatch such syntactic structures but they are ","position":{"start":{"line":23,"column":39,"offset":889},"end":{"line":24,"column":46,"offset":977}}},{"type":"element","tagName":"a","properties":{"href":"https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags"},"children":[{"type":"text","value":"not\nideal","position":{"start":{"line":24,"column":47,"offset":978},"end":{"line":25,"column":6,"offset":987}}}],"position":{"start":{"line":24,"column":46,"offset":977},"end":{"line":25,"column":107,"offset":1088}}},{"type":"text","value":".\nIn practice we use ","position":{"start":{"line":25,"column":107,"offset":1088},"end":{"line":26,"column":20,"offset":1109}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"parsing","position":{"start":{"line":26,"column":21,"offset":1110},"end":{"line":26,"column":28,"offset":1117}}}],"position":{"start":{"line":26,"column":20,"offset":1109},"end":{"line":26,"column":29,"offset":1118}}},{"type":"text","value":" to interpret and convert syntax for nested\nexpressions like ","position":{"start":{"line":26,"column":29,"offset":1118},"end":{"line":27,"column":18,"offset":1179}}},{"type":"raw","value":"<code class=\"language-text\">{...}</code>","position":{"start":{"line":27,"column":18,"offset":1179},"end":{"line":27,"column":25,"offset":1186}}},{"type":"text","value":" into trees, which encode richer structural properties\nthan the textual representation.","position":{"start":{"line":27,"column":25,"offset":1186},"end":{"line":28,"column":33,"offset":1273}}}],"position":{"start":{"line":20,"column":1,"offset":621},"end":{"line":28,"column":33,"offset":1273}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/blog/structural-search-nested-expressions.png","alt":"Nested expressions figure"},"children":[],"position":{"start":{"line":30,"column":1,"offset":1275},"end":{"line":30,"column":77,"offset":1351}}},{"type":"text","value":" Figure 1: Nested\nexpressions can expand inside code blocks. Parsing converts nested expressions\ninto tree data structures.","position":{"start":{"line":30,"column":77,"offset":1351},"end":{"line":32,"column":27,"offset":1474}}}],"position":{"start":{"line":30,"column":1,"offset":1275},"end":{"line":32,"column":27,"offset":1474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Most code search today is not based on true parsing or tree data structures.\nInstead, we use literal strings or regular expressions which is good enough\nfor many kinds of searches. But these methods make it tricky to match precisely\non blocks or expressions that can expand inside statements like the loop\nin Figure 1. We could more easily and precisely search for richer syntactic\npatterns if today’s search tools ","position":{"start":{"line":34,"column":1,"offset":1476},"end":{"line":39,"column":34,"offset":1891}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"also","position":{"start":{"line":39,"column":35,"offset":1892},"end":{"line":39,"column":39,"offset":1896}}}],"position":{"start":{"line":39,"column":34,"offset":1891},"end":{"line":39,"column":40,"offset":1897}}},{"type":"text","value":" treated code as syntax trees, and\nthat’s the key idea behind structural search.","position":{"start":{"line":39,"column":40,"offset":1897},"end":{"line":40,"column":46,"offset":1977}}}],"position":{"start":{"line":34,"column":1,"offset":1476},"end":{"line":40,"column":46,"offset":1977}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Many neat developer and compiler tools already exist for querying or\nmatching tree structures (see ","position":{"start":{"line":42,"column":1,"offset":1979},"end":{"line":43,"column":31,"offset":2078}}},{"type":"element","tagName":"a","properties":{"href":"#additional-resources"},"children":[{"type":"text","value":"additional resources","position":{"start":{"line":43,"column":32,"offset":2079},"end":{"line":43,"column":52,"offset":2099}}}],"position":{"start":{"line":43,"column":31,"offset":2078},"end":{"line":43,"column":76,"offset":2123}}},{"type":"text","value":"\nat the end of this post!). But none are available at your fingertips, just\nseconds away from running on some of today’s largest and most popular\ncodebases. That is why we are happy to announce that Sourcegraph now supports a\nfirst release of structural search available at scale, for nearly every\nlanguage, directly from your browser.","position":{"start":{"line":43,"column":76,"offset":2123},"end":{"line":48,"column":38,"offset":2458}}}],"position":{"start":{"line":42,"column":1,"offset":1979},"end":{"line":48,"column":38,"offset":2458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"Examples-Show-me-examples","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#Examples-Show-me-examples","aria-label":"Examples Show me examples permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]},{"type":"text","value":"Examples! Show me examples!","position":{"start":{"line":50,"column":4,"offset":2463},"end":{"line":50,"column":31,"offset":2490}}}],"position":{"start":{"line":50,"column":1,"offset":2460},"end":{"line":50,"column":31,"offset":2490}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let’s look for things in the Linux kernel. After all, why not show\nstructural search working on one of the largest and most popular projects in\nopen source software?","position":{"start":{"line":52,"column":1,"offset":2492},"end":{"line":54,"column":22,"offset":2657}}}],"position":{"start":{"line":52,"column":1,"offset":2492},"end":{"line":54,"column":22,"offset":2657}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One important function is ","position":{"start":{"line":56,"column":1,"offset":2659},"end":{"line":56,"column":27,"offset":2685}}},{"type":"raw","value":"<code class=\"language-text\">copy_from_user</code>","position":{"start":{"line":56,"column":27,"offset":2685},"end":{"line":56,"column":43,"offset":2701}}},{"type":"text","value":", which copies content from userspace\nmemory into the kernelspace memory. This function has a history of ","position":{"start":{"line":56,"column":43,"offset":2701},"end":{"line":57,"column":68,"offset":2806}}},{"type":"element","tagName":"a","properties":{"href":"https://www.defcon.org/images/defcon-19/dc-19-presentations/Cook/DEFCON-19-Cook-Kernel-Exploitation.pdf"},"children":[{"type":"text","value":"careful\nauditing","position":{"start":{"line":57,"column":69,"offset":2807},"end":{"line":58,"column":9,"offset":2823}}}],"position":{"start":{"line":57,"column":68,"offset":2806},"end":{"line":58,"column":115,"offset":2929}}},{"type":"text","value":"\nbecause incorrect uses can (and have) lead to vulnerabilities. We can find all\n","position":{"start":{"line":58,"column":115,"offset":2929},"end":{"line":60,"column":1,"offset":3009}}},{"type":"raw","value":"<code class=\"language-text\">copy_from_user</code>","position":{"start":{"line":60,"column":1,"offset":3009},"end":{"line":60,"column":17,"offset":3025}}},{"type":"text","value":" calls with a query like ","position":{"start":{"line":60,"column":17,"offset":3025},"end":{"line":60,"column":42,"offset":3050}}},{"type":"raw","value":"<code class=\"language-text\">copy_from_user(:[args])</code>","position":{"start":{"line":60,"column":42,"offset":3050},"end":{"line":60,"column":67,"offset":3075}}},{"type":"text","value":". Try it\nlive (the ","position":{"start":{"line":60,"column":67,"offset":3075},"end":{"line":61,"column":11,"offset":3094}}},{"type":"raw","value":"<svg class=\"mdi-icon \" style=\"border:1px solid #2f9cf1; border-radius: 2px; fill:#2b2b2b; background:#cbd4e2\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">","position":{"start":{"line":61,"column":11,"offset":3094},"end":{"line":61,"column":164,"offset":3247}}},{"type":"raw","value":"<path d=\"M15,4V6H18V18H15V20H20V4M4,4V20H9V18H6V6H9V4H4Z\">","position":{"start":{"line":61,"column":164,"offset":3247},"end":{"line":61,"column":222,"offset":3305}}},{"type":"raw","value":"</path>","position":{"start":{"line":61,"column":222,"offset":3305},"end":{"line":61,"column":229,"offset":3312}}},{"type":"raw","value":"</svg>","position":{"start":{"line":61,"column":229,"offset":3312},"end":{"line":61,"column":235,"offset":3318}}},{"type":"text","value":" toggle means structural search is active):","position":{"start":{"line":61,"column":235,"offset":3318},"end":{"line":61,"column":278,"offset":3361}}}],"position":{"start":{"line":56,"column":1,"offset":2659},"end":{"line":61,"column":278,"offset":3361}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div style=\"padding-left: 2rem\">","position":{"start":{"line":63,"column":1,"offset":3363},"end":{"line":63,"column":33,"offset":3395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🔎 ","position":{"start":{"line":65,"column":1,"offset":3397},"end":{"line":65,"column":4,"offset":3400}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/torvalds/linux%24+copy_from_user%28:%5Bargs%5D%29&patternType=structural"},"children":[{"type":"text","value":"copy","position":{"start":{"line":65,"column":5,"offset":3401},"end":{"line":65,"column":9,"offset":3405}}},{"type":"text","value":"_","position":{"start":{"line":65,"column":9,"offset":3405},"end":{"line":65,"column":11,"offset":3407}}},{"type":"text","value":"from","position":{"start":{"line":65,"column":11,"offset":3407},"end":{"line":65,"column":15,"offset":3411}}},{"type":"text","value":"_","position":{"start":{"line":65,"column":15,"offset":3411},"end":{"line":65,"column":17,"offset":3413}}},{"type":"text","value":"user(:[args])","position":{"start":{"line":65,"column":17,"offset":3413},"end":{"line":65,"column":30,"offset":3426}}}],"position":{"start":{"line":65,"column":4,"offset":3400},"end":{"line":65,"column":160,"offset":3556}}}],"position":{"start":{"line":65,"column":1,"offset":3397},"end":{"line":65,"column":160,"offset":3556}}},{"type":"text","value":"\n"},{"type":"raw","value":"</div>","position":{"start":{"line":67,"column":1,"offset":3558},"end":{"line":67,"column":7,"offset":3564}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":69,"column":1,"offset":3566},"end":{"line":69,"column":5,"offset":3570}}},{"type":"raw","value":"<code class=\"language-text\">:[args]</code>","position":{"start":{"line":69,"column":5,"offset":3570},"end":{"line":69,"column":14,"offset":3579}}},{"type":"text","value":" syntax is a structural hole that matches all text between\nbalanced parentheses. The ","position":{"start":{"line":69,"column":14,"offset":3579},"end":{"line":70,"column":27,"offset":3664}}},{"type":"raw","value":"<code class=\"language-text\">args</code>","position":{"start":{"line":70,"column":27,"offset":3664},"end":{"line":70,"column":33,"offset":3670}}},{"type":"text","value":" part is just a descriptive identifier. We\nsupport ","position":{"start":{"line":70,"column":33,"offset":3670},"end":{"line":71,"column":9,"offset":3721}}},{"type":"element","tagName":"a","properties":{"href":"https://comby.dev/#match-syntax"},"children":[{"type":"text","value":"comby syntax","position":{"start":{"line":71,"column":10,"offset":3722},"end":{"line":71,"column":22,"offset":3734}}}],"position":{"start":{"line":71,"column":9,"offset":3721},"end":{"line":71,"column":56,"offset":3768}}},{"type":"text","value":", which is currently the\nunderlying engine behind structural search. You can find out more about the\nmatch syntax in our ","position":{"start":{"line":71,"column":56,"offset":3768},"end":{"line":73,"column":21,"offset":3889}}},{"type":"element","tagName":"a","properties":{"href":"https://docs.sourcegraph.com/code_search/reference/structural"},"children":[{"type":"text","value":"usage\ndocs","position":{"start":{"line":73,"column":22,"offset":3890},"end":{"line":74,"column":5,"offset":3900}}}],"position":{"start":{"line":73,"column":21,"offset":3889},"end":{"line":74,"column":69,"offset":3964}}},{"type":"text","value":", but for now it’s\nenough to just follow along this blog post!","position":{"start":{"line":74,"column":69,"offset":3964},"end":{"line":75,"column":44,"offset":4026}}}],"position":{"start":{"line":69,"column":1,"offset":3566},"end":{"line":75,"column":44,"offset":4026}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Of course, we ","position":{"start":{"line":77,"column":1,"offset":4028},"end":{"line":77,"column":15,"offset":4042}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"could","position":{"start":{"line":77,"column":16,"offset":4043},"end":{"line":77,"column":21,"offset":4048}}}],"position":{"start":{"line":77,"column":15,"offset":4042},"end":{"line":77,"column":22,"offset":4049}}},{"type":"text","value":" have run a simpler regex search for the prefix with\nsomething like\n","position":{"start":{"line":77,"column":22,"offset":4049},"end":{"line":79,"column":1,"offset":4117}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/torvalds/linux%24+copy_from_user%28+lang:c+&patternType=literal"},"children":[{"type":"text","value":"copy","position":{"start":{"line":79,"column":2,"offset":4118},"end":{"line":79,"column":6,"offset":4122}}},{"type":"text","value":"_","position":{"start":{"line":79,"column":6,"offset":4122},"end":{"line":79,"column":8,"offset":4124}}},{"type":"text","value":"from","position":{"start":{"line":79,"column":8,"offset":4124},"end":{"line":79,"column":12,"offset":4128}}},{"type":"text","value":"_","position":{"start":{"line":79,"column":12,"offset":4128},"end":{"line":79,"column":14,"offset":4130}}},{"type":"text","value":"user(","position":{"start":{"line":79,"column":14,"offset":4130},"end":{"line":79,"column":19,"offset":4135}}}],"position":{"start":{"line":79,"column":1,"offset":4117},"end":{"line":79,"column":140,"offset":4256}}},{"type":"text","value":"\nand get results more quickly, and sometimes that’s the right thing to do.","position":{"start":{"line":79,"column":140,"offset":4256},"end":{"line":80,"column":74,"offset":4330}}}],"position":{"start":{"line":77,"column":1,"offset":4028},"end":{"line":80,"column":74,"offset":4330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"But in other cases we can do more interesting things with structural search\nthat become awkward otherwise. For example, one result for the above query\nis:","position":{"start":{"line":82,"column":1,"offset":4332},"end":{"line":84,"column":4,"offset":4486}}}],"position":{"start":{"line":82,"column":1,"offset":4332},"end":{"line":84,"column":4,"offset":4486}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token function\">copy_from_user</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>txc<span class=\"token punctuation\">.</span>tick<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>txc_p<span class=\"token operator\">-></span>tick<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">timex32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>\n\t\t\t   <span class=\"token function\">offsetof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">timex32</span><span class=\"token punctuation\">,</span> tick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":86,"column":1,"offset":4488},"end":{"line":89,"column":4,"offset":4599}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"where the argument spans multiple lines. By default, ","position":{"start":{"line":91,"column":1,"offset":4601},"end":{"line":91,"column":54,"offset":4654}}},{"type":"raw","value":"<code class=\"language-text\">:[hole]</code>","position":{"start":{"line":91,"column":54,"offset":4654},"end":{"line":91,"column":63,"offset":4663}}},{"type":"text","value":" syntax matches\nacross multiple lines just like code structures can. An interesting thing about\nthe call above is that it calculates the size of memory using ","position":{"start":{"line":91,"column":63,"offset":4663},"end":{"line":93,"column":63,"offset":4821}}},{"type":"raw","value":"<code class=\"language-text\">sizeof(...) -\n...</code>","position":{"start":{"line":93,"column":63,"offset":4821},"end":{"line":94,"column":5,"offset":4840}}},{"type":"text","value":".  Calculating and checking the size of memory to copy can be more\nerror-prone than simple or static values. So, one thing we could check is\nwhether there are other calls that calculate the size of memory in a similar way to the\nabove, using subtraction and ","position":{"start":{"line":94,"column":5,"offset":4840},"end":{"line":97,"column":30,"offset":5098}}},{"type":"raw","value":"<code class=\"language-text\">sizeof</code>","position":{"start":{"line":97,"column":30,"offset":5098},"end":{"line":97,"column":38,"offset":5106}}},{"type":"text","value":":","position":{"start":{"line":97,"column":38,"offset":5106},"end":{"line":97,"column":39,"offset":5107}}}],"position":{"start":{"line":91,"column":1,"offset":4601},"end":{"line":97,"column":39,"offset":5107}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div style=\"padding-left: 2rem\">","position":{"start":{"line":99,"column":1,"offset":5109},"end":{"line":99,"column":33,"offset":5141}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🔎 ","position":{"start":{"line":101,"column":1,"offset":5143},"end":{"line":101,"column":4,"offset":5146}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/torvalds/linux%24+copy_from_user%28:%5Bdst%5D%2C+:%5B_%5D%2C+sizeof%28:%5B_%5D%29+-+:%5B_%5D%29&patternType=structural"},"children":[{"type":"text","value":"copy","position":{"start":{"line":101,"column":5,"offset":5147},"end":{"line":101,"column":9,"offset":5151}}},{"type":"text","value":"_","position":{"start":{"line":101,"column":9,"offset":5151},"end":{"line":101,"column":11,"offset":5153}}},{"type":"text","value":"from","position":{"start":{"line":101,"column":11,"offset":5153},"end":{"line":101,"column":15,"offset":5157}}},{"type":"text","value":"_","position":{"start":{"line":101,"column":15,"offset":5157},"end":{"line":101,"column":17,"offset":5159}}},{"type":"text","value":"user(:[dst], :[src], sizeof(:[","position":{"start":{"line":101,"column":17,"offset":5159},"end":{"line":101,"column":47,"offset":5189}}},{"type":"text","value":"_","position":{"start":{"line":101,"column":47,"offset":5189},"end":{"line":101,"column":49,"offset":5191}}},{"type":"text","value":"]) -\n:[","position":{"start":{"line":101,"column":49,"offset":5191},"end":{"line":102,"column":3,"offset":5198}}},{"type":"text","value":"_","position":{"start":{"line":102,"column":3,"offset":5198},"end":{"line":102,"column":5,"offset":5200}}},{"type":"text","value":"])","position":{"start":{"line":102,"column":5,"offset":5200},"end":{"line":102,"column":7,"offset":5202}}}],"position":{"start":{"line":101,"column":4,"offset":5146},"end":{"line":102,"column":183,"offset":5378}}}],"position":{"start":{"line":101,"column":1,"offset":5143},"end":{"line":102,"column":183,"offset":5378}}},{"type":"text","value":"\n"},{"type":"raw","value":"</div>","position":{"start":{"line":104,"column":1,"offset":5380},"end":{"line":104,"column":7,"offset":5386}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This query breaks up the original ","position":{"start":{"line":106,"column":1,"offset":5388},"end":{"line":106,"column":35,"offset":5422}}},{"type":"raw","value":"<code class=\"language-text\">:[args]</code>","position":{"start":{"line":106,"column":35,"offset":5422},"end":{"line":106,"column":44,"offset":5431}}},{"type":"text","value":" hole into holes for the destination\nbuffer ","position":{"start":{"line":106,"column":44,"offset":5431},"end":{"line":107,"column":8,"offset":5475}}},{"type":"raw","value":"<code class=\"language-text\">dst</code>","position":{"start":{"line":107,"column":8,"offset":5475},"end":{"line":107,"column":13,"offset":5480}}},{"type":"text","value":", source buffer ","position":{"start":{"line":107,"column":13,"offset":5480},"end":{"line":107,"column":29,"offset":5496}}},{"type":"raw","value":"<code class=\"language-text\">src</code>","position":{"start":{"line":107,"column":29,"offset":5496},"end":{"line":107,"column":34,"offset":5501}}},{"type":"text","value":", and the calculation for the memory size. The\n","position":{"start":{"line":107,"column":34,"offset":5501},"end":{"line":108,"column":1,"offset":5548}}},{"type":"raw","value":"<code class=\"language-text\">:[_]</code>","position":{"start":{"line":108,"column":1,"offset":5548},"end":{"line":108,"column":7,"offset":5554}}},{"type":"text","value":" syntax is just a hole that we don’t particularly care to name. This\nquery finds just a handful of results, so this is a rather uncommon pattern in\nthe code base!","position":{"start":{"line":108,"column":7,"offset":5554},"end":{"line":110,"column":15,"offset":5716}}}],"position":{"start":{"line":106,"column":1,"offset":5388},"end":{"line":110,"column":15,"offset":5716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Structural search can also identify patterns to clean up. For example, one ","position":{"start":{"line":112,"column":1,"offset":5718},"end":{"line":112,"column":76,"offset":5793}}},{"type":"element","tagName":"a","properties":{"href":"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=1fbc9f46a024535d95c3d5f136901decd86b109e"},"children":[{"type":"text","value":"cleanup patch","position":{"start":{"line":112,"column":77,"offset":5794},"end":{"line":112,"column":90,"offset":5807}}}],"position":{"start":{"line":112,"column":76,"offset":5793},"end":{"line":112,"column":211,"offset":5928}}},{"type":"text","value":" in the kernel looks like this:","position":{"start":{"line":112,"column":211,"offset":5928},"end":{"line":112,"column":242,"offset":5959}}}],"position":{"start":{"line":112,"column":1,"offset":5718},"end":{"line":112,"column":242,"offset":5959}}},{"type":"text","value":"\n"},{"type":"element","tagName":"img","properties":{"src":"/blog/structural-search-linux-cleanup-patch.png","alt":"Linux clean up patch"},"children":[],"position":{"start":{"line":114,"column":1,"offset":5961},"end":{"line":114,"column":73,"offset":6033}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here’s a query to easily find more of these patterns:","position":{"start":{"line":116,"column":1,"offset":6035},"end":{"line":116,"column":54,"offset":6088}}}],"position":{"start":{"line":116,"column":1,"offset":6035},"end":{"line":116,"column":54,"offset":6088}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div style=\"padding-left: 2rem\">","position":{"start":{"line":118,"column":1,"offset":6090},"end":{"line":118,"column":33,"offset":6122}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🔎 ","position":{"start":{"line":120,"column":1,"offset":6124},"end":{"line":120,"column":4,"offset":6127}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/torvalds/linux%24+list_del%28:%5Bx%5D%29%3B+list_add%28:%5Bx%5D%2C+:%5B_%5D%29&patternType=structural"},"children":[{"type":"text","value":"list","position":{"start":{"line":120,"column":5,"offset":6128},"end":{"line":120,"column":9,"offset":6132}}},{"type":"text","value":"_","position":{"start":{"line":120,"column":9,"offset":6132},"end":{"line":120,"column":11,"offset":6134}}},{"type":"text","value":"del(:[x]); list","position":{"start":{"line":120,"column":11,"offset":6134},"end":{"line":120,"column":26,"offset":6149}}},{"type":"text","value":"_","position":{"start":{"line":120,"column":26,"offset":6149},"end":{"line":120,"column":28,"offset":6151}}},{"type":"text","value":"add(:[x], :[","position":{"start":{"line":120,"column":28,"offset":6151},"end":{"line":120,"column":40,"offset":6163}}},{"type":"text","value":"_","position":{"start":{"line":120,"column":40,"offset":6163},"end":{"line":120,"column":42,"offset":6165}}},{"type":"text","value":"])","position":{"start":{"line":120,"column":42,"offset":6165},"end":{"line":120,"column":44,"offset":6167}}}],"position":{"start":{"line":120,"column":4,"offset":6127},"end":{"line":120,"column":203,"offset":6326}}}],"position":{"start":{"line":120,"column":1,"offset":6124},"end":{"line":120,"column":203,"offset":6326}}},{"type":"text","value":"\n"},{"type":"raw","value":"</div>","position":{"start":{"line":122,"column":1,"offset":6328},"end":{"line":122,"column":7,"offset":6334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This time, we’re using the same identifier ","position":{"start":{"line":124,"column":1,"offset":6336},"end":{"line":124,"column":44,"offset":6379}}},{"type":"raw","value":"<code class=\"language-text\">:[x]</code>","position":{"start":{"line":124,"column":44,"offset":6379},"end":{"line":124,"column":50,"offset":6385}}},{"type":"text","value":" twice, to make sure that the\nargument is the same for both ","position":{"start":{"line":124,"column":50,"offset":6385},"end":{"line":125,"column":31,"offset":6445}}},{"type":"raw","value":"<code class=\"language-text\">list_del</code>","position":{"start":{"line":125,"column":31,"offset":6445},"end":{"line":125,"column":41,"offset":6455}}},{"type":"text","value":" and ","position":{"start":{"line":125,"column":41,"offset":6455},"end":{"line":125,"column":46,"offset":6460}}},{"type":"raw","value":"<code class=\"language-text\">list_add</code>","position":{"start":{"line":125,"column":46,"offset":6460},"end":{"line":125,"column":56,"offset":6470}}},{"type":"text","value":" calls. We could choose\nany identifier, except for ","position":{"start":{"line":125,"column":56,"offset":6470},"end":{"line":126,"column":28,"offset":6521}}},{"type":"raw","value":"<code class=\"language-text\">:[_]</code>","position":{"start":{"line":126,"column":28,"offset":6521},"end":{"line":126,"column":34,"offset":6527}}},{"type":"text","value":", which is just a placeholder. The whitespace\nbetween the calls is interpreted to possibly include newlines, so there’s no\nissue matching these calls across newlines.","position":{"start":{"line":126,"column":34,"offset":6527},"end":{"line":128,"column":44,"offset":6693}}}],"position":{"start":{"line":124,"column":1,"offset":6336},"end":{"line":128,"column":44,"offset":6693}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Do note that structural search is purely syntactic, so there are some matches\nthat cannot cleaned up:","position":{"start":{"line":130,"column":1,"offset":6695},"end":{"line":131,"column":24,"offset":6796}}}],"position":{"start":{"line":130,"column":1,"offset":6695},"end":{"line":131,"column":24,"offset":6796}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">list_empty</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>page<span class=\"token operator\">-></span>lru<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">list_del</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>page<span class=\"token operator\">-></span>lru<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">list_add</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>page<span class=\"token operator\">-></span>lru<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pool<span class=\"token operator\">-></span>lru<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":133,"column":1,"offset":6798},"end":{"line":138,"column":4,"offset":6896}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this case, the problem is that the ","position":{"start":{"line":140,"column":1,"offset":6898},"end":{"line":140,"column":39,"offset":6936}}},{"type":"raw","value":"<code class=\"language-text\">list_del</code>","position":{"start":{"line":140,"column":39,"offset":6936},"end":{"line":140,"column":49,"offset":6946}}},{"type":"text","value":" call is in scope of the ","position":{"start":{"line":140,"column":49,"offset":6946},"end":{"line":140,"column":74,"offset":6971}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":140,"column":74,"offset":6971},"end":{"line":140,"column":78,"offset":6975}}},{"type":"text","value":"\nblock. However, the majority of matches carry our intended meaning. In the\nfuture, we are introducing ","position":{"start":{"line":140,"column":78,"offset":6975},"end":{"line":142,"column":28,"offset":7078}}},{"type":"element","tagName":"a","properties":{"href":"#whats-next-for-structural-search"},"children":[{"type":"text","value":"rules","position":{"start":{"line":142,"column":29,"offset":7079},"end":{"line":142,"column":34,"offset":7084}}}],"position":{"start":{"line":142,"column":28,"offset":7078},"end":{"line":142,"column":70,"offset":7120}}},{"type":"text","value":" to refine\nqueries further, giving you greater control for avoiding unintended matches.","position":{"start":{"line":142,"column":70,"offset":7120},"end":{"line":143,"column":77,"offset":7207}}}],"position":{"start":{"line":140,"column":1,"offset":6898},"end":{"line":143,"column":77,"offset":7207}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Structural search works on practically all languages, and understands the basic\nsyntactic structures for them (like strings, comments, and code blocks). Here’s\na short list that gives just a taste of some patterns you can try out:","position":{"start":{"line":145,"column":1,"offset":7209},"end":{"line":147,"column":71,"offset":7439}}}],"position":{"start":{"line":145,"column":1,"offset":7209},"end":{"line":147,"column":71,"offset":7439}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Java","position":{"start":{"line":149,"column":3,"offset":7443},"end":{"line":149,"column":7,"offset":7447}}}],"position":{"start":{"line":149,"column":1,"offset":7441},"end":{"line":149,"column":9,"offset":7449}}},{"type":"text","value":". Find try-catch-finally statements where the catch statement has no body (the ","position":{"start":{"line":149,"column":9,"offset":7449},"end":{"line":149,"column":88,"offset":7528}}},{"type":"raw","value":"<code class=\"language-text\">catch</code>","position":{"start":{"line":149,"column":88,"offset":7528},"end":{"line":149,"column":95,"offset":7535}}},{"type":"text","value":" clause could be omitted)","position":{"start":{"line":149,"column":95,"offset":7535},"end":{"line":149,"column":120,"offset":7560}}}],"position":{"start":{"line":149,"column":1,"offset":7441},"end":{"line":149,"column":120,"offset":7560}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div style=\"padding-left: 2rem\">","position":{"start":{"line":151,"column":1,"offset":7562},"end":{"line":151,"column":33,"offset":7594}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🔎 ","position":{"start":{"line":153,"column":1,"offset":7596},"end":{"line":153,"column":4,"offset":7599}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/elastic/elasticsearch%24+try+%7B:%5B_%5D%7D+catch+%28:%5Be%5D%29+%7B+%7D+finally+%7B:%5B_%5D%7D+lang:java&patternType=structural"},"children":[{"type":"text","value":"try {:[","position":{"start":{"line":153,"column":5,"offset":7600},"end":{"line":153,"column":12,"offset":7607}}},{"type":"text","value":"_","position":{"start":{"line":153,"column":12,"offset":7607},"end":{"line":153,"column":14,"offset":7609}}},{"type":"text","value":"]} catch (:[","position":{"start":{"line":153,"column":14,"offset":7609},"end":{"line":153,"column":26,"offset":7621}}},{"type":"text","value":"_","position":{"start":{"line":153,"column":26,"offset":7621},"end":{"line":153,"column":28,"offset":7623}}},{"type":"text","value":"]) { } finally {:[","position":{"start":{"line":153,"column":28,"offset":7623},"end":{"line":153,"column":46,"offset":7641}}},{"type":"text","value":"_","position":{"start":{"line":153,"column":46,"offset":7641},"end":{"line":153,"column":48,"offset":7643}}},{"type":"text","value":"]}","position":{"start":{"line":153,"column":48,"offset":7643},"end":{"line":153,"column":50,"offset":7645}}}],"position":{"start":{"line":153,"column":4,"offset":7599},"end":{"line":153,"column":236,"offset":7831}}}],"position":{"start":{"line":153,"column":1,"offset":7596},"end":{"line":153,"column":236,"offset":7831}}},{"type":"text","value":"\n"},{"type":"raw","value":"</div>","position":{"start":{"line":155,"column":1,"offset":7833},"end":{"line":155,"column":7,"offset":7839}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Python","position":{"start":{"line":157,"column":3,"offset":7843},"end":{"line":157,"column":9,"offset":7849}}}],"position":{"start":{"line":157,"column":1,"offset":7841},"end":{"line":157,"column":11,"offset":7851}}},{"type":"text","value":". Find old-style string formatted ","position":{"start":{"line":157,"column":11,"offset":7851},"end":{"line":157,"column":45,"offset":7885}}},{"type":"raw","value":"<code class=\"language-text\">print</code>","position":{"start":{"line":157,"column":45,"offset":7885},"end":{"line":157,"column":52,"offset":7892}}},{"type":"text","value":" statements","position":{"start":{"line":157,"column":52,"offset":7892},"end":{"line":157,"column":63,"offset":7903}}}],"position":{"start":{"line":157,"column":1,"offset":7841},"end":{"line":157,"column":63,"offset":7903}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div style=\"padding-left: 2rem\">","position":{"start":{"line":159,"column":1,"offset":7905},"end":{"line":159,"column":33,"offset":7937}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🔎 ","position":{"start":{"line":161,"column":1,"offset":7939},"end":{"line":161,"column":4,"offset":7942}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/django/django%24+print%28%22:%5Bargs%5D%22+%25+:%5Bv%5D%29+lang:python&patternType=structural"},"children":[{"type":"text","value":"print(”:[string]” % :[args])","position":{"start":{"line":161,"column":5,"offset":7943},"end":{"line":161,"column":33,"offset":7971}}}],"position":{"start":{"line":161,"column":4,"offset":7942},"end":{"line":161,"column":184,"offset":8122}}}],"position":{"start":{"line":161,"column":1,"offset":7939},"end":{"line":161,"column":184,"offset":8122}}},{"type":"text","value":"\n"},{"type":"raw","value":"</div>","position":{"start":{"line":163,"column":1,"offset":8124},"end":{"line":163,"column":7,"offset":8130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Rust","position":{"start":{"line":165,"column":3,"offset":8134},"end":{"line":165,"column":7,"offset":8138}}}],"position":{"start":{"line":165,"column":1,"offset":8132},"end":{"line":165,"column":9,"offset":8140}}},{"type":"text","value":". Find chained ","position":{"start":{"line":165,"column":9,"offset":8140},"end":{"line":165,"column":24,"offset":8155}}},{"type":"raw","value":"<code class=\"language-text\">filter(...).next()</code>","position":{"start":{"line":165,"column":24,"offset":8155},"end":{"line":165,"column":44,"offset":8175}}},{"type":"text","value":" that could simplified to ","position":{"start":{"line":165,"column":44,"offset":8175},"end":{"line":165,"column":70,"offset":8201}}},{"type":"raw","value":"<code class=\"language-text\">.find(...)</code>","position":{"start":{"line":165,"column":70,"offset":8201},"end":{"line":165,"column":82,"offset":8213}}},{"type":"text","value":" (based on ","position":{"start":{"line":165,"column":82,"offset":8213},"end":{"line":165,"column":93,"offset":8224}}},{"type":"element","tagName":"a","properties":{"href":"https://rust-lang.github.io/rust-clippy/master/index.html#filter_next"},"children":[{"type":"text","value":"lint","position":{"start":{"line":165,"column":94,"offset":8225},"end":{"line":165,"column":98,"offset":8229}}}],"position":{"start":{"line":165,"column":93,"offset":8224},"end":{"line":165,"column":170,"offset":8301}}},{"type":"text","value":")","position":{"start":{"line":165,"column":170,"offset":8301},"end":{"line":165,"column":171,"offset":8302}}}],"position":{"start":{"line":165,"column":1,"offset":8132},"end":{"line":165,"column":171,"offset":8302}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div style=\"padding-left: 2rem\">","position":{"start":{"line":167,"column":1,"offset":8304},"end":{"line":167,"column":33,"offset":8336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🔎 ","position":{"start":{"line":169,"column":1,"offset":8338},"end":{"line":169,"column":4,"offset":8341}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/openethereum/openethereum%24++.filter%28:%5B_%5D%29.next%28%29&patternType=structural"},"children":[{"type":"text","value":".filter(:[","position":{"start":{"line":169,"column":5,"offset":8342},"end":{"line":169,"column":15,"offset":8352}}},{"type":"text","value":"_","position":{"start":{"line":169,"column":15,"offset":8352},"end":{"line":169,"column":17,"offset":8354}}},{"type":"text","value":"]).next()","position":{"start":{"line":169,"column":17,"offset":8354},"end":{"line":169,"column":26,"offset":8363}}}],"position":{"start":{"line":169,"column":4,"offset":8341},"end":{"line":169,"column":169,"offset":8506}}},{"type":"text","value":" and ","position":{"start":{"line":169,"column":169,"offset":8506},"end":{"line":169,"column":174,"offset":8511}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/openethereum/openethereum%24+.filter%28:%5B_%5D%29+.next%28%29&patternType=structural"},"children":[{"type":"text","value":".filter(:[","position":{"start":{"line":169,"column":175,"offset":8512},"end":{"line":169,"column":185,"offset":8522}}},{"type":"text","value":"_","position":{"start":{"line":169,"column":185,"offset":8522},"end":{"line":169,"column":187,"offset":8524}}},{"type":"text","value":"]) .next()","position":{"start":{"line":169,"column":187,"offset":8524},"end":{"line":169,"column":197,"offset":8534}}}],"position":{"start":{"line":169,"column":174,"offset":8511},"end":{"line":169,"column":340,"offset":8677}}},{"type":"text","value":" (the latter matches across newlines)","position":{"start":{"line":169,"column":340,"offset":8677},"end":{"line":169,"column":377,"offset":8714}}}],"position":{"start":{"line":169,"column":1,"offset":8338},"end":{"line":169,"column":377,"offset":8714}}},{"type":"text","value":"\n"},{"type":"raw","value":"</div>","position":{"start":{"line":171,"column":1,"offset":8716},"end":{"line":171,"column":7,"offset":8722}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"ReactJS","position":{"start":{"line":173,"column":3,"offset":8726},"end":{"line":173,"column":10,"offset":8733}}}],"position":{"start":{"line":173,"column":1,"offset":8724},"end":{"line":173,"column":12,"offset":8735}}},{"type":"text","value":". Look for opportunities to optimize away arrow functions (see the ","position":{"start":{"line":173,"column":12,"offset":8735},"end":{"line":173,"column":79,"offset":8802}}},{"type":"element","tagName":"a","properties":{"href":"https://reactjs.org/docs/faq-functions.html#arrow-function-in-render"},"children":[{"type":"text","value":"React FAQ","position":{"start":{"line":173,"column":80,"offset":8803},"end":{"line":173,"column":89,"offset":8812}}}],"position":{"start":{"line":173,"column":79,"offset":8802},"end":{"line":173,"column":160,"offset":8883}}},{"type":"text","value":")","position":{"start":{"line":173,"column":160,"offset":8883},"end":{"line":173,"column":161,"offset":8884}}}],"position":{"start":{"line":173,"column":1,"offset":8724},"end":{"line":173,"column":161,"offset":8884}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div style=\"padding-left: 2rem\">","position":{"start":{"line":175,"column":1,"offset":8886},"end":{"line":175,"column":33,"offset":8918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🔎 ","position":{"start":{"line":177,"column":1,"offset":8920},"end":{"line":177,"column":4,"offset":8923}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/withspectrum/spectrum%24+:%5B%5Bprop%5D%5D%3D%7B%28%29+%3D%3E+:%5Bfn%5D%28%29%7D&patternType=structural"},"children":[{"type":"text","value":":[[prop]]={() => :[fn]()}","position":{"start":{"line":177,"column":5,"offset":8924},"end":{"line":177,"column":30,"offset":8949}}}],"position":{"start":{"line":177,"column":4,"offset":8923},"end":{"line":177,"column":191,"offset":9110}}}],"position":{"start":{"line":177,"column":1,"offset":8920},"end":{"line":177,"column":191,"offset":9110}}},{"type":"text","value":"\n"},{"type":"raw","value":"</div>","position":{"start":{"line":179,"column":1,"offset":9112},"end":{"line":179,"column":7,"offset":9118}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Go","position":{"start":{"line":181,"column":3,"offset":9122},"end":{"line":181,"column":5,"offset":9124}}}],"position":{"start":{"line":181,"column":1,"offset":9120},"end":{"line":181,"column":7,"offset":9126}}},{"type":"text","value":". Find ","position":{"start":{"line":181,"column":7,"offset":9126},"end":{"line":181,"column":14,"offset":9133}}},{"type":"raw","value":"<code class=\"language-text\">.type(...)</code>","position":{"start":{"line":181,"column":14,"offset":9133},"end":{"line":181,"column":26,"offset":9145}}},{"type":"text","value":" switches that contain a ","position":{"start":{"line":181,"column":26,"offset":9145},"end":{"line":181,"column":51,"offset":9170}}},{"type":"raw","value":"<code class=\"language-text\">nil:</code>","position":{"start":{"line":181,"column":51,"offset":9170},"end":{"line":181,"column":57,"offset":9176}}},{"type":"text","value":" case","position":{"start":{"line":181,"column":57,"offset":9176},"end":{"line":181,"column":62,"offset":9181}}}],"position":{"start":{"line":181,"column":1,"offset":9120},"end":{"line":181,"column":62,"offset":9181}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div style=\"padding-left: 2rem\">","position":{"start":{"line":183,"column":1,"offset":9183},"end":{"line":183,"column":33,"offset":9215}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🔎 ","position":{"start":{"line":185,"column":1,"offset":9217},"end":{"line":185,"column":4,"offset":9220}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/golang/go%24+switch+:%5B%5Bv%5D%5D+:%3D+:%5Bx%5D.%28type%29+%7B:%5B_%5D+case+nil:+:%5B_%5D%7D+lang:go+&patternType=structural"},"children":[{"type":"text","value":"switch :[[v]] := :[x].(type) {:[","position":{"start":{"line":185,"column":5,"offset":9221},"end":{"line":185,"column":37,"offset":9253}}},{"type":"text","value":"_","position":{"start":{"line":185,"column":37,"offset":9253},"end":{"line":185,"column":39,"offset":9255}}},{"type":"text","value":"] case nil: :[","position":{"start":{"line":185,"column":39,"offset":9255},"end":{"line":185,"column":53,"offset":9269}}},{"type":"text","value":"_","position":{"start":{"line":185,"column":53,"offset":9269},"end":{"line":185,"column":55,"offset":9271}}},{"type":"text","value":"]}","position":{"start":{"line":185,"column":55,"offset":9271},"end":{"line":185,"column":57,"offset":9273}}}],"position":{"start":{"line":185,"column":4,"offset":9220},"end":{"line":185,"column":240,"offset":9456}}}],"position":{"start":{"line":185,"column":1,"offset":9217},"end":{"line":185,"column":240,"offset":9456}}},{"type":"text","value":"\n"},{"type":"raw","value":"</div>","position":{"start":{"line":187,"column":1,"offset":9458},"end":{"line":187,"column":7,"offset":9464}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Clojure","position":{"start":{"line":189,"column":3,"offset":9468},"end":{"line":189,"column":10,"offset":9475}}}],"position":{"start":{"line":189,"column":1,"offset":9466},"end":{"line":189,"column":12,"offset":9477}}},{"type":"text","value":". Find ","position":{"start":{"line":189,"column":12,"offset":9477},"end":{"line":189,"column":19,"offset":9484}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":189,"column":19,"offset":9484},"end":{"line":189,"column":25,"offset":9490}}},{"type":"text","value":" expressions with an ","position":{"start":{"line":189,"column":25,"offset":9490},"end":{"line":189,"column":46,"offset":9511}}},{"type":"raw","value":"<code class=\"language-text\">:else nil</code>","position":{"start":{"line":189,"column":46,"offset":9511},"end":{"line":189,"column":57,"offset":9522}}},{"type":"text","value":" branch at the end","position":{"start":{"line":189,"column":57,"offset":9522},"end":{"line":189,"column":75,"offset":9540}}}],"position":{"start":{"line":189,"column":1,"offset":9466},"end":{"line":189,"column":75,"offset":9540}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div style=\"padding-left: 2rem\">","position":{"start":{"line":191,"column":1,"offset":9542},"end":{"line":191,"column":33,"offset":9574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🔎 ","position":{"start":{"line":193,"column":1,"offset":9576},"end":{"line":193,"column":4,"offset":9579}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/LightTable/LightTable%24+%28cond+:%5B_%5D+:else+nil%29+lang:clojure&patternType=structural"},"children":[{"type":"text","value":"(cond :[","position":{"start":{"line":193,"column":5,"offset":9580},"end":{"line":193,"column":13,"offset":9588}}},{"type":"text","value":"_","position":{"start":{"line":193,"column":13,"offset":9588},"end":{"line":193,"column":15,"offset":9590}}},{"type":"text","value":"] :else nil)","position":{"start":{"line":193,"column":15,"offset":9590},"end":{"line":193,"column":27,"offset":9602}}}],"position":{"start":{"line":193,"column":4,"offset":9579},"end":{"line":193,"column":175,"offset":9750}}}],"position":{"start":{"line":193,"column":1,"offset":9576},"end":{"line":193,"column":175,"offset":9750}}},{"type":"text","value":"\n"},{"type":"raw","value":"</div>","position":{"start":{"line":195,"column":1,"offset":9752},"end":{"line":195,"column":7,"offset":9758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Dart","position":{"start":{"line":197,"column":3,"offset":9762},"end":{"line":197,"column":7,"offset":9766}}}],"position":{"start":{"line":197,"column":1,"offset":9760},"end":{"line":197,"column":9,"offset":9768}}},{"type":"text","value":". Find ","position":{"start":{"line":197,"column":9,"offset":9768},"end":{"line":197,"column":16,"offset":9775}}},{"type":"raw","value":"<code class=\"language-text\">Image.asset</code>","position":{"start":{"line":197,"column":16,"offset":9775},"end":{"line":197,"column":29,"offset":9788}}},{"type":"text","value":" constructors in the Flutter API where width is initialized to ","position":{"start":{"line":197,"column":29,"offset":9788},"end":{"line":197,"column":92,"offset":9851}}},{"type":"raw","value":"<code class=\"language-text\">100</code>","position":{"start":{"line":197,"column":92,"offset":9851},"end":{"line":197,"column":97,"offset":9856}}}],"position":{"start":{"line":197,"column":1,"offset":9760},"end":{"line":197,"column":97,"offset":9856}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div style=\"padding-left: 2rem\">","position":{"start":{"line":199,"column":1,"offset":9858},"end":{"line":199,"column":33,"offset":9890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"🔎 ","position":{"start":{"line":201,"column":1,"offset":9892},"end":{"line":201,"column":4,"offset":9895}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=repo:%5Egithub%5C.com/flutter/flutter%24+Image.asset%28:%5B_%5D+width:+100%2C+:%5B_%5D%29+lang:dart&patternType=structural"},"children":[{"type":"text","value":"Image.asset(:[","position":{"start":{"line":201,"column":5,"offset":9896},"end":{"line":201,"column":19,"offset":9910}}},{"type":"text","value":"_","position":{"start":{"line":201,"column":19,"offset":9910},"end":{"line":201,"column":21,"offset":9912}}},{"type":"text","value":"] width: 100, :[","position":{"start":{"line":201,"column":21,"offset":9912},"end":{"line":201,"column":37,"offset":9928}}},{"type":"text","value":"_","position":{"start":{"line":201,"column":37,"offset":9928},"end":{"line":201,"column":39,"offset":9930}}},{"type":"text","value":"])","position":{"start":{"line":201,"column":39,"offset":9930},"end":{"line":201,"column":41,"offset":9932}}}],"position":{"start":{"line":201,"column":4,"offset":9895},"end":{"line":201,"column":199,"offset":10090}}}],"position":{"start":{"line":201,"column":1,"offset":9892},"end":{"line":201,"column":199,"offset":10090}}},{"type":"text","value":"\n"},{"type":"raw","value":"</div>","position":{"start":{"line":203,"column":1,"offset":10092},"end":{"line":203,"column":7,"offset":10098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"Youre-ready-to-try-it-yourself","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#Youre-ready-to-try-it-yourself","aria-label":"Youre ready to try it yourself permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]},{"type":"text","value":"You’re ready to try it yourself","position":{"start":{"line":205,"column":4,"offset":10103},"end":{"line":205,"column":35,"offset":10134}}}],"position":{"start":{"line":205,"column":1,"offset":10100},"end":{"line":205,"column":35,"offset":10134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*","position":{"start":{"line":207,"column":1,"offset":10136},"end":{"line":207,"column":2,"offset":10137}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Here are a couple of things to keep in mind","position":{"start":{"line":207,"column":3,"offset":10138},"end":{"line":207,"column":46,"offset":10181}}}],"position":{"start":{"line":207,"column":2,"offset":10137},"end":{"line":207,"column":47,"offset":10182}}}],"position":{"start":{"line":207,"column":1,"offset":10136},"end":{"line":207,"column":47,"offset":10182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Structural search on ","position":{"start":{"line":209,"column":3,"offset":10186},"end":{"line":209,"column":24,"offset":10207}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=&patternType=structural"},"children":[{"type":"text","value":"sourcegraph.com","position":{"start":{"line":209,"column":25,"offset":10208},"end":{"line":209,"column":40,"offset":10223}}}],"position":{"start":{"line":209,"column":24,"offset":10207},"end":{"line":209,"column":99,"offset":10282}}},{"type":"text","value":" is only enabled for roughly the top\n10,000 most popular repositories on GitHub, and on the most recent commit of\nthe default branch. We plan to open it up to all mirrored repositories and you\ncan ","position":{"start":{"line":209,"column":99,"offset":10282},"end":{"line":212,"column":7,"offset":10485}}},{"type":"element","tagName":"a","properties":{"href":"#whats-next-for-structural-search"},"children":[{"type":"text","value":"help make that happen faster","position":{"start":{"line":212,"column":8,"offset":10486},"end":{"line":212,"column":36,"offset":10514}}}],"position":{"start":{"line":212,"column":7,"offset":10485},"end":{"line":212,"column":72,"offset":10550}}},{"type":"text","value":".","position":{"start":{"line":212,"column":72,"offset":10550},"end":{"line":212,"column":73,"offset":10551}}}],"position":{"start":{"line":209,"column":1,"offset":10184},"end":{"line":213,"column":1,"offset":10552}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You can ","position":{"start":{"line":214,"column":3,"offset":10555},"end":{"line":214,"column":11,"offset":10563}}},{"type":"element","tagName":"a","properties":{"href":"https://docs.sourcegraph.com/#quickstart"},"children":[{"type":"text","value":"set up Sourcegraph\nlocally","position":{"start":{"line":214,"column":12,"offset":10564},"end":{"line":215,"column":10,"offset":10592}}}],"position":{"start":{"line":214,"column":11,"offset":10563},"end":{"line":215,"column":53,"offset":10635}}},{"type":"text","value":" for your own code or any\nother repository you’d like and get all of the structural search goodness.\nRunning locally will also likely be faster than using ","position":{"start":{"line":215,"column":53,"offset":10635},"end":{"line":217,"column":57,"offset":10794}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search?q=&patternType=structural"},"children":[{"type":"text","value":"sourcegraph.com","position":{"start":{"line":217,"column":58,"offset":10795},"end":{"line":217,"column":73,"offset":10810}}}],"position":{"start":{"line":217,"column":57,"offset":10794},"end":{"line":217,"column":132,"offset":10869}}},{"type":"text","value":".","position":{"start":{"line":217,"column":132,"offset":10869},"end":{"line":217,"column":133,"offset":10870}}}],"position":{"start":{"line":214,"column":1,"offset":10553},"end":{"line":218,"column":1,"offset":10871}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You might be running structural search for the first time on a repo! 😎 If\nyour query times out, give the page a refresh because we’re probably warming up\nthe cache for you.","position":{"start":{"line":219,"column":3,"offset":10874},"end":{"line":221,"column":19,"offset":11047}}}],"position":{"start":{"line":219,"column":1,"offset":10872},"end":{"line":222,"column":1,"offset":11048}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"See our ","position":{"start":{"line":223,"column":3,"offset":11051},"end":{"line":223,"column":11,"offset":11059}}},{"type":"element","tagName":"a","properties":{"href":"https://docs.sourcegraph.com/code_search/reference/structural"},"children":[{"type":"text","value":"usage\ndocumentation","position":{"start":{"line":223,"column":12,"offset":11060},"end":{"line":224,"column":16,"offset":11081}}}],"position":{"start":{"line":223,"column":11,"offset":11059},"end":{"line":224,"column":80,"offset":11145}}},{"type":"text","value":" for more\nhelp and the ","position":{"start":{"line":224,"column":80,"offset":11145},"end":{"line":225,"column":16,"offset":11170}}},{"type":"element","tagName":"a","properties":{"href":"https://comby.dev/#faq"},"children":[{"type":"text","value":"comby FAQ","position":{"start":{"line":225,"column":17,"offset":11171},"end":{"line":225,"column":26,"offset":11180}}}],"position":{"start":{"line":225,"column":16,"offset":11170},"end":{"line":225,"column":51,"offset":11205}}},{"type":"text","value":" for more details and known\nlimitations of the matching engine.","position":{"start":{"line":225,"column":51,"offset":11205},"end":{"line":226,"column":38,"offset":11270}}}],"position":{"start":{"line":223,"column":1,"offset":11049},"end":{"line":226,"column":38,"offset":11270}}},{"type":"text","value":"\n"}],"position":{"start":{"line":209,"column":1,"offset":10184},"end":{"line":226,"column":38,"offset":11270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*","position":{"start":{"line":228,"column":1,"offset":11272},"end":{"line":228,"column":2,"offset":11273}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A quick note on regular expressions: How is structural search different?","position":{"start":{"line":228,"column":3,"offset":11274},"end":{"line":228,"column":75,"offset":11346}}}],"position":{"start":{"line":228,"column":2,"offset":11273},"end":{"line":228,"column":76,"offset":11347}}}],"position":{"start":{"line":228,"column":1,"offset":11272},"end":{"line":228,"column":76,"offset":11347}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Structural search is not a replacement for regexp search. It’s another tool in\nyour toolkit that works well for matching blocks of code or expressions, and\nsimplifies catching buggy syntactic patterns. If you only want to find a simple\nstring or pattern, consider using Sourcegraph’s literal or regexp\n","position":{"start":{"line":230,"column":1,"offset":11349},"end":{"line":234,"column":1,"offset":11651}}},{"type":"element","tagName":"a","properties":{"href":"https://sourcegraph.com/search"},"children":[{"type":"text","value":"search","position":{"start":{"line":234,"column":2,"offset":11652},"end":{"line":234,"column":8,"offset":11658}}}],"position":{"start":{"line":234,"column":1,"offset":11651},"end":{"line":234,"column":41,"offset":11691}}},{"type":"text","value":", because these queries are typically\nmuch faster! For a more detailed breakdown, see the short comparison at the ","position":{"start":{"line":234,"column":41,"offset":11691},"end":{"line":235,"column":77,"offset":11805}}},{"type":"element","tagName":"a","properties":{"href":"#structural-search-vs-more-traditional-text-search"},"children":[{"type":"text","value":"end\nof this post","position":{"start":{"line":235,"column":78,"offset":11806},"end":{"line":236,"column":13,"offset":11822}}}],"position":{"start":{"line":235,"column":77,"offset":11805},"end":{"line":236,"column":66,"offset":11875}}},{"type":"text","value":".","position":{"start":{"line":236,"column":66,"offset":11875},"end":{"line":236,"column":67,"offset":11876}}}],"position":{"start":{"line":230,"column":1,"offset":11349},"end":{"line":236,"column":67,"offset":11876}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"That’s it for now. You’ll find some additional resources and\ndiscussion below if you’re interested in reading more. Happy searching!","position":{"start":{"line":238,"column":1,"offset":11878},"end":{"line":239,"column":72,"offset":12010}}}],"position":{"start":{"line":238,"column":1,"offset":11878},"end":{"line":239,"column":72,"offset":12010}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":241,"column":1,"offset":12012},"end":{"line":241,"column":4,"offset":12015}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"Additional-resources","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#Additional-resources","aria-label":"Additional resources permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]},{"type":"text","value":"Additional resources","position":{"start":{"line":243,"column":5,"offset":12021},"end":{"line":243,"column":25,"offset":12041}}}],"position":{"start":{"line":243,"column":1,"offset":12017},"end":{"line":243,"column":25,"offset":12041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There is an immense amount of existing parsing and query tools for syntax\ntrees. Most compilers today offer a library or visitor framework, and linters\nor static analyzers may build on them to implement checks. Here is a\nnon-exhaustive short list of tools related to structural search and matching\nthat you may be familiar with or find interesting:","position":{"start":{"line":245,"column":1,"offset":12043},"end":{"line":249,"column":51,"offset":12391}}}],"position":{"start":{"line":245,"column":1,"offset":12043},"end":{"line":249,"column":51,"offset":12391}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"IntelliJ IDE support for structural search and replace, or ","position":{"start":{"line":251,"column":3,"offset":12395},"end":{"line":251,"column":62,"offset":12454}}},{"type":"raw","value":"<code class=\"language-text\">SSR</code>","position":{"start":{"line":251,"column":62,"offset":12454},"end":{"line":251,"column":67,"offset":12459}}},{"type":"text","value":" [","position":{"start":{"line":251,"column":67,"offset":12459},"end":{"line":251,"column":69,"offset":12461}}},{"type":"element","tagName":"a","properties":{"href":"https://www.jetbrains.com/help/idea/structural-search-and-replace.html"},"children":[{"type":"text","value":"1","position":{"start":{"line":251,"column":70,"offset":12462},"end":{"line":251,"column":71,"offset":12463}}}],"position":{"start":{"line":251,"column":69,"offset":12461},"end":{"line":251,"column":144,"offset":12536}}},{"type":"text","value":"]","position":{"start":{"line":251,"column":144,"offset":12536},"end":{"line":251,"column":145,"offset":12537}}}],"position":{"start":{"line":251,"column":1,"offset":12393},"end":{"line":251,"column":145,"offset":12537}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Coccinelle for C code [","position":{"start":{"line":252,"column":3,"offset":12540},"end":{"line":252,"column":26,"offset":12563}}},{"type":"element","tagName":"a","properties":{"href":"http://coccinelle.lip6.fr/"},"children":[{"type":"text","value":"1","position":{"start":{"line":252,"column":27,"offset":12564},"end":{"line":252,"column":28,"offset":12565}}}],"position":{"start":{"line":252,"column":26,"offset":12563},"end":{"line":252,"column":57,"offset":12594}}},{"type":"text","value":"]. Our list example above is taken from the Coccinelle work, and there are ","position":{"start":{"line":252,"column":57,"offset":12594},"end":{"line":252,"column":132,"offset":12669}}},{"type":"element","tagName":"a","properties":{"href":"http://coccinelle.lip6.fr/impact_linux.php"},"children":[{"type":"text","value":"many more patterns","position":{"start":{"line":252,"column":133,"offset":12670},"end":{"line":252,"column":151,"offset":12688}}}],"position":{"start":{"line":252,"column":132,"offset":12669},"end":{"line":252,"column":196,"offset":12733}}},{"type":"text","value":" to browse through and try out!","position":{"start":{"line":252,"column":196,"offset":12733},"end":{"line":252,"column":227,"offset":12764}}}],"position":{"start":{"line":252,"column":1,"offset":12538},"end":{"line":252,"column":227,"offset":12764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">Sgrep</code>","position":{"start":{"line":253,"column":3,"offset":12767},"end":{"line":253,"column":10,"offset":12774}}},{"type":"text","value":", or Syntactical grep (multiple languages) [","position":{"start":{"line":253,"column":10,"offset":12774},"end":{"line":253,"column":54,"offset":12818}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/facebookarchive/pfff/wiki/Sgrep"},"children":[{"type":"text","value":"1","position":{"start":{"line":253,"column":55,"offset":12819},"end":{"line":253,"column":56,"offset":12820}}}],"position":{"start":{"line":253,"column":54,"offset":12818},"end":{"line":253,"column":109,"offset":12873}}},{"type":"text","value":"], [","position":{"start":{"line":253,"column":109,"offset":12873},"end":{"line":253,"column":113,"offset":12877}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/returntocorp/bento/blob/master/SGREP-README.md"},"children":[{"type":"text","value":"2","position":{"start":{"line":253,"column":114,"offset":12878},"end":{"line":253,"column":115,"offset":12879}}}],"position":{"start":{"line":253,"column":113,"offset":12877},"end":{"line":253,"column":183,"offset":12947}}},{"type":"text","value":"]","position":{"start":{"line":253,"column":183,"offset":12947},"end":{"line":253,"column":184,"offset":12948}}}],"position":{"start":{"line":253,"column":1,"offset":12765},"end":{"line":253,"column":184,"offset":12948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">tree-sitter</code>","position":{"start":{"line":254,"column":3,"offset":12951},"end":{"line":254,"column":16,"offset":12964}}},{"type":"text","value":", parsing and query framework (multiple languages) [","position":{"start":{"line":254,"column":16,"offset":12964},"end":{"line":254,"column":68,"offset":13016}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/tree-sitter/tree-sitter"},"children":[{"type":"text","value":"1","position":{"start":{"line":254,"column":69,"offset":13017},"end":{"line":254,"column":70,"offset":13018}}}],"position":{"start":{"line":254,"column":68,"offset":13016},"end":{"line":254,"column":115,"offset":13063}}},{"type":"text","value":"]","position":{"start":{"line":254,"column":115,"offset":13063},"end":{"line":254,"column":116,"offset":13064}}}],"position":{"start":{"line":254,"column":1,"offset":12949},"end":{"line":254,"column":116,"offset":13064}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">gogrep</code>","position":{"start":{"line":255,"column":3,"offset":13067},"end":{"line":255,"column":11,"offset":13075}}},{"type":"text","value":" for declaratively matching Go syntax trees [","position":{"start":{"line":255,"column":11,"offset":13075},"end":{"line":255,"column":56,"offset":13120}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/mvdan/gogrep"},"children":[{"type":"text","value":"1","position":{"start":{"line":255,"column":57,"offset":13121},"end":{"line":255,"column":58,"offset":13122}}}],"position":{"start":{"line":255,"column":56,"offset":13120},"end":{"line":255,"column":92,"offset":13156}}},{"type":"text","value":"]","position":{"start":{"line":255,"column":92,"offset":13156},"end":{"line":255,"column":93,"offset":13157}}}],"position":{"start":{"line":255,"column":1,"offset":13065},"end":{"line":255,"column":93,"offset":13157}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">Spoon</code>","position":{"start":{"line":256,"column":3,"offset":13160},"end":{"line":256,"column":10,"offset":13167}}},{"type":"text","value":" for declaratively matching Java code [","position":{"start":{"line":256,"column":10,"offset":13167},"end":{"line":256,"column":49,"offset":13206}}},{"type":"element","tagName":"a","properties":{"href":"http://spoon.gforge.inria.fr/matcher.html"},"children":[{"type":"text","value":"1","position":{"start":{"line":256,"column":50,"offset":13207},"end":{"line":256,"column":51,"offset":13208}}}],"position":{"start":{"line":256,"column":49,"offset":13206},"end":{"line":256,"column":95,"offset":13252}}},{"type":"text","value":"], [","position":{"start":{"line":256,"column":95,"offset":13252},"end":{"line":256,"column":99,"offset":13256}}},{"type":"element","tagName":"a","properties":{"href":"http://spoon.gforge.inria.fr/pattern.html"},"children":[{"type":"text","value":"2","position":{"start":{"line":256,"column":100,"offset":13257},"end":{"line":256,"column":101,"offset":13258}}}],"position":{"start":{"line":256,"column":99,"offset":13256},"end":{"line":256,"column":145,"offset":13302}}},{"type":"text","value":"]","position":{"start":{"line":256,"column":145,"offset":13302},"end":{"line":256,"column":146,"offset":13303}}}],"position":{"start":{"line":256,"column":1,"offset":13158},"end":{"line":256,"column":146,"offset":13303}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">Spoofax</code>","position":{"start":{"line":257,"column":3,"offset":13306},"end":{"line":257,"column":12,"offset":13315}}},{"type":"text","value":", AST querying using the Spoofax Language Workbench (multiple languages) [","position":{"start":{"line":257,"column":12,"offset":13315},"end":{"line":257,"column":86,"offset":13389}}},{"type":"element","tagName":"a","properties":{"href":"http://www.metaborg.org/en/latest/source/langdev/meta/lang/flowspec/stratego-api.html#querying-analysis"},"children":[{"type":"text","value":"1","position":{"start":{"line":257,"column":87,"offset":13390},"end":{"line":257,"column":88,"offset":13391}}}],"position":{"start":{"line":257,"column":86,"offset":13389},"end":{"line":257,"column":194,"offset":13497}}},{"type":"text","value":"]","position":{"start":{"line":257,"column":194,"offset":13497},"end":{"line":257,"column":195,"offset":13498}}}],"position":{"start":{"line":257,"column":1,"offset":13304},"end":{"line":257,"column":195,"offset":13498}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">CodeQL</code>","position":{"start":{"line":258,"column":3,"offset":13501},"end":{"line":258,"column":11,"offset":13509}}},{"type":"text","value":", querying tree and graph properties for a number of poular languages [","position":{"start":{"line":258,"column":11,"offset":13509},"end":{"line":258,"column":82,"offset":13580}}},{"type":"element","tagName":"a","properties":{"href":"https://securitylab.github.com/tools/codeql"},"children":[{"type":"text","value":"1","position":{"start":{"line":258,"column":83,"offset":13581},"end":{"line":258,"column":84,"offset":13582}}}],"position":{"start":{"line":258,"column":82,"offset":13580},"end":{"line":258,"column":130,"offset":13628}}},{"type":"text","value":"]","position":{"start":{"line":258,"column":130,"offset":13628},"end":{"line":258,"column":131,"offset":13629}}}],"position":{"start":{"line":258,"column":1,"offset":13499},"end":{"line":258,"column":131,"offset":13629}}},{"type":"text","value":"\n"}],"position":{"start":{"line":251,"column":1,"offset":12393},"end":{"line":258,"column":131,"offset":13629}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At Sourcegraph we’re continually looking to improve developer tools, and to\nintegrate richer search functionality. If you find these tools or others\nvaluable, share your thoughts with us at ","position":{"start":{"line":260,"column":1,"offset":13631},"end":{"line":262,"column":42,"offset":13821}}},{"type":"element","tagName":"a","properties":{"href":"mailto:feedback@sourcegraph.com"},"children":[{"type":"text","value":"feedback@sourcegraph.com","position":{"start":{"line":262,"column":43,"offset":13822},"end":{"line":262,"column":67,"offset":13846}}}],"position":{"start":{"line":262,"column":42,"offset":13821},"end":{"line":262,"column":68,"offset":13847}}},{"type":"text","value":".","position":{"start":{"line":262,"column":68,"offset":13847},"end":{"line":262,"column":69,"offset":13848}}}],"position":{"start":{"line":260,"column":1,"offset":13631},"end":{"line":262,"column":69,"offset":13848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":264,"column":1,"offset":13850},"end":{"line":264,"column":4,"offset":13853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"Structural-search-vs-more-traditional-text-search","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#Structural-search-vs-more-traditional-text-search","aria-label":"Structural search vs more traditional text search permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]},{"type":"text","value":"Structural search vs. more traditional text search","position":{"start":{"line":266,"column":5,"offset":13859},"end":{"line":266,"column":55,"offset":13909}}}],"position":{"start":{"line":266,"column":1,"offset":13855},"end":{"line":266,"column":55,"offset":13909}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here are some key differences and comparisons to regexp-based text search:","position":{"start":{"line":268,"column":1,"offset":13911},"end":{"line":268,"column":75,"offset":13985}}}],"position":{"start":{"line":268,"column":1,"offset":13911},"end":{"line":268,"column":75,"offset":13985}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Structural search is language-aware. For example, it understands certain pieces of syntax for code blocks, string delimiters, and comments. The language can be forced by specifying the ","position":{"start":{"line":270,"column":3,"offset":13989},"end":{"line":270,"column":188,"offset":14174}}},{"type":"raw","value":"<code class=\"language-text\">lang:</code>","position":{"start":{"line":270,"column":188,"offset":14174},"end":{"line":270,"column":195,"offset":14181}}},{"type":"text","value":" filter. If omitted, we perform a best-effort to infer the language based on matching file extensions, or fall back to a generic structural matcher.","position":{"start":{"line":270,"column":195,"offset":14181},"end":{"line":270,"column":343,"offset":14329}}}],"position":{"start":{"line":270,"column":1,"offset":13987},"end":{"line":271,"column":1,"offset":14330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">:[hole]</code>","position":{"start":{"line":272,"column":3,"offset":14333},"end":{"line":272,"column":12,"offset":14342}}},{"type":"text","value":" syntax matches across multiple lines by default.","position":{"start":{"line":272,"column":12,"offset":14342},"end":{"line":272,"column":61,"offset":14391}}}],"position":{"start":{"line":272,"column":1,"offset":14331},"end":{"line":273,"column":1,"offset":14392}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Whitespace matching is fuzzy: a space in the pattern will match contiguous\nwhitespace including newlines in the code.","position":{"start":{"line":274,"column":3,"offset":14395},"end":{"line":275,"column":45,"offset":14514}}}],"position":{"start":{"line":274,"column":1,"offset":14393},"end":{"line":276,"column":1,"offset":14515}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Delimiters like ","position":{"start":{"line":277,"column":3,"offset":14518},"end":{"line":277,"column":19,"offset":14534}}},{"type":"raw","value":"<code class=\"language-text\">{}</code>","position":{"start":{"line":277,"column":19,"offset":14534},"end":{"line":277,"column":23,"offset":14538}}},{"type":"text","value":", ","position":{"start":{"line":277,"column":23,"offset":14538},"end":{"line":277,"column":25,"offset":14540}}},{"type":"raw","value":"<code class=\"language-text\">[]</code>","position":{"start":{"line":277,"column":25,"offset":14540},"end":{"line":277,"column":29,"offset":14544}}},{"type":"text","value":", ","position":{"start":{"line":277,"column":29,"offset":14544},"end":{"line":277,"column":31,"offset":14546}}},{"type":"raw","value":"<code class=\"language-text\">()</code>","position":{"start":{"line":277,"column":31,"offset":14546},"end":{"line":277,"column":35,"offset":14550}}},{"type":"text","value":" are expected to ","position":{"start":{"line":277,"column":35,"offset":14550},"end":{"line":277,"column":52,"offset":14567}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"always","position":{"start":{"line":277,"column":53,"offset":14568},"end":{"line":277,"column":59,"offset":14574}}}],"position":{"start":{"line":277,"column":52,"offset":14567},"end":{"line":277,"column":60,"offset":14575}}},{"type":"text","value":" be balanced\n(depending on language). For example, a dangling parenthesis in Java is\nconsidered a syntax error and can’t be matched. A dangling delimiter in the\npattern implies a syntax error (prefer regexp search if you want to match\ndangling delimiters).","position":{"start":{"line":277,"column":60,"offset":14575},"end":{"line":281,"column":24,"offset":14839}}}],"position":{"start":{"line":277,"column":1,"offset":14516},"end":{"line":282,"column":1,"offset":14840}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Built-in equality constraints when using the same identifier in patterns like\n","position":{"start":{"line":283,"column":3,"offset":14843},"end":{"line":284,"column":3,"offset":14923}}},{"type":"raw","value":"<code class=\"language-text\">foo(:[x], :[x])</code>","position":{"start":{"line":284,"column":3,"offset":14923},"end":{"line":284,"column":20,"offset":14940}}},{"type":"text","value":". This is similar to, e.g., backreferences in regular\nexpressions.","position":{"start":{"line":284,"column":20,"offset":14940},"end":{"line":285,"column":15,"offset":15008}}}],"position":{"start":{"line":283,"column":1,"offset":14841},"end":{"line":286,"column":1,"offset":15009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"No explicit support for matching regexp character classes like ","position":{"start":{"line":287,"column":3,"offset":15012},"end":{"line":287,"column":66,"offset":15075}}},{"type":"raw","value":"<code class=\"language-text\">\\d+</code>","position":{"start":{"line":287,"column":66,"offset":15075},"end":{"line":287,"column":71,"offset":15080}}},{"type":"text","value":" yet.","position":{"start":{"line":287,"column":71,"offset":15080},"end":{"line":287,"column":76,"offset":15085}}}],"position":{"start":{"line":287,"column":1,"offset":15010},"end":{"line":287,"column":76,"offset":15085}}},{"type":"text","value":"\n"}],"position":{"start":{"line":270,"column":1,"offset":13987},"end":{"line":287,"column":76,"offset":15085}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For a complete overview, refer to ","position":{"start":{"line":289,"column":1,"offset":15087},"end":{"line":289,"column":35,"offset":15121}}},{"type":"element","tagName":"a","properties":{"href":"https://comby.dev"},"children":[{"type":"text","value":"comby.dev","position":{"start":{"line":289,"column":36,"offset":15122},"end":{"line":289,"column":45,"offset":15131}}}],"position":{"start":{"line":289,"column":35,"offset":15121},"end":{"line":289,"column":65,"offset":15151}}},{"type":"text","value":".","position":{"start":{"line":289,"column":65,"offset":15151},"end":{"line":289,"column":66,"offset":15152}}}],"position":{"start":{"line":289,"column":1,"offset":15087},"end":{"line":289,"column":66,"offset":15152}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":291,"column":1,"offset":15154},"end":{"line":291,"column":4,"offset":15157}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"Feedback","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#Feedback","aria-label":"Feedback permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 18 95 120\" height=\"18\" width=\"18\"><path d=\"M53.69,78.7H37.94l-5.85,25H21.74l5.85-25H15.89L18,69.1H29.84l4.65-19.65H23.39l2.1-9.6H36.74l5.7-23.7H52.79l-5.7,23.7H62.84l5.7-23.7H78.89l-5.7,23.7H84.74l-2.4,9.6H70.94L66.29,69.1H77.24l-2.4,9.6H64l-5.85,25H47.84Zm-13.5-9.6H55.94l4.65-19.65H44.84Z\"/></svg>"}]},{"type":"text","value":"Feedback","position":{"start":{"line":293,"column":4,"offset":15162},"end":{"line":293,"column":12,"offset":15170}}}],"position":{"start":{"line":293,"column":1,"offset":15159},"end":{"line":293,"column":12,"offset":15170}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Have a usage question or suggestion about structural search? ","position":{"start":{"line":295,"column":3,"offset":15174},"end":{"line":295,"column":64,"offset":15235}}},{"type":"element","tagName":"a","properties":{"href":"https://twitter.com/sourcegraph"},"children":[{"type":"text","value":"Send us a tweet","position":{"start":{"line":295,"column":65,"offset":15236},"end":{"line":295,"column":80,"offset":15251}}}],"position":{"start":{"line":295,"column":64,"offset":15235},"end":{"line":295,"column":114,"offset":15285}}},{"type":"text","value":" or e-mail us at ","position":{"start":{"line":295,"column":114,"offset":15285},"end":{"line":295,"column":131,"offset":15302}}},{"type":"element","tagName":"a","properties":{"href":"mailto:feedback@sourcegraph.com"},"children":[{"type":"text","value":"feedback@sourcegraph.com","position":{"start":{"line":295,"column":132,"offset":15303},"end":{"line":295,"column":156,"offset":15327}}}],"position":{"start":{"line":295,"column":131,"offset":15302},"end":{"line":295,"column":157,"offset":15328}}}],"position":{"start":{"line":295,"column":1,"offset":15172},"end":{"line":295,"column":157,"offset":15328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Run into a bug? ","position":{"start":{"line":296,"column":3,"offset":15331},"end":{"line":296,"column":19,"offset":15347}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/sourcegraph/sourcegraph/issues/new?assignees=&labels=&template=bug_report.md&title="},"children":[{"type":"text","value":"Create an issue on GitHub","position":{"start":{"line":296,"column":20,"offset":15348},"end":{"line":296,"column":45,"offset":15373}}}],"position":{"start":{"line":296,"column":19,"offset":15347},"end":{"line":296,"column":150,"offset":15478}}}],"position":{"start":{"line":296,"column":1,"offset":15329},"end":{"line":296,"column":150,"offset":15478}}},{"type":"text","value":"\n"}],"position":{"start":{"line":295,"column":1,"offset":15172},"end":{"line":296,"column":150,"offset":15478}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":297,"column":1,"offset":15479}}}}