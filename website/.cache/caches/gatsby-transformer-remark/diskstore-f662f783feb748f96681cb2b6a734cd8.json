{"expireTime":9007200905229169000,"key":"transformer-remark-markdown-ast-d99a040e5529e7409316b0eb22832b3d-gatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-unwrap-imagesgatsby-remark-imagesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"html","value":"<!-- START AUDIO -->","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":21,"offset":21},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<audio className=\"object-center\" src=\"https://www.buzzsprout.com/1097978/9020726-kirsten-westeinde-shopify.mp3\" controls preload=\"none\">","position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":137,"offset":159},"indent":[]}},{"type":"html","value":"</audio>","position":{"start":{"line":4,"column":137,"offset":159},"end":{"line":4,"column":145,"offset":167},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":145,"offset":167},"indent":[]}},{"type":"html","value":"<!-- END AUDIO -->","position":{"start":{"line":6,"column":1,"offset":169},"end":{"line":6,"column":19,"offset":187},"indent":[]}},{"type":"html","value":"<!-- START GUESTS -->","position":{"start":{"line":8,"column":1,"offset":189},"end":{"line":8,"column":22,"offset":210},"indent":[]}},{"type":"html","value":"<span>\nKirsten Westeinde, Beyang Liu\n</span>\n<!-- END GUESTS -->","position":{"start":{"line":9,"column":1,"offset":211},"end":{"line":12,"column":20,"offset":275},"indent":[1,1,1]}},{"type":"html","value":"<!-- START SUMMARY -->","position":{"start":{"line":14,"column":1,"offset":277},"end":{"line":14,"column":23,"offset":299},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"What’s it like to deconstruct one of the largest Rails codebases (3 million lines of code, 500,000+ lifetime commits, 40,000 files) on the planet? And why didn’t Shopify follow the standard path to microservices, but instead choose to modularize their monolith?","position":{"start":{"line":16,"column":1,"offset":301},"end":{"line":16,"column":262,"offset":562},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":301},"end":{"line":16,"column":262,"offset":562},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this episode, ","position":{"start":{"line":18,"column":1,"offset":564},"end":{"line":18,"column":18,"offset":581},"indent":[]}},{"type":"link","title":null,"url":"https://www.kirstenwesteinde.com/","children":[{"type":"text","value":"Kirsten Westeinde","position":{"start":{"line":18,"column":19,"offset":582},"end":{"line":18,"column":36,"offset":599},"indent":[]}}],"position":{"start":{"line":18,"column":18,"offset":581},"end":{"line":18,"column":72,"offset":635},"indent":[]}},{"type":"text","value":", software development manager at Shopify, describes how her team led the charge in refactoring and re-architecting Shopify’s massive codebase, sharing the winding path they took to make this massive change and the way they tackled both the technical and human sides of this challenge.","position":{"start":{"line":18,"column":72,"offset":635},"end":{"line":18,"column":357,"offset":920},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":564},"end":{"line":18,"column":357,"offset":920},"indent":[]}},{"type":"html","value":"<!-- END SUMMARY -->","position":{"start":{"line":20,"column":1,"offset":922},"end":{"line":20,"column":21,"offset":942},"indent":[]}},{"type":"html","value":"<!-- START SHOWNOTES -->","position":{"start":{"line":22,"column":1,"offset":944},"end":{"line":22,"column":25,"offset":968},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ruby on Rails: ","position":{"start":{"line":24,"column":1,"offset":970},"end":{"line":24,"column":16,"offset":985},"indent":[]}},{"type":"link","title":null,"url":"https://rubyonrails.org/","children":[{"type":"text","value":"https://rubyonrails.org/","position":{"start":{"line":24,"column":16,"offset":985},"end":{"line":24,"column":40,"offset":1009},"indent":[]}}],"position":{"start":{"line":24,"column":16,"offset":985},"end":{"line":24,"column":40,"offset":1009},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":970},"end":{"line":24,"column":40,"offset":1009},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"React: ","position":{"start":{"line":26,"column":1,"offset":1011},"end":{"line":26,"column":8,"offset":1018},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/","children":[{"type":"text","value":"https://reactjs.org/","position":{"start":{"line":26,"column":8,"offset":1018},"end":{"line":26,"column":28,"offset":1038},"indent":[]}}],"position":{"start":{"line":26,"column":8,"offset":1018},"end":{"line":26,"column":28,"offset":1038},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1011},"end":{"line":26,"column":28,"offset":1038},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"React Native: ","position":{"start":{"line":28,"column":1,"offset":1040},"end":{"line":28,"column":15,"offset":1054},"indent":[]}},{"type":"link","title":null,"url":"https://reactnative.dev/","children":[{"type":"text","value":"https://reactnative.dev/","position":{"start":{"line":28,"column":15,"offset":1054},"end":{"line":28,"column":39,"offset":1078},"indent":[]}}],"position":{"start":{"line":28,"column":15,"offset":1054},"end":{"line":28,"column":39,"offset":1078},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1040},"end":{"line":28,"column":39,"offset":1078},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Go: ","position":{"start":{"line":30,"column":1,"offset":1080},"end":{"line":30,"column":5,"offset":1084},"indent":[]}},{"type":"link","title":null,"url":"https://golang.org/","children":[{"type":"text","value":"https://golang.org/","position":{"start":{"line":30,"column":5,"offset":1084},"end":{"line":30,"column":24,"offset":1103},"indent":[]}}],"position":{"start":{"line":30,"column":5,"offset":1084},"end":{"line":30,"column":24,"offset":1103},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1080},"end":{"line":30,"column":24,"offset":1103},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Python: ","position":{"start":{"line":32,"column":1,"offset":1105},"end":{"line":32,"column":9,"offset":1113},"indent":[]}},{"type":"link","title":null,"url":"https://www.python.org/","children":[{"type":"text","value":"https://www.python.org/","position":{"start":{"line":32,"column":9,"offset":1113},"end":{"line":32,"column":32,"offset":1136},"indent":[]}}],"position":{"start":{"line":32,"column":9,"offset":1113},"end":{"line":32,"column":32,"offset":1136},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1105},"end":{"line":32,"column":32,"offset":1136},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scala: ","position":{"start":{"line":34,"column":1,"offset":1138},"end":{"line":34,"column":8,"offset":1145},"indent":[]}},{"type":"link","title":null,"url":"https://www.scala-lang.org/","children":[{"type":"text","value":"https://www.scala-lang.org/","position":{"start":{"line":34,"column":8,"offset":1145},"end":{"line":34,"column":35,"offset":1172},"indent":[]}}],"position":{"start":{"line":34,"column":8,"offset":1145},"end":{"line":34,"column":35,"offset":1172},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1138},"end":{"line":34,"column":35,"offset":1172},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Kirsten Westeinde: ","position":{"start":{"line":36,"column":1,"offset":1174},"end":{"line":36,"column":20,"offset":1193},"indent":[]}},{"type":"link","title":null,"url":"https://www.kirstenwesteinde.com/","children":[{"type":"text","value":"https://www.kirstenwesteinde.com/","position":{"start":{"line":36,"column":20,"offset":1193},"end":{"line":36,"column":53,"offset":1226},"indent":[]}}],"position":{"start":{"line":36,"column":20,"offset":1193},"end":{"line":36,"column":53,"offset":1226},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1174},"end":{"line":36,"column":53,"offset":1226},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(Blog post) Deconstructing the Monolith: Designing Software that Maximizes Developer Productivity by Kirsten Westeinde: ","position":{"start":{"line":38,"column":1,"offset":1228},"end":{"line":38,"column":121,"offset":1348},"indent":[]}},{"type":"link","title":null,"url":"https://shopify.engineering/deconstructing-monolith-designing-software-maximizes-developer-productivity","children":[{"type":"text","value":"https://shopify.engineering/deconstructing-monolith-designing-software-maximizes-developer-productivity","position":{"start":{"line":38,"column":121,"offset":1348},"end":{"line":38,"column":224,"offset":1451},"indent":[]}}],"position":{"start":{"line":38,"column":121,"offset":1348},"end":{"line":38,"column":224,"offset":1451},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1228},"end":{"line":38,"column":224,"offset":1451},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(2019 Shopify Unite conference talk) Deconstructing the Monolith: ","position":{"start":{"line":40,"column":1,"offset":1453},"end":{"line":40,"column":67,"offset":1519},"indent":[]}},{"type":"link","title":null,"url":"https://www.youtube.com/watch?v=ISYKx8sa53g","children":[{"type":"text","value":"https://www.youtube.com/watch?v=ISYKx8sa53g","position":{"start":{"line":40,"column":67,"offset":1519},"end":{"line":40,"column":110,"offset":1562},"indent":[]}}],"position":{"start":{"line":40,"column":67,"offset":1519},"end":{"line":40,"column":110,"offset":1562},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1453},"end":{"line":40,"column":110,"offset":1562},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(Blog post) Under Deconstruction: The State of Shopify’s Monolith by Philip\nMüller: ","position":{"start":{"line":42,"column":1,"offset":1564},"end":{"line":43,"column":9,"offset":1648},"indent":[1]}},{"type":"link","title":null,"url":"https://shopify.engineering/shopify-monolith","children":[{"type":"text","value":"https://shopify.engineering/shopify-monolith","position":{"start":{"line":43,"column":9,"offset":1648},"end":{"line":43,"column":53,"offset":1692},"indent":[]}}],"position":{"start":{"line":43,"column":9,"offset":1648},"end":{"line":43,"column":53,"offset":1692},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1564},"end":{"line":43,"column":53,"offset":1692},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Wedge: Deprecated internal Shopify tool that was built to score engineering teams on how well they are doing on their componentization journey.","position":{"start":{"line":45,"column":1,"offset":1694},"end":{"line":45,"column":144,"offset":1837},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1694},"end":{"line":45,"column":144,"offset":1837},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Packwerk: ","position":{"start":{"line":47,"column":1,"offset":1839},"end":{"line":47,"column":11,"offset":1849},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/Shopify/packwerk","children":[{"type":"text","value":"https://github.com/Shopify/packwerk","position":{"start":{"line":47,"column":11,"offset":1849},"end":{"line":47,"column":46,"offset":1884},"indent":[]}}],"position":{"start":{"line":47,"column":11,"offset":1849},"end":{"line":47,"column":46,"offset":1884},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1839},"end":{"line":47,"column":46,"offset":1884},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Shipit presents Packwerk: ","position":{"start":{"line":49,"column":1,"offset":1886},"end":{"line":49,"column":27,"offset":1912},"indent":[]}},{"type":"link","title":null,"url":"https://www.youtube.com/watch?v=olEA157z7kU","children":[{"type":"text","value":"https://www.youtube.com/watch?v=olEA157z7kU","position":{"start":{"line":49,"column":27,"offset":1912},"end":{"line":49,"column":70,"offset":1955},"indent":[]}}],"position":{"start":{"line":49,"column":27,"offset":1912},"end":{"line":49,"column":70,"offset":1955},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1886},"end":{"line":49,"column":70,"offset":1955},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(Blog post) Enforcing Modularity in Rails App with Packwerk by Maple Ong: ","position":{"start":{"line":51,"column":1,"offset":1957},"end":{"line":51,"column":75,"offset":2031},"indent":[]}},{"type":"link","title":null,"url":"https://shopify.engineering/enforcing-modularity-rails-apps-packwerk","children":[{"type":"text","value":"https://shopify.engineering/enforcing-modularity-rails-apps-packwerk","position":{"start":{"line":51,"column":75,"offset":2031},"end":{"line":51,"column":143,"offset":2099},"indent":[]}}],"position":{"start":{"line":51,"column":75,"offset":2031},"end":{"line":51,"column":143,"offset":2099},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1957},"end":{"line":51,"column":143,"offset":2099},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Zeitwerk: ","position":{"start":{"line":53,"column":1,"offset":2101},"end":{"line":53,"column":11,"offset":2111},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/fxn/zeitwerk","children":[{"type":"text","value":"https://github.com/fxn/zeitwerk","position":{"start":{"line":53,"column":11,"offset":2111},"end":{"line":53,"column":42,"offset":2142},"indent":[]}}],"position":{"start":{"line":53,"column":11,"offset":2111},"end":{"line":53,"column":42,"offset":2142},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":2101},"end":{"line":53,"column":42,"offset":2142},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Martin Fowler’s design stamina hypothesis: ","position":{"start":{"line":55,"column":1,"offset":2144},"end":{"line":55,"column":44,"offset":2187},"indent":[]}},{"type":"link","title":null,"url":"https://martinfowler.com/bliki/DesignStaminaHypothesis.html","children":[{"type":"text","value":"https://martinfowler.com/bliki/DesignStaminaHypothesis.html","position":{"start":{"line":55,"column":44,"offset":2187},"end":{"line":55,"column":103,"offset":2246},"indent":[]}}],"position":{"start":{"line":55,"column":44,"offset":2187},"end":{"line":55,"column":103,"offset":2246},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2144},"end":{"line":55,"column":103,"offset":2246},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Shopify Fulfillment Network (SFN): ","position":{"start":{"line":57,"column":1,"offset":2248},"end":{"line":57,"column":36,"offset":2283},"indent":[]}},{"type":"link","title":null,"url":"https://www.shopify.com/fulfillment","children":[{"type":"text","value":"https://www.shopify.com/fulfillment","position":{"start":{"line":57,"column":36,"offset":2283},"end":{"line":57,"column":71,"offset":2318},"indent":[]}}],"position":{"start":{"line":57,"column":36,"offset":2283},"end":{"line":57,"column":71,"offset":2318},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2248},"end":{"line":57,"column":71,"offset":2318},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Kafka: ","position":{"start":{"line":59,"column":1,"offset":2320},"end":{"line":59,"column":8,"offset":2327},"indent":[]}},{"type":"link","title":null,"url":"https://kafka.apache.org/","children":[{"type":"text","value":"https://kafka.apache.org/","position":{"start":{"line":59,"column":8,"offset":2327},"end":{"line":59,"column":33,"offset":2352},"indent":[]}}],"position":{"start":{"line":59,"column":8,"offset":2327},"end":{"line":59,"column":33,"offset":2352},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2320},"end":{"line":59,"column":33,"offset":2352},"indent":[]}},{"type":"html","value":"<!-- END SHOWNOTES -->","position":{"start":{"line":61,"column":1,"offset":2354},"end":{"line":61,"column":23,"offset":2376},"indent":[]}},{"type":"html","value":"<!-- START TRANSCRIPT -->","position":{"start":{"line":63,"column":1,"offset":2378},"end":{"line":63,"column":26,"offset":2403},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":65,"column":3,"offset":2407},"end":{"line":65,"column":14,"offset":2418},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2405},"end":{"line":65,"column":16,"offset":2420},"indent":[]}},{"type":"text","value":"\nAll right. I’m here with Kirsten Westeinde. Kirsten is a software development manager at Shopify where I understand, Kirsten, you’ve been involved in a years-long effort to decompose Shopify’s massive Rails monolith, or perhaps like multiple monoliths now, into smaller, modular components. Is that right?","position":{"start":{"line":65,"column":16,"offset":2420},"end":{"line":66,"column":306,"offset":2726},"indent":[1]}}],"position":{"start":{"line":65,"column":1,"offset":2405},"end":{"line":66,"column":306,"offset":2726},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":68,"column":3,"offset":2730},"end":{"line":68,"column":21,"offset":2748},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2728},"end":{"line":68,"column":23,"offset":2750},"indent":[]}},{"type":"text","value":"\nThat’s right.","position":{"start":{"line":68,"column":23,"offset":2750},"end":{"line":69,"column":14,"offset":2764},"indent":[1]}}],"position":{"start":{"line":68,"column":1,"offset":2728},"end":{"line":69,"column":14,"offset":2764},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":71,"column":3,"offset":2768},"end":{"line":71,"column":14,"offset":2779},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":2766},"end":{"line":71,"column":16,"offset":2781},"indent":[]}},{"type":"text","value":"\nCool. Thanks so much for taking the time. Sounds like a massive effort and I’ll bet that Shopify engineering has been very busy over the past year. So I really appreciate you taking the time to come chat with us and share things that you’ve learned along the way.","position":{"start":{"line":71,"column":16,"offset":2781},"end":{"line":72,"column":264,"offset":3045},"indent":[1]}}],"position":{"start":{"line":71,"column":1,"offset":2766},"end":{"line":72,"column":264,"offset":3045},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":74,"column":3,"offset":3049},"end":{"line":74,"column":21,"offset":3067},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":3047},"end":{"line":74,"column":23,"offset":3069},"indent":[]}},{"type":"text","value":"\nAbsolutely. Thanks for having me.","position":{"start":{"line":74,"column":23,"offset":3069},"end":{"line":75,"column":34,"offset":3103},"indent":[1]}}],"position":{"start":{"line":74,"column":1,"offset":3047},"end":{"line":75,"column":34,"offset":3103},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":77,"column":3,"offset":3107},"end":{"line":77,"column":14,"offset":3118},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":3105},"end":{"line":77,"column":16,"offset":3120},"indent":[]}},{"type":"text","value":"\nSo I think the focal point of our conversation is really going to be this massive decomposition effort. It’s going to be very fascinating to hear about because I think a lot of engineering teams try to undertake projects like this, especially as the company grows and some succeed, but a lot end in failure. And so I think you have a lot to share in terms of how you can pull this off successfully. But before we dive into all of that, we have kind of a tradition on the podcast of first asking people how they got into programming. Right now you’re this software development manager who’s in charge of this very complex project. You have a lot of responsibility, but at some point you had your first contact with code. So, for you, what was that? And how did that start your journey into this world of bits and ones and zeros that we live in?","position":{"start":{"line":77,"column":16,"offset":3120},"end":{"line":78,"column":844,"offset":3964},"indent":[1]}}],"position":{"start":{"line":77,"column":1,"offset":3105},"end":{"line":78,"column":844,"offset":3964},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":80,"column":3,"offset":3968},"end":{"line":80,"column":21,"offset":3986},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":3966},"end":{"line":80,"column":23,"offset":3988},"indent":[]}},{"type":"text","value":"\nAbsolutely. Yeah. If you had asked me when I was a kid, I definitely would not have thought that this would have been where I ended up. I actually didn’t even really know what programming was before I went into university, but I did end up studying engineering just because of my love for math and science. And the school that I went to ended up doing a general first year where we basically took classes from all of the different engineering tracks to kind of learn a bit about them and decide where we wanted to go. And so in my first year I took a programming class, we learned C++ and it turns out that I really enjoyed it and I was really good at it. And the more that I looked into it, it seemed like a really interesting field to be in. So I had originally thought I would be a civil engineer, but I’m very glad that I ended up going the direction I did.","position":{"start":{"line":80,"column":23,"offset":3988},"end":{"line":81,"column":862,"offset":4850},"indent":[1]}}],"position":{"start":{"line":80,"column":1,"offset":3966},"end":{"line":81,"column":862,"offset":4850},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":83,"column":3,"offset":4854},"end":{"line":83,"column":14,"offset":4865},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":4852},"end":{"line":83,"column":16,"offset":4867},"indent":[]}},{"type":"text","value":"\nC++—that’s kind of like diving off the deep end as your first programming language.","position":{"start":{"line":83,"column":16,"offset":4867},"end":{"line":84,"column":84,"offset":4951},"indent":[1]}}],"position":{"start":{"line":83,"column":1,"offset":4852},"end":{"line":84,"column":84,"offset":4951},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":86,"column":3,"offset":4955},"end":{"line":86,"column":21,"offset":4973},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":4953},"end":{"line":86,"column":23,"offset":4975},"indent":[]}},{"type":"text","value":"\nYeah. It’s always funny to hear what people learn in school. It’s rarely what we end up using in the field I find.","position":{"start":{"line":86,"column":23,"offset":4975},"end":{"line":87,"column":115,"offset":5090},"indent":[1]}}],"position":{"start":{"line":86,"column":1,"offset":4953},"end":{"line":87,"column":115,"offset":5090},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":89,"column":3,"offset":5094},"end":{"line":89,"column":14,"offset":5105},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":5092},"end":{"line":89,"column":16,"offset":5107},"indent":[]}},{"type":"text","value":"\nOkay, cool. So from your start in university, what was kind of like the rough journey from there to joining Shopify?","position":{"start":{"line":89,"column":16,"offset":5107},"end":{"line":90,"column":117,"offset":5224},"indent":[1]}}],"position":{"start":{"line":89,"column":1,"offset":5092},"end":{"line":90,"column":117,"offset":5224},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":92,"column":3,"offset":5228},"end":{"line":92,"column":21,"offset":5246},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":5226},"end":{"line":92,"column":23,"offset":5248},"indent":[]}},{"type":"text","value":"\nI actually joined Shopify as an intern while I was still in school. So I did two internships with other companies, but I joined Shopify in 2013 out of the Ottawa office as an intern. And then I ended up doing three different internships with Shopify before joining full-time after I graduated. And through those internships, I really used the time to try out different things and try to understand where my interests lay. So I did some web development using Rails, I did some mobile development, and I worked on some internal tools and external products. So I’ve really had my hands in a lot of different places at Shopify over the years.","position":{"start":{"line":92,"column":23,"offset":5248},"end":{"line":93,"column":639,"offset":5887},"indent":[1]}}],"position":{"start":{"line":92,"column":1,"offset":5226},"end":{"line":93,"column":639,"offset":5887},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":95,"column":3,"offset":5891},"end":{"line":95,"column":14,"offset":5902},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":5889},"end":{"line":95,"column":16,"offset":5904},"indent":[]}},{"type":"text","value":"\nAwesome. So you’ve been there since 2013, which means you’ve kind of had a front-row seat to this whole rocket ship trajectory that the company has been on.","position":{"start":{"line":95,"column":16,"offset":5904},"end":{"line":96,"column":157,"offset":6061},"indent":[1]}}],"position":{"start":{"line":95,"column":1,"offset":5889},"end":{"line":96,"column":157,"offset":6061},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":98,"column":3,"offset":6065},"end":{"line":98,"column":21,"offset":6083},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":6063},"end":{"line":98,"column":23,"offset":6085},"indent":[]}},{"type":"text","value":"\nYeah, it’s been crazy. When I joined, I think we had 150 people working for the company and we’re a private company. We had only a handful of merchants. We had one small office and fast forward to today, we’re an international company. We have… It’s hard to keep track of it, but I think like 7,000+ employees. At this time, we’re a public company, so much has changed. I like to tell people I haven’t worked at the same company for eight years, I’ve actually worked at like eight different companies because it really has been changing that quickly.","position":{"start":{"line":98,"column":23,"offset":6085},"end":{"line":99,"column":553,"offset":6638},"indent":[1]}}],"position":{"start":{"line":98,"column":1,"offset":6063},"end":{"line":99,"column":553,"offset":6638},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":101,"column":3,"offset":6642},"end":{"line":101,"column":14,"offset":6653},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":6640},"end":{"line":101,"column":16,"offset":6655},"indent":[]}},{"type":"text","value":"\nYeah, that’s crazy. And you know, I bet most of our listeners don’t need any introduction to Shopify, but you know, for the one or two people who’ve been living under a rock for the past seven years. Chances are… If you bought anything on the internet, chances are you use Shopify, right? Because you power a lot of the kind of small businesses and independent operators that sell things online right?","position":{"start":{"line":101,"column":16,"offset":6655},"end":{"line":102,"column":404,"offset":7059},"indent":[1]}}],"position":{"start":{"line":101,"column":1,"offset":6640},"end":{"line":102,"column":404,"offset":7059},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":104,"column":3,"offset":7063},"end":{"line":104,"column":21,"offset":7081},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":7061},"end":{"line":104,"column":23,"offset":7083},"indent":[]}},{"type":"text","value":"\nYeah, that’s correct. We actually don’t force the Shopify brand on our merchant sites. So a lot of people buy things from Shopify stores without actually knowing that they have. But basically if you bought something from Amazon and it was enjoyable or—sorry—from anything other than Amazon and it was an enjoyable experience, that was probably a Shopify store.","position":{"start":{"line":104,"column":23,"offset":7083},"end":{"line":105,"column":361,"offset":7444},"indent":[1]}}],"position":{"start":{"line":104,"column":1,"offset":7061},"end":{"line":105,"column":361,"offset":7444},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":107,"column":3,"offset":7448},"end":{"line":107,"column":14,"offset":7459},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":7446},"end":{"line":107,"column":16,"offset":7461},"indent":[]}},{"type":"text","value":"\nYeah. And actually for me personally, increasingly I find myself buying more and more things off Amazon because there’s like… A lot of times the things that you can get in these kinds of independent stores are just like higher quality or it just feels closer to the seller. And so thank you for enabling all that. So diving into this large-scale refactoring and re-architecture project, I thought maybe we could start off by giving people an overview of what Shopify looks like as an engineering organization and as a codebase. So in broad strokes, what are the major teams and what are the major parts of the code, and what does it all kind of do as an engineering system?","position":{"start":{"line":107,"column":16,"offset":7461},"end":{"line":108,"column":676,"offset":8137},"indent":[1]}}],"position":{"start":{"line":107,"column":1,"offset":7446},"end":{"line":108,"column":676,"offset":8137},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":110,"column":3,"offset":8141},"end":{"line":110,"column":21,"offset":8159},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":8139},"end":{"line":110,"column":23,"offset":8161},"indent":[]}},{"type":"text","value":"\nDefinitely. So we talk about the core Shopify product as the core codebase. And so that’s basically what powers merchants to manage their orders, to manage shipping, etc. So all of the core pieces of the product live in one Rails codebase. And it’s actually one of the largest, probably the largest Rails codebase on the planet because we got started with Rails like right when Rails became a thing, and it’s been under continuous development since at least 2006. And the last time I checked, we were pushing like 3 million lines of code, more than 500,000 lifetime commits and about 40,000 files. So it’s massive. And in terms of an engineering org, I think we’re at about 1,500 or so engineers and we’re actually aiming to hire another 2021 this year, so it’ll be continuing on this massive pace of growth. And if I had to guess, I’d guess probably about half of the engineering team works daily in the core codebase and the other half works on applications outside of core.","position":{"start":{"line":110,"column":23,"offset":8161},"end":{"line":111,"column":977,"offset":9138},"indent":[1]}}],"position":{"start":{"line":110,"column":1,"offset":8139},"end":{"line":111,"column":977,"offset":9138},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":113,"column":3,"offset":9142},"end":{"line":113,"column":14,"offset":9153},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":9140},"end":{"line":113,"column":16,"offset":9155},"indent":[]}},{"type":"text","value":"\nThat’s crazy, that’s so much code. Does it… Have you gotten to the point where Git operations start to slow down at all? Like if you were to clone the entire codebase to your local machine… Like do people even do that? Or how long does that take?","position":{"start":{"line":113,"column":16,"offset":9155},"end":{"line":114,"column":251,"offset":9406},"indent":[1]}}],"position":{"start":{"line":113,"column":1,"offset":9140},"end":{"line":114,"column":251,"offset":9406},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":116,"column":3,"offset":9410},"end":{"line":116,"column":21,"offset":9428},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":9408},"end":{"line":116,"column":23,"offset":9430},"indent":[]}},{"type":"text","value":"\nYeah, people do it, it works. The test suite definitely can get slow, but development itself is not a problem. We actually… We always joke, like we host Kylie Jenner’s shop on Shopify and it’s like one of the largest stores. And we joke that like we are the Kylie to so many other systems that we use. So we’re hosted on Google Cloud and like we are by far the largest product hosted on Google Cloud and so we’re often stretching the boundaries of their systems. And similarly, like with Rails itself, we are often the ones that find those bugs that you only find when you’re operating at this scale. And so what we do is we really make choices about what technologies we want to use and then really double down on them. So we actually have a full team at Shopify who are Rails core contributors, and we try to actually just evolve the tools that we use to be better and to be better able to support us and others.","position":{"start":{"line":116,"column":23,"offset":9430},"end":{"line":117,"column":917,"offset":10347},"indent":[1]}}],"position":{"start":{"line":116,"column":1,"offset":9408},"end":{"line":117,"column":917,"offset":10347},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":119,"column":3,"offset":10351},"end":{"line":119,"column":14,"offset":10362},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":10349},"end":{"line":119,"column":16,"offset":10364},"indent":[]}},{"type":"text","value":"\nWhat languages are in use? So with Rails, I assume Ruby is a big language, are there any others that are big parts of the stack?","position":{"start":{"line":119,"column":16,"offset":10364},"end":{"line":120,"column":129,"offset":10493},"indent":[1]}}],"position":{"start":{"line":119,"column":1,"offset":10349},"end":{"line":120,"column":129,"offset":10493},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":122,"column":3,"offset":10497},"end":{"line":122,"column":21,"offset":10515},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":10495},"end":{"line":122,"column":23,"offset":10517},"indent":[]}},{"type":"text","value":"\nYeah. Shopify has always been very opinionated about technology choices. So essentially any problem that can be solved with Ruby on Rails should be, there are some exceptions. If applications have really, really high performance constraints or need parallelization, sometimes we use Go, the front ends are in React. And for mobile development, we’ve just standardized around React Native going forward as well. And then in data land, we have some Python and Scala and in infrastructure we have Go and Lua as well.","position":{"start":{"line":122,"column":23,"offset":10517},"end":{"line":123,"column":514,"offset":11031},"indent":[1]}}],"position":{"start":{"line":122,"column":1,"offset":10495},"end":{"line":123,"column":514,"offset":11031},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":125,"column":3,"offset":11035},"end":{"line":125,"column":14,"offset":11046},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":11033},"end":{"line":125,"column":16,"offset":11048},"indent":[]}},{"type":"text","value":"\nSo you wrote this blog post about how you were in charge of this project to kind of decompose Shopify’s main Ruby on Rails monolith into smaller, more modular components, not microservices, but different modularized components, we’ll get into that later. Tell us at a high level, what was the mandate of that project and how did you come to be involved in that.","position":{"start":{"line":125,"column":16,"offset":11048},"end":{"line":126,"column":362,"offset":11410},"indent":[1]}}],"position":{"start":{"line":125,"column":1,"offset":11033},"end":{"line":126,"column":362,"offset":11410},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":128,"column":3,"offset":11414},"end":{"line":128,"column":21,"offset":11432},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":11412},"end":{"line":128,"column":23,"offset":11434},"indent":[]}},{"type":"text","value":"\nYeah. So in, I think it was around early 2017, it was becoming very clear that our core codebase was reaching a tipping point. Where it was becoming more and more challenging to build functionality into it because of all of the interdependencies. So projects were taking longer, adding things that used to be simple were causing test failures and big headaches. And also it was really… We’re finding it really challenging to onboard new people into the codebase because there was just so much to learn. And so we knew we had all of these problems, but we didn’t want to get into solutioning without really understanding what the problems were. So we actually sent out a large survey to all the engineers working in the core codebase to hear their feedback about what the pain points were before deciding what to do.","position":{"start":{"line":128,"column":23,"offset":11434},"end":{"line":129,"column":818,"offset":12252},"indent":[1]}}],"position":{"start":{"line":128,"column":1,"offset":11412},"end":{"line":129,"column":818,"offset":12252},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":131,"column":3,"offset":12256},"end":{"line":131,"column":21,"offset":12274},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":12254},"end":{"line":131,"column":23,"offset":12276},"indent":[]}},{"type":"text","value":"\nAnd it was that survey that actually led us to start this project. We originally called it a very clever name of, “Break core up into multiple pieces.” But that name eventually evolved into componentization where essentially we wanted to make this one large codebase feel like many smaller codebases. And so we wanted to separate the code by business domain basically because that is the code that more often needs to change together. And so what that would mean is if we were hiring someone onto say the shipping team, they should be able to just understand the shipping component without having to understand all of the other elements of the core codebase. So at a high level, that was the goal.","position":{"start":{"line":131,"column":23,"offset":12276},"end":{"line":132,"column":698,"offset":12974},"indent":[1]}}],"position":{"start":{"line":131,"column":1,"offset":12254},"end":{"line":132,"column":698,"offset":12974},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":134,"column":3,"offset":12978},"end":{"line":134,"column":14,"offset":12989},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":12976},"end":{"line":134,"column":16,"offset":12991},"indent":[]}},{"type":"text","value":"\nGot it. So if I were a buzzword-driven engineering manager and you came to me and said, “Let’s decompose this monolith into different independent components.” I would say, “Well, that’s obvious, you know, we live in 2021 and the obvious solution to decomposing a monolith is to break it down into these things called microservices. But I understand that that’s not the approach that you ended up taking. So can you talk about why you didn’t follow the naive path of like, let’s write a bunch of microservices. What did you end up with instead? What is this modular monolith that you talk about?","position":{"start":{"line":134,"column":16,"offset":12991},"end":{"line":135,"column":595,"offset":13586},"indent":[1]}}],"position":{"start":{"line":134,"column":1,"offset":12976},"end":{"line":135,"column":595,"offset":13586},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":137,"column":3,"offset":13590},"end":{"line":137,"column":21,"offset":13608},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":13588},"end":{"line":137,"column":23,"offset":13610},"indent":[]}},{"type":"text","value":"\nYeah. I mean, I think for one thing we had been developing on Shopify core for so long that pausing everything and building out net new microservices just wasn’t feasible for us. Whereas the direction we ended up going was making incremental changes in the existing codebase while teams continued to develop and add features to it. So that was a big reason, but the other thing is that unless we wanted to start from scratch, to be able to start extracting some of these pieces out into microservices, we would need to have them well encapsulated and have boundaries in place, which is what we ended up doing. But we ended up deciding that we wanted to stop there because monoliths have a lot of pros, a lot of benefits.","position":{"start":{"line":137,"column":23,"offset":13610},"end":{"line":138,"column":721,"offset":14331},"indent":[1]}}],"position":{"start":{"line":137,"column":1,"offset":13588},"end":{"line":138,"column":721,"offset":14331},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":140,"column":3,"offset":14335},"end":{"line":140,"column":21,"offset":14353},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":14333},"end":{"line":140,"column":23,"offset":14355},"indent":[]}},{"type":"text","value":"\nHaving only one codebase means you only have to do all of your gem bumps and your security fixes in one place. It also means you only have to manage one deployment infrastructure and one test pipeline. There’s also a lot less surface area in terms of places that you could be attacked, and I think that makes the system a lot more resilient. And we found it helpful to keep all of our data in one place, in one database and allow the different components to have access to the data that they needed instead of trying to synchronize it across many different systems.","position":{"start":{"line":140,"column":23,"offset":14355},"end":{"line":141,"column":566,"offset":14921},"indent":[1]}}],"position":{"start":{"line":140,"column":1,"offset":14333},"end":{"line":141,"column":566,"offset":14921},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":143,"column":3,"offset":14925},"end":{"line":143,"column":14,"offset":14936},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":14923},"end":{"line":143,"column":16,"offset":14938},"indent":[]}},{"type":"text","value":"\nYeah.","position":{"start":{"line":143,"column":16,"offset":14938},"end":{"line":144,"column":6,"offset":14944},"indent":[1]}}],"position":{"start":{"line":143,"column":1,"offset":14923},"end":{"line":144,"column":6,"offset":14944},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":146,"column":3,"offset":14948},"end":{"line":146,"column":21,"offset":14966},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":14946},"end":{"line":146,"column":23,"offset":14968},"indent":[]}},{"type":"text","value":"\nAnd lastly, with microservices, the communication between the different components has to happen over the network, which introduces a whole bunch of complexity around API version management and backwards compatibility, as well as just dealing with the network in general. It can be slow. There’s lots of ways it can fail. So those were all the things that we liked about the monolith and didn’t want to just give those all up. And we kind of felt like moving to microservices was more of a topology change whereas what we wanted was an architecture change. There was nothing necessarily wrong with our monolith, it was just that there were no well-defined boundaries between different things.","position":{"start":{"line":146,"column":23,"offset":14968},"end":{"line":147,"column":693,"offset":15661},"indent":[1]}}],"position":{"start":{"line":146,"column":1,"offset":14946},"end":{"line":147,"column":693,"offset":15661},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":149,"column":3,"offset":15665},"end":{"line":149,"column":14,"offset":15676},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":15663},"end":{"line":149,"column":16,"offset":15678},"indent":[]}},{"type":"text","value":"\nSo you had this principled, thoughtful approach of “We have developer pain, let’s address that directly, but we’re not going to involve it with changing the topology of production, introducing all these unnecessary network boundaries because that introduces its own complexity and its own baggage” in a way.","position":{"start":{"line":149,"column":16,"offset":15678},"end":{"line":150,"column":308,"offset":15986},"indent":[1]}}],"position":{"start":{"line":149,"column":1,"offset":15663},"end":{"line":150,"column":308,"offset":15986},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":152,"column":3,"offset":15990},"end":{"line":152,"column":21,"offset":16008},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":15988},"end":{"line":152,"column":23,"offset":16010},"indent":[]}},{"type":"text","value":"\nYeah, exactly. Our monolith had gotten us so far. We, I think, had learned so much about what is good about it, that it gave us pause to really ask the question and really think through whether microservices were right for us. And the answer at the time was no.","position":{"start":{"line":152,"column":23,"offset":16010},"end":{"line":153,"column":262,"offset":16272},"indent":[1]}}],"position":{"start":{"line":152,"column":1,"offset":15988},"end":{"line":153,"column":262,"offset":16272},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":155,"column":3,"offset":16276},"end":{"line":155,"column":21,"offset":16294},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":16274},"end":{"line":155,"column":23,"offset":16296},"indent":[]}},{"type":"text","value":"\nThat being said, we are believers of service-oriented architecture, so we do have other applications outside of the core codebase. However, everything related to the core functionalities of commerce, we keep in one place. But there have been some examples where we actually have extracted components out of the core codebase because they weren’t related to the core functionality of commerce and we pulled them out into their own services, but that was exponentially easier to do post componentization.","position":{"start":{"line":155,"column":23,"offset":16296},"end":{"line":156,"column":503,"offset":16799},"indent":[1]}}],"position":{"start":{"line":155,"column":1,"offset":16274},"end":{"line":156,"column":503,"offset":16799},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":158,"column":3,"offset":16803},"end":{"line":158,"column":14,"offset":16814},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":16801},"end":{"line":158,"column":16,"offset":16816},"indent":[]}},{"type":"text","value":"\nSo what did this modularization of the monolith actually entail? I assume you started with… My knowledge of Ruby On Rails is fairly limited, but I understand the standard directly out is: you have a model directory, you have a view directory, you have a controller directory. Was that the structure of the codebase at the start of the project?","position":{"start":{"line":158,"column":16,"offset":16816},"end":{"line":159,"column":346,"offset":17162},"indent":[1]}}],"position":{"start":{"line":158,"column":1,"offset":16801},"end":{"line":159,"column":346,"offset":17162},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":161,"column":3,"offset":17166},"end":{"line":161,"column":21,"offset":17184},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":17164},"end":{"line":161,"column":23,"offset":17186},"indent":[]}},{"type":"text","value":"\nYeah, that’s correct. So we started before this, we basically just had a Rails app out of the box, so you’re exactly right. They were organized by our software concepts, but the first thing that we wanted to do was restructure our codebase to be organized by real-world concepts like orders, shipping, inventory, billing. And what we ended up doing was we actually audited every single Ruby class in the code base, which was like 6,000 at the time, in a spreadsheet and manually labeled which component we thought that they belonged in based on the initial list of components we had. And then we built up one massive PR with automated scripts from the spreadsheet to basically just create those top-level folders. And then within the orders folder it would still be models, views, controllers, but we would just move all of the specific models, views and controls into that folder. So we did that all in one big PR, which was kind of terrifying, but ended up being fine. We have good test coverage. So it is all good.","position":{"start":{"line":161,"column":23,"offset":17186},"end":{"line":162,"column":1018,"offset":18204},"indent":[1]}}],"position":{"start":{"line":161,"column":1,"offset":17164},"end":{"line":162,"column":1018,"offset":18204},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":164,"column":3,"offset":18208},"end":{"line":164,"column":14,"offset":18219},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":18206},"end":{"line":164,"column":16,"offset":18221},"indent":[]}},{"type":"text","value":"\nWhat was the size of that diff? It must have been like…","position":{"start":{"line":164,"column":16,"offset":18221},"end":{"line":165,"column":58,"offset":18279},"indent":[1]}}],"position":{"start":{"line":164,"column":1,"offset":18206},"end":{"line":165,"column":58,"offset":18279},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":167,"column":3,"offset":18283},"end":{"line":167,"column":21,"offset":18301},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":18281},"end":{"line":167,"column":23,"offset":18303},"indent":[]}},{"type":"text","value":"\nIt was every file, every file was touched.","position":{"start":{"line":167,"column":23,"offset":18303},"end":{"line":168,"column":43,"offset":18346},"indent":[1]}}],"position":{"start":{"line":167,"column":1,"offset":18281},"end":{"line":168,"column":43,"offset":18346},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":170,"column":3,"offset":18350},"end":{"line":170,"column":14,"offset":18361},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":18348},"end":{"line":170,"column":16,"offset":18363},"indent":[]}},{"type":"text","value":"\nWow.","position":{"start":{"line":170,"column":16,"offset":18363},"end":{"line":171,"column":5,"offset":18368},"indent":[1]}}],"position":{"start":{"line":170,"column":1,"offset":18348},"end":{"line":171,"column":5,"offset":18368},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":173,"column":3,"offset":18372},"end":{"line":173,"column":21,"offset":18390},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":18370},"end":{"line":173,"column":23,"offset":18392},"indent":[]}},{"type":"text","value":"\nYeah. So that was the first step.","position":{"start":{"line":173,"column":23,"offset":18392},"end":{"line":174,"column":34,"offset":18426},"indent":[1]}}],"position":{"start":{"line":173,"column":1,"offset":18370},"end":{"line":174,"column":34,"offset":18426},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":176,"column":3,"offset":18430},"end":{"line":176,"column":14,"offset":18441},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":18428},"end":{"line":176,"column":16,"offset":18443},"indent":[]}},{"type":"text","value":"\nWhy wasn’t that sufficient? The straw man is like, “Okay, if we put everything in its own directories and now each team gets to work in their own directory and that’s done. They’re like separate codebases.” Why was that not just the end of the project?","position":{"start":{"line":176,"column":16,"offset":18443},"end":{"line":177,"column":253,"offset":18696},"indent":[1]}}],"position":{"start":{"line":176,"column":1,"offset":18428},"end":{"line":177,"column":253,"offset":18696},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":179,"column":3,"offset":18700},"end":{"line":179,"column":21,"offset":18718},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":18698},"end":{"line":179,"column":23,"offset":18720},"indent":[]}},{"type":"text","value":"\nWell, all that had achieved was moving files around, right? Like in Ruby On Rails, everything is automatically globally accessible. So just because all the code for orders was within an orders folder, it could still use whatever it wanted from any of the other folders. So we still had all the same problems with fragility of the test suite and really if I was working in the orders component, I still had to understand about the taxes component and the shipping component because of how tightly coupled they were and how there was no clearly defined API for them to communicate between the folders. Nothing had structurally changed about how the code was interacting.","position":{"start":{"line":179,"column":23,"offset":18720},"end":{"line":180,"column":669,"offset":19389},"indent":[1]}}],"position":{"start":{"line":179,"column":1,"offset":18698},"end":{"line":180,"column":669,"offset":19389},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":182,"column":3,"offset":19393},"end":{"line":182,"column":21,"offset":19411},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":19391},"end":{"line":182,"column":23,"offset":19413},"indent":[]}},{"type":"text","value":"\nSo it was a great first step in the sense that I now knew if I’m looking for something orders related, I can find it. And that the top-level component folders had explicit owners, which was actually a huge win. But beyond that, we still hadn’t solved a lot of the existing problems.","position":{"start":{"line":182,"column":23,"offset":19413},"end":{"line":183,"column":283,"offset":19696},"indent":[1]}}],"position":{"start":{"line":182,"column":1,"offset":19391},"end":{"line":183,"column":283,"offset":19696},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":185,"column":3,"offset":19700},"end":{"line":185,"column":14,"offset":19711},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":19698},"end":{"line":185,"column":16,"offset":19713},"indent":[]}},{"type":"text","value":"\nYou mentioned something in your blog post about how one of the initial pain points was as the codebase grew, the amount of code that a given developer would have to understand to get a thing done was like something like O of N, it grew linearly with the size of the codebase. And that obviously is untenable as you grow, because it just means your productivity approaches asymptotically down to zero. So how’d you go from O of N to sub linear? What were the things that you had to make in terms of codebase structure to enable that?","position":{"start":{"line":185,"column":16,"offset":19713},"end":{"line":186,"column":533,"offset":20246},"indent":[1]}}],"position":{"start":{"line":185,"column":1,"offset":19698},"end":{"line":186,"column":533,"offset":20246},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":188,"column":3,"offset":20250},"end":{"line":188,"column":21,"offset":20268},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":20248},"end":{"line":188,"column":23,"offset":20270},"indent":[]}},{"type":"text","value":"\nYeah, definitely. So once we moved all the code into their separate folders, the next ask was for each component to define a public API. And ideally that public API should be easy enough to understand that I can understand what it’s doing without having to go under the hood and look into the component. And so that would allow me to get to know one component really well. We also asked each component to explicitly say which other components they depended on. So say I was joining the orders team, I could really deeply get to know the orders component. And then as my next step, I could look at what the dependency is listed out for the orders component is, and maybe just start getting to know their public API so I know what methods are available to me from those components without needing to understand all the nuances of how they get the things done exposing the public API.","position":{"start":{"line":188,"column":23,"offset":20270},"end":{"line":189,"column":882,"offset":21152},"indent":[1]}}],"position":{"start":{"line":188,"column":1,"offset":20248},"end":{"line":189,"column":882,"offset":21152},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":191,"column":3,"offset":21156},"end":{"line":191,"column":14,"offset":21167},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":21154},"end":{"line":191,"column":16,"offset":21169},"indent":[]}},{"type":"text","value":"\nYeah. What about the human side of this kind of change? In the organizations that we’ve worked with that have attempted something like this, there’s the technical side, which involves making the proper changes to the code, in this case, introducing a bunch of interfaces and making those interface boundaries well-defined, but then there’s also this human, semi-political aspect to it where you’re going to each of these engineering teams and each of them has their own goals and objectives that they’re working toward, business goals, and you’re coming to them and essentially asking them to add work onto their plate to satisfy this change.","position":{"start":{"line":191,"column":16,"offset":21169},"end":{"line":192,"column":643,"offset":21812},"indent":[1]}}],"position":{"start":{"line":191,"column":1,"offset":21154},"end":{"line":192,"column":643,"offset":21812},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":194,"column":3,"offset":21816},"end":{"line":194,"column":14,"offset":21827},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":21814},"end":{"line":194,"column":16,"offset":21829},"indent":[]}},{"type":"text","value":"\nCan you talk about that element of it? Did you have to do a lot of horse trading or, “Do me a favor and I’ll do you a favor?” What does that look like from your perspective?","position":{"start":{"line":194,"column":16,"offset":21829},"end":{"line":195,"column":174,"offset":22003},"indent":[1]}}],"position":{"start":{"line":194,"column":1,"offset":21814},"end":{"line":195,"column":174,"offset":22003},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":197,"column":3,"offset":22007},"end":{"line":197,"column":21,"offset":22025},"indent":[]}}],"position":{"start":{"line":197,"column":1,"offset":22005},"end":{"line":197,"column":23,"offset":22027},"indent":[]}},{"type":"text","value":"\nYeah, it’s interesting. I’ve actually talked about this project at a few different conferences and the two questions I always get are, “How did you get buy-in from the business to invest in this? And how did you get buy-in from the individual teams to invest in this?” I guess there’s no really easy answer or perfect way to do it and it’s going to be so nuanced depending on the organization that you’re within. But one of Shopify’s core cultural values that were kind of taught from the beginning, is build for the long term. And it’s really driven home that we’re trying to build this business for a hundred years, not for 10 years. And so with that kind of mindset, it is easier to get buy-in for these short-term pain for long-term gain type projects.","position":{"start":{"line":197,"column":23,"offset":22027},"end":{"line":198,"column":757,"offset":22784},"indent":[1]}}],"position":{"start":{"line":197,"column":1,"offset":22005},"end":{"line":198,"column":757,"offset":22784},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":200,"column":3,"offset":22788},"end":{"line":200,"column":21,"offset":22806},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":22786},"end":{"line":200,"column":23,"offset":22808},"indent":[]}},{"type":"text","value":"\nI think as well, the developers that had been working in the core codebase had all been feeling this pain. And so they were eager for opportunities to make it better and easier to develop within. So it wasn’t always easy. And to be honest with you, different components are at completely different points in their componentization journey based on how well their team has been able to prioritize this type of work. One thing that we did was we built this tool called Wedge, a lot of complexity under the hood, but it basically gave components scores as to how well they were doing on their componentization journey. And we made it like a little fun competition between teams.","position":{"start":{"line":200,"column":23,"offset":22808},"end":{"line":201,"column":676,"offset":23484},"indent":[1]}}],"position":{"start":{"line":200,"column":1,"offset":22786},"end":{"line":201,"column":676,"offset":23484},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":203,"column":3,"offset":23488},"end":{"line":203,"column":14,"offset":23499},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":23486},"end":{"line":203,"column":16,"offset":23501},"indent":[]}},{"type":"text","value":"\nYou gamified it.","position":{"start":{"line":203,"column":16,"offset":23501},"end":{"line":204,"column":17,"offset":23518},"indent":[1]}}],"position":{"start":{"line":203,"column":1,"offset":23486},"end":{"line":204,"column":17,"offset":23518},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":206,"column":3,"offset":23522},"end":{"line":206,"column":21,"offset":23540},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":23520},"end":{"line":206,"column":23,"offset":23542},"indent":[]}},{"type":"text","value":"\nExactly. Yeah. As a technical initiative that the whole engineering org was working towards.","position":{"start":{"line":206,"column":23,"offset":23542},"end":{"line":207,"column":93,"offset":23635},"indent":[1]}}],"position":{"start":{"line":206,"column":1,"offset":23520},"end":{"line":207,"column":93,"offset":23635},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":209,"column":3,"offset":23639},"end":{"line":209,"column":14,"offset":23650},"indent":[]}}],"position":{"start":{"line":209,"column":1,"offset":23637},"end":{"line":209,"column":16,"offset":23652},"indent":[]}},{"type":"text","value":"\nThat’s really interesting. So you kind of built a tool that condensed all these complex refactorings into something that you can measure, like a numerical score and that made it easier to track and also verify. How did you do that? How do you convert adding an interface or defining a good interface or eliminating a cyclical dependency or something into a number that is meaningful that the engineering teams don’t shake their heads at and that also is useful for tracking it at a top level.","position":{"start":{"line":209,"column":16,"offset":23652},"end":{"line":210,"column":493,"offset":24145},"indent":[1]}}],"position":{"start":{"line":209,"column":1,"offset":23637},"end":{"line":210,"column":493,"offset":24145},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":212,"column":3,"offset":24149},"end":{"line":212,"column":21,"offset":24167},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":24147},"end":{"line":212,"column":23,"offset":24169},"indent":[]}},{"type":"text","value":"\nYeah. So, Wedge is a really interesting tool. What we did was we used it to hook into Ruby trace points during our test suite run to get a full call graph of all the calls that were being made as our code was being executed. And then we sorted the callers and callees by component and basically pulled out all of the calls that were happening across component boundaries and then sent them to Wedge. And we’d also send some other data like code analysis and active record associations and inheritance and such. And then Wedge basically just went through everything that was sent to it and determined which of these things were okay, and which ones were violating. So if a cross-component call was being made, if there was no dependency explicitly declared between those two components, it would be violating. And if it was anything other than the public interface it would be violating.","position":{"start":{"line":212,"column":23,"offset":24169},"end":{"line":213,"column":887,"offset":25056},"indent":[1]}}],"position":{"start":{"line":212,"column":1,"offset":24147},"end":{"line":213,"column":887,"offset":25056},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":215,"column":3,"offset":25060},"end":{"line":215,"column":21,"offset":25078},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":25058},"end":{"line":215,"column":23,"offset":25080},"indent":[]}},{"type":"text","value":"\nWe actually found though that it really is hard to get a number that is right. Especially with as much complexity as there is in call graph logging. So in the end we actually ended up canning Wedge because we didn’t find it to be a useful feedback cycle. And also mostly because we had to run the full test suite to get this feedback and that takes way too long for it to be helpful. So we ended up going in a different direction. But in the early days it was really helpful to, like you said, gamify it.","position":{"start":{"line":215,"column":23,"offset":25080},"end":{"line":216,"column":505,"offset":25585},"indent":[1]}}],"position":{"start":{"line":215,"column":1,"offset":25058},"end":{"line":216,"column":505,"offset":25585},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":218,"column":3,"offset":25589},"end":{"line":218,"column":14,"offset":25600},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":25587},"end":{"line":218,"column":16,"offset":25602},"indent":[]}},{"type":"text","value":"\nYeah. That makes a lot of sense. As you learn more about what was useful and productive, what kind of stepped into the place that Wedge occupied? Was there another tool that you used or was there some different set of criteria that you used to gauge overall progress and success?","position":{"start":{"line":218,"column":16,"offset":25602},"end":{"line":219,"column":280,"offset":25882},"indent":[1]}}],"position":{"start":{"line":218,"column":1,"offset":25587},"end":{"line":219,"column":280,"offset":25882},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":221,"column":3,"offset":25886},"end":{"line":221,"column":21,"offset":25904},"indent":[]}}],"position":{"start":{"line":221,"column":1,"offset":25884},"end":{"line":221,"column":23,"offset":25906},"indent":[]}},{"type":"text","value":"\nYeah. We ended up building this tool called Packwerk, which actually as of September of last year is open source. And it’s a really cool tool that basically analyzes static constant references. So we found that there’s less ambiguity in static references and because these references are always explicitly introduced by developers, it’s more actionable to highlight them, and it’s much faster. So we’re able to run a full analysis on our largest codebase in a few minutes, which means that we can actually put it in as part of our pull request workflow, which is a way more helpful feedback loop for developers.","position":{"start":{"line":221,"column":23,"offset":25906},"end":{"line":222,"column":612,"offset":26518},"indent":[1]}}],"position":{"start":{"line":221,"column":1,"offset":25884},"end":{"line":222,"column":612,"offset":26518},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":224,"column":3,"offset":26522},"end":{"line":224,"column":14,"offset":26533},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":26520},"end":{"line":224,"column":16,"offset":26535},"indent":[]}},{"type":"text","value":"\nThat’s really interesting. So the Wedge was this dynamic tool. It kind of built up this call graph or reference graph from runtime by observing what actually got called and then Packwerk was building up that graph, but statically based on imports and references in source code. Is that right?","position":{"start":{"line":224,"column":16,"offset":26535},"end":{"line":225,"column":293,"offset":26828},"indent":[1]}}],"position":{"start":{"line":224,"column":1,"offset":26520},"end":{"line":225,"column":293,"offset":26828},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":227,"column":3,"offset":26832},"end":{"line":227,"column":21,"offset":26850},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":26830},"end":{"line":227,"column":23,"offset":26852},"indent":[]}},{"type":"text","value":"\nYeah, that’s correct. Packwerk uses the same assumptions as Zeitwerk, which is the Rails code loader. And the way that Rails is able to make constants globally accessible is it basically infers the file location based on the constant’s name. And we did the exact same thing with Packwerk.","position":{"start":{"line":227,"column":23,"offset":26852},"end":{"line":228,"column":289,"offset":27141},"indent":[1]}}],"position":{"start":{"line":227,"column":1,"offset":26830},"end":{"line":228,"column":289,"offset":27141},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":230,"column":3,"offset":27145},"end":{"line":230,"column":14,"offset":27156},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":27143},"end":{"line":230,"column":16,"offset":27158},"indent":[]}},{"type":"text","value":"\nSo the programming languages part of my brain is saying, “But wait a minute, Ruby is a dynamically typed language, not all types are known at compile time.” But were you able to solve that problem in Packwerk? Like inferring types or was it some element of best effort? Like, this is good enough.","position":{"start":{"line":230,"column":16,"offset":27158},"end":{"line":231,"column":297,"offset":27455},"indent":[1]}}],"position":{"start":{"line":230,"column":1,"offset":27143},"end":{"line":231,"column":297,"offset":27455},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":233,"column":3,"offset":27459},"end":{"line":233,"column":21,"offset":27477},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":27457},"end":{"line":233,"column":23,"offset":27479},"indent":[]}},{"type":"text","value":"\nYeah. A hundred percent the latter. We understand that it’s an imperfect solution and there’s a lot of crazy stuff that can happen in Rails that will not be detected through this, but it’s good enough essentially. And it does catch a lot of things. So we decided that the fact that it can happen so much faster and provide that faster feedback loop is a trade-off we’re willing to accept for the fact that yes, maybe some things will slide under the radar.","position":{"start":{"line":233,"column":23,"offset":27479},"end":{"line":234,"column":457,"offset":27936},"indent":[1]}}],"position":{"start":{"line":233,"column":1,"offset":27457},"end":{"line":234,"column":457,"offset":27936},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":236,"column":3,"offset":27940},"end":{"line":236,"column":14,"offset":27951},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":27938},"end":{"line":236,"column":16,"offset":27953},"indent":[]}},{"type":"text","value":"\nI guess it’s important to recognize that there’s humans in the loop in this process. So in some sense, it’d be a much harder problem to completely automate it because then you’d have to get everything precise. But as long as there’s humans in the loop, they can step in and say, “Well, we recognize this tool’s a little bit fuzzy, as long as the signal to noise ratio is decently high, we can work with this.”","position":{"start":{"line":236,"column":16,"offset":27953},"end":{"line":237,"column":410,"offset":28363},"indent":[1]}}],"position":{"start":{"line":236,"column":1,"offset":27938},"end":{"line":237,"column":410,"offset":28363},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":239,"column":3,"offset":28367},"end":{"line":239,"column":21,"offset":28385},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":28365},"end":{"line":239,"column":23,"offset":28387},"indent":[]}},{"type":"text","value":"\nAbsolutely, and the magic of this tool is not only within the tool itself, but it’s within the conversations that it sparks, because if on my PR I get told, this is a cross-component violation, and maybe I don’t know what that is, or maybe I’m a more junior programmer, and I don’t have an idea of how to do inversion of control, for example, there’s been a lot more conversations around software architecture across Shopify because of this tool.","position":{"start":{"line":239,"column":23,"offset":28387},"end":{"line":240,"column":447,"offset":28834},"indent":[1]}}],"position":{"start":{"line":239,"column":1,"offset":28365},"end":{"line":240,"column":447,"offset":28834},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":242,"column":3,"offset":28838},"end":{"line":242,"column":21,"offset":28856},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":28836},"end":{"line":242,"column":23,"offset":28858},"indent":[]}},{"type":"text","value":"\nSo, what that means is sometimes maybe the tool won’t catch cross-component boundaries, but because it’s now becoming a part of our engineering culture, maybe someone will in a PR review. Building that muscle of good software design really is the overarching goal of this whole thing. So, yes, the tool’s not perfect, but it’s been really valuable for us.","position":{"start":{"line":242,"column":23,"offset":28858},"end":{"line":243,"column":356,"offset":29214},"indent":[1]}}],"position":{"start":{"line":242,"column":1,"offset":28836},"end":{"line":243,"column":356,"offset":29214},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":245,"column":3,"offset":29218},"end":{"line":245,"column":14,"offset":29229},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":29216},"end":{"line":245,"column":16,"offset":29231},"indent":[]}},{"type":"text","value":"\nYou just mentioned inversion of control, and I think that along with some other things you called out in your blog post were good rules of thumb or good general principles that you may have discovered along the way of doing this. Can you talk about some of those principles or maybe empirical patterns, in terms of if someone were to attempt this on a Rails codebase in general, what are the maybe tactical things? Tactical things, tricks that you can apply to make the codebase more decomposed and modular.","position":{"start":{"line":245,"column":16,"offset":29231},"end":{"line":246,"column":508,"offset":29739},"indent":[1]}}],"position":{"start":{"line":245,"column":1,"offset":29216},"end":{"line":246,"column":508,"offset":29739},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":248,"column":3,"offset":29743},"end":{"line":248,"column":21,"offset":29761},"indent":[]}}],"position":{"start":{"line":248,"column":1,"offset":29741},"end":{"line":248,"column":23,"offset":29763},"indent":[]}},{"type":"text","value":"\nYeah. I think the first thing I would say is that if someone’s going to be trying this on a Rails codebase, they’ll probably be in a similar situation that we are, or that we were, which is basically, if you look at the dependency graph that has just naturally happened, it’s crazy. Every component was basically depending on every other component. There’s a ton of cyclic dependency. Rails lends itself naturally to have high dependency.","position":{"start":{"line":248,"column":23,"offset":29763},"end":{"line":249,"column":439,"offset":30202},"indent":[1]}}],"position":{"start":{"line":248,"column":1,"offset":29741},"end":{"line":249,"column":439,"offset":30202},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":251,"column":3,"offset":30206},"end":{"line":251,"column":21,"offset":30224},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":30204},"end":{"line":251,"column":23,"offset":30226},"indent":[]}},{"type":"text","value":"\nSo, I’ll say that first. Even just being able to visualize that dependency graph allows you to reason at a much higher level about, does it make sense for this thing to depend on this thing? Sometimes it does, and other times it doesn’t, but when it doesn’t, that’s when you start to use some of these tactical approaches for decoupling those things.","position":{"start":{"line":251,"column":23,"offset":30226},"end":{"line":252,"column":351,"offset":30577},"indent":[1]}}],"position":{"start":{"line":251,"column":1,"offset":30204},"end":{"line":252,"column":351,"offset":30577},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":254,"column":3,"offset":30581},"end":{"line":254,"column":21,"offset":30599},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":30579},"end":{"line":254,"column":23,"offset":30601},"indent":[]}},{"type":"text","value":"\nI mentioned inversion of control, which basically is saying … So, I’ll give an example. I work on a product called the Shopify Fulfillment Network, where, basically, some merchants, we host their products on their behalf. When orders come in, we’ll choose the most optimal warehouse to fulfill it out of to get it to the buyer as quickly as possible.","position":{"start":{"line":254,"column":23,"offset":30601},"end":{"line":255,"column":353,"offset":30954},"indent":[1]}}],"position":{"start":{"line":254,"column":1,"offset":30579},"end":{"line":255,"column":353,"offset":30954},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":257,"column":3,"offset":30958},"end":{"line":257,"column":21,"offset":30976},"indent":[]}}],"position":{"start":{"line":257,"column":1,"offset":30956},"end":{"line":257,"column":23,"offset":30978},"indent":[]}},{"type":"text","value":"\nSFN, that’s the acronym for the Shopify Fulfillment Network. It needs to know when an order comes in on a merchant store. One way to do that could be for the orders component to make a call to a method in SFN and say, “New order has been created,” and then SFN responds with, like, “Great. We got it.”","position":{"start":{"line":257,"column":23,"offset":30978},"end":{"line":258,"column":302,"offset":31280},"indent":[1]}}],"position":{"start":{"line":257,"column":1,"offset":30956},"end":{"line":258,"column":302,"offset":31280},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":260,"column":3,"offset":31284},"end":{"line":260,"column":21,"offset":31302},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":31282},"end":{"line":260,"column":23,"offset":31304},"indent":[]}},{"type":"text","value":"\nThat’s a hard dependency from the orders component to SFN, whereas if we want to get rid of that dependency, we can actually just use a method like a publish subscribe mechanism. There’s a bunch of different ones to do that, but at Shopify, we use Kafka events a lot. Basically, the orders component can just say, like, “An order happened,” and then SFN can choose to subscribe to that and do its processing without needing to necessarily reply, and that has now broken that dependency between the two.","position":{"start":{"line":260,"column":23,"offset":31304},"end":{"line":261,"column":503,"offset":31807},"indent":[1]}}],"position":{"start":{"line":260,"column":1,"offset":31282},"end":{"line":261,"column":503,"offset":31807},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":263,"column":3,"offset":31811},"end":{"line":263,"column":14,"offset":31822},"indent":[]}}],"position":{"start":{"line":263,"column":1,"offset":31809},"end":{"line":263,"column":16,"offset":31824},"indent":[]}},{"type":"text","value":"\nIt’s like, at run time, you want this one thing to provide behavior to this other thing that is going to run, but at compile time, you don’t actually want an import going from that thing to this other thing, because that adds a hard dependency, and it means that someone working on the first thing will have to go through the second thing and understand how it behaves. There’s not this interface boundary that says, “Okay, don’t worry about the stuff behind this curtain.”","position":{"start":{"line":263,"column":16,"offset":31824},"end":{"line":264,"column":474,"offset":32298},"indent":[1]}}],"position":{"start":{"line":263,"column":1,"offset":31809},"end":{"line":264,"column":474,"offset":32298},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":266,"column":3,"offset":32302},"end":{"line":266,"column":21,"offset":32320},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":32300},"end":{"line":266,"column":23,"offset":32322},"indent":[]}},{"type":"text","value":"\nYeah. That’s exactly right, and had there been a hard dependency, like, say, from the orders component to SFN, then the orders component would have to care every time SFN changed. Now, having done this inversion of control, it does not at all. It just has to fire its event.","position":{"start":{"line":266,"column":23,"offset":32322},"end":{"line":267,"column":275,"offset":32597},"indent":[1]}}],"position":{"start":{"line":266,"column":1,"offset":32300},"end":{"line":267,"column":275,"offset":32597},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":269,"column":3,"offset":32601},"end":{"line":269,"column":14,"offset":32612},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":32599},"end":{"line":269,"column":16,"offset":32614},"indent":[]}},{"type":"text","value":"\nAnother thing that you talked about in the post was this kind of loose coupling, but high cohesion pattern that got adopted. Do you mind explaining what that means?","position":{"start":{"line":269,"column":16,"offset":32614},"end":{"line":270,"column":165,"offset":32779},"indent":[1]}}],"position":{"start":{"line":269,"column":1,"offset":32599},"end":{"line":270,"column":165,"offset":32779},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":272,"column":3,"offset":32783},"end":{"line":272,"column":21,"offset":32801},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":32781},"end":{"line":272,"column":23,"offset":32803},"indent":[]}},{"type":"text","value":"\nAbsolutely, yeah. This was one of the core principles of this project that we were striving towards. Coupling is basically the level of dependency between modules, or classes, or in this case, components. So, you want that to be low, because you want your dependency graph to be as light as possible, but you want the cohesion to be high. The cohesion is basically the measure of how much elements within a certain encapsulation belong together. So, whether you’re looking at a module level, a class level, or the package level.","position":{"start":{"line":272,"column":23,"offset":32803},"end":{"line":273,"column":529,"offset":33332},"indent":[1]}}],"position":{"start":{"line":272,"column":1,"offset":32781},"end":{"line":273,"column":529,"offset":33332},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":275,"column":3,"offset":33336},"end":{"line":275,"column":21,"offset":33354},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":33334},"end":{"line":275,"column":23,"offset":33356},"indent":[]}},{"type":"text","value":"\nOne thing to note is that it’s really hard to get the component interface right when the classes within it have interfaces that are not well-defined, and the modules within it. It really starts with good software design from the bottom up. That makes it easier, a lot easier to get the component interfaces right.","position":{"start":{"line":275,"column":23,"offset":33356},"end":{"line":276,"column":314,"offset":33670},"indent":[1]}}],"position":{"start":{"line":275,"column":1,"offset":33334},"end":{"line":276,"column":314,"offset":33670},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":278,"column":3,"offset":33674},"end":{"line":278,"column":21,"offset":33692},"indent":[]}}],"position":{"start":{"line":278,"column":1,"offset":33672},"end":{"line":278,"column":23,"offset":33694},"indent":[]}},{"type":"text","value":"\nThen, on the point of cohesion, there’s two different types of cohesion that we think about. The first is functional cohesion, so that basically means code that performs the same task list together. You can think of service objects as being functionally cohesive, whereas data or informational cohesion is code that operates on the same object living together.","position":{"start":{"line":278,"column":23,"offset":33694},"end":{"line":279,"column":361,"offset":34055},"indent":[1]}}],"position":{"start":{"line":278,"column":1,"offset":33672},"end":{"line":279,"column":361,"offset":34055},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":281,"column":3,"offset":34059},"end":{"line":281,"column":21,"offset":34077},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":34057},"end":{"line":281,"column":23,"offset":34079},"indent":[]}},{"type":"text","value":"\nAgain, Rails really lends itself to data or informational cohesion, because of the way that active record models are built up to interact with one database model. We often add a lot of methods relating to that object on its model, even though they might be parts of completing completely different tasks. I’m sure different languages lend themselves to different ones, but we found ourselves way over-skewed in the direction of data and informational cohesion.","position":{"start":{"line":281,"column":23,"offset":34079},"end":{"line":282,"column":461,"offset":34540},"indent":[1]}}],"position":{"start":{"line":281,"column":1,"offset":34057},"end":{"line":282,"column":461,"offset":34540},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":284,"column":3,"offset":34544},"end":{"line":284,"column":14,"offset":34555},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":34542},"end":{"line":284,"column":16,"offset":34557},"indent":[]}},{"type":"text","value":"\nWhere is this project today? You mentioned it started in 2017, and it’s been a multi-years-long effort. Are things still being componentized in the main Rails codebase, or at this point, has it been componentized, and it’s more or less in a done state, you just have to maintain the status quo?","position":{"start":{"line":284,"column":16,"offset":34557},"end":{"line":285,"column":295,"offset":34852},"indent":[1]}}],"position":{"start":{"line":284,"column":1,"offset":34542},"end":{"line":285,"column":295,"offset":34852},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":287,"column":3,"offset":34856},"end":{"line":287,"column":21,"offset":34874},"indent":[]}}],"position":{"start":{"line":287,"column":1,"offset":34854},"end":{"line":287,"column":23,"offset":34876},"indent":[]}},{"type":"text","value":"\nYeah, I wish I could tell you we were in a done state, but the reality is that we’re not. All of the code has been moved into components, and all of the components do have publicly defined entry points, but the reality was that we were starting from a place where a lot of these calls were already violating the rules. So, one of the nice features that Packwerk built was that you could essentially declare bankruptcy, and start from a certain point, and only start tracking violations beyond that. We have a list of deprecated references, and the rule is basically that you can’t add any new violations.","position":{"start":{"line":287,"column":23,"offset":34876},"end":{"line":288,"column":605,"offset":35481},"indent":[1]}}],"position":{"start":{"line":287,"column":1,"offset":34854},"end":{"line":288,"column":605,"offset":35481},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":290,"column":3,"offset":35485},"end":{"line":290,"column":14,"offset":35496},"indent":[]}}],"position":{"start":{"line":290,"column":1,"offset":35483},"end":{"line":290,"column":16,"offset":35498},"indent":[]}},{"type":"text","value":"\nGot it.","position":{"start":{"line":290,"column":16,"offset":35498},"end":{"line":291,"column":8,"offset":35506},"indent":[1]}}],"position":{"start":{"line":290,"column":1,"offset":35483},"end":{"line":291,"column":8,"offset":35506},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":293,"column":3,"offset":35510},"end":{"line":293,"column":21,"offset":35528},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":35508},"end":{"line":293,"column":23,"offset":35530},"indent":[]}},{"type":"text","value":"\nWe know that there are some existing ones, but no new ones can be added. Over time, that deprecated references list basically gives us a tech debt to-do list to work off of. Like I said, different components are in different shape, but we haven’t yet gotten to the point where all of those violations are gone. Only once all of those violations are gone will we be able to actually enforce those boundaries.","position":{"start":{"line":293,"column":23,"offset":35530},"end":{"line":294,"column":408,"offset":35938},"indent":[1]}}],"position":{"start":{"line":293,"column":1,"offset":35508},"end":{"line":294,"column":408,"offset":35938},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":296,"column":3,"offset":35942},"end":{"line":296,"column":14,"offset":35953},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":35940},"end":{"line":296,"column":16,"offset":35955},"indent":[]}},{"type":"text","value":"\nFascinating. You have this list of tech debt to-do items. In a given iteration cycle, how do you decide how many of those to tackle versus how many, I guess, more product-oriented things to tackle? Because that’s something that our teams at Sourcegraph, I assume, like probably any software team struggles with. What is the right balance of tech debt versus new feature development to take on?","position":{"start":{"line":296,"column":16,"offset":35955},"end":{"line":297,"column":394,"offset":36349},"indent":[1]}}],"position":{"start":{"line":296,"column":1,"offset":35940},"end":{"line":297,"column":394,"offset":36349},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":299,"column":3,"offset":36353},"end":{"line":299,"column":21,"offset":36371},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":36351},"end":{"line":299,"column":23,"offset":36373},"indent":[]}},{"type":"text","value":"\nYeah. That’s a hard question.","position":{"start":{"line":299,"column":23,"offset":36373},"end":{"line":300,"column":30,"offset":36403},"indent":[1]}}],"position":{"start":{"line":299,"column":1,"offset":36351},"end":{"line":300,"column":30,"offset":36403},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":302,"column":3,"offset":36407},"end":{"line":302,"column":14,"offset":36418},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":36405},"end":{"line":302,"column":16,"offset":36420},"indent":[]}},{"type":"text","value":"\nCan you put a price on a tech debt item? It’s almost an impossible exercise.","position":{"start":{"line":302,"column":16,"offset":36420},"end":{"line":303,"column":77,"offset":36497},"indent":[1]}}],"position":{"start":{"line":302,"column":1,"offset":36405},"end":{"line":303,"column":77,"offset":36497},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":305,"column":3,"offset":36501},"end":{"line":305,"column":21,"offset":36519},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":36499},"end":{"line":305,"column":23,"offset":36521},"indent":[]}},{"type":"text","value":"\nYeah, no, it’s really a hard question. Honestly, the answer’s going to be different team to team at Shopify. One of the patterns that I’ve seen in my years at Shopify is that we built a lot of features. We move really quickly leading up to Black Friday and Cyber Monday, because that’s when our merchants make the vast majority of their sales for the year. So, it’s really important that we’ve given them the tools that they need to be successful during that time.","position":{"start":{"line":305,"column":23,"offset":36521},"end":{"line":306,"column":465,"offset":36986},"indent":[1]}}],"position":{"start":{"line":305,"column":1,"offset":36499},"end":{"line":306,"column":465,"offset":36986},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":308,"column":3,"offset":36990},"end":{"line":308,"column":21,"offset":37008},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":36988},"end":{"line":308,"column":23,"offset":37010},"indent":[]}},{"type":"text","value":"\nCome the holiday season, we actually tend to cool down a bit on feature development, just because we don’t want to be breaking things when our merchants are having their most important sales of the year. So, often, that feature cooldown can be a good time to tackle some of these larger units of tech debt. That said, I’m not saying that we just leave tech debt to do at one point in the year. We definitely try to find some pause between projects, or even just parallel tracks of work, where some people are working on more technical debt, and some people are working on product features. It’s definitely a hard balance, but we have been slowly chipping away at it.","position":{"start":{"line":308,"column":23,"offset":37010},"end":{"line":309,"column":667,"offset":37677},"indent":[1]}}],"position":{"start":{"line":308,"column":1,"offset":36988},"end":{"line":309,"column":667,"offset":37677},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":311,"column":3,"offset":37681},"end":{"line":311,"column":14,"offset":37692},"indent":[]}}],"position":{"start":{"line":311,"column":1,"offset":37679},"end":{"line":311,"column":16,"offset":37694},"indent":[]}},{"type":"text","value":"\nI understand that the Shopify Fulfillment Network, which you mentioned earlier, that’s a separate codebase. It also is or was a Rails monolith. You’re currently tackling a similar project in that codebase, but adjusting some things based on what you’ve learned from this first major…","position":{"start":{"line":311,"column":16,"offset":37694},"end":{"line":312,"column":286,"offset":37980},"indent":[1]}}],"position":{"start":{"line":311,"column":1,"offset":37679},"end":{"line":312,"column":286,"offset":37980},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":314,"column":3,"offset":37984},"end":{"line":314,"column":21,"offset":38002},"indent":[]}}],"position":{"start":{"line":314,"column":1,"offset":37982},"end":{"line":314,"column":23,"offset":38004},"indent":[]}},{"type":"text","value":"\nDecomposition.","position":{"start":{"line":314,"column":23,"offset":38004},"end":{"line":315,"column":15,"offset":38019},"indent":[1]}}],"position":{"start":{"line":314,"column":1,"offset":37982},"end":{"line":315,"column":15,"offset":38019},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":317,"column":3,"offset":38023},"end":{"line":317,"column":14,"offset":38034},"indent":[]}}],"position":{"start":{"line":317,"column":1,"offset":38021},"end":{"line":317,"column":16,"offset":38036},"indent":[]}},{"type":"text","value":"\n… decomposition componentization effort.","position":{"start":{"line":317,"column":16,"offset":38036},"end":{"line":318,"column":43,"offset":38079},"indent":[1]}}],"position":{"start":{"line":317,"column":1,"offset":38021},"end":{"line":318,"column":43,"offset":38079},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":320,"column":3,"offset":38083},"end":{"line":320,"column":21,"offset":38101},"indent":[]}}],"position":{"start":{"line":320,"column":1,"offset":38081},"end":{"line":320,"column":23,"offset":38103},"indent":[]}},{"type":"text","value":"\nExactly.","position":{"start":{"line":320,"column":23,"offset":38103},"end":{"line":321,"column":9,"offset":38112},"indent":[1]}}],"position":{"start":{"line":320,"column":1,"offset":38081},"end":{"line":321,"column":9,"offset":38112},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":323,"column":3,"offset":38116},"end":{"line":323,"column":14,"offset":38127},"indent":[]}}],"position":{"start":{"line":323,"column":1,"offset":38114},"end":{"line":323,"column":16,"offset":38129},"indent":[]}},{"type":"text","value":"\nTell me about round two. What’s different this time in the sequel?","position":{"start":{"line":323,"column":16,"offset":38129},"end":{"line":324,"column":67,"offset":38196},"indent":[1]}}],"position":{"start":{"line":323,"column":1,"offset":38114},"end":{"line":324,"column":67,"offset":38196},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":326,"column":3,"offset":38200},"end":{"line":326,"column":21,"offset":38218},"indent":[]}}],"position":{"start":{"line":326,"column":1,"offset":38198},"end":{"line":326,"column":23,"offset":38220},"indent":[]}},{"type":"text","value":"\nYeah. We actually took a pretty different philosophical approach. What we did in Core was we moved all of the code into the components, and then slowly, over time, started trying to break some of those dependencies, whereas what we’ve done in the Shopify Fulfillment Network was we’ve introduced separate components. We’ve actually used Rails engines, which are like the one modularity feature that comes out of the box with Rails, and that can allow us to enforce those boundaries a little bit more strictly. Then, over time, piece by piece, moved bits of code into it that are always respecting the boundaries.","position":{"start":{"line":326,"column":23,"offset":38220},"end":{"line":327,"column":613,"offset":38833},"indent":[1]}}],"position":{"start":{"line":326,"column":1,"offset":38198},"end":{"line":327,"column":613,"offset":38833},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":329,"column":3,"offset":38837},"end":{"line":329,"column":21,"offset":38855},"indent":[]}}],"position":{"start":{"line":329,"column":1,"offset":38835},"end":{"line":329,"column":23,"offset":38857},"indent":[]}},{"type":"text","value":"\nSo, we flipped it on its head that way, whereas we still do have the main app controllers, models, etc., but the hard rule is we can’t add any more code into the app folder. All new code goes into component folders. Over time, we’re pulling code from the app folder out into its, basically, correct component, so that anything that’s in a component is respecting the component boundaries, whereas that is not the case in Core.","position":{"start":{"line":329,"column":23,"offset":38857},"end":{"line":330,"column":427,"offset":39284},"indent":[1]}}],"position":{"start":{"line":329,"column":1,"offset":38835},"end":{"line":330,"column":427,"offset":39284},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":332,"column":3,"offset":39288},"end":{"line":332,"column":14,"offset":39299},"indent":[]}}],"position":{"start":{"line":332,"column":1,"offset":39286},"end":{"line":332,"column":16,"offset":39301},"indent":[]}},{"type":"text","value":"\nInteresting, so, with Core, the approach was move all the files around into their appropriate directories, and then, over time, reduce the linkedness or monolithic-ness of each component, whereas with Fulfillment, you basically said, keep the existing monolith as is, but each new feature has to be added to something that’s external in a Rails engine. Then, we’ll have some connection between the two, so that the functionality makes it into the application, but we always preserve this, I guess, invariance because all of the new components are modularized. Is that about right?","position":{"start":{"line":332,"column":16,"offset":39301},"end":{"line":333,"column":581,"offset":39882},"indent":[1]}}],"position":{"start":{"line":332,"column":1,"offset":39286},"end":{"line":333,"column":581,"offset":39882},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":335,"column":3,"offset":39886},"end":{"line":335,"column":21,"offset":39904},"indent":[]}}],"position":{"start":{"line":335,"column":1,"offset":39884},"end":{"line":335,"column":23,"offset":39906},"indent":[]}},{"type":"text","value":"\nYeah, that’s right. One of the main benefits of that is that with so many developers working in a codebase, people tend to want to follow the patterns that they see existing. In Core, there is a mix of good patterns and bad patterns, because some stuff has been adjusted to break that interdependency, and some stuff hasn’t. So, it’s hard to know which pattern to follow, which way is the right way, when there are both examples, whereas in SFN, anything that has been componentized is following the patterns that we’re wanting to strive for, so there’s more good examples to be able to learn from, and demonstrate to other developers, and follow.","position":{"start":{"line":335,"column":23,"offset":39906},"end":{"line":336,"column":648,"offset":40554},"indent":[1]}}],"position":{"start":{"line":335,"column":1,"offset":39884},"end":{"line":336,"column":648,"offset":40554},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":338,"column":3,"offset":40558},"end":{"line":338,"column":14,"offset":40569},"indent":[]}}],"position":{"start":{"line":338,"column":1,"offset":40556},"end":{"line":338,"column":16,"offset":40571},"indent":[]}},{"type":"text","value":"\nI get all the learnings here. This is really fantastic insight. One thing I’d love to hear about is like, what is the process on the ground that you arrive at these insights? Like, for this new project, we don’t want to move a bunch of stuff in the existing codebase around, but we want to start with something new, or moving from the dynamic dependency call graph to the static version, what are those conversations like? Is it you and a bunch of other engineers or engineering managers in a room, whiteboarding, or someone coming up with a bright idea, and slowly convincing other people? Are there any, I guess, war stories that come to mind when you reach these insights?","position":{"start":{"line":338,"column":16,"offset":40571},"end":{"line":339,"column":676,"offset":41247},"indent":[1]}}],"position":{"start":{"line":338,"column":1,"offset":40556},"end":{"line":339,"column":676,"offset":41247},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":341,"column":3,"offset":41251},"end":{"line":341,"column":21,"offset":41269},"indent":[]}}],"position":{"start":{"line":341,"column":1,"offset":41249},"end":{"line":341,"column":23,"offset":41271},"indent":[]}},{"type":"text","value":"\nYeah. It’s always a conclusion that we come to over time. In the example of Wedge, it was working well for a while, but over time, the problems with it became louder, and louder, and louder until we couldn’t ignore them. So with that one, it was really, as our test suite was getting larger and slower, it was really just that it wasn’t a helpful feedback loop to have to wait for that entire test suite to run to be able to get that insight. And so we knew there was a problem with that. But then the question is, what’s the solution?","position":{"start":{"line":341,"column":23,"offset":41271},"end":{"line":342,"column":536,"offset":41807},"indent":[1]}}],"position":{"start":{"line":341,"column":1,"offset":41249},"end":{"line":342,"column":536,"offset":41807},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":344,"column":3,"offset":41811},"end":{"line":344,"column":21,"offset":41829},"indent":[]}}],"position":{"start":{"line":344,"column":1,"offset":41809},"end":{"line":344,"column":23,"offset":41831},"indent":[]}},{"type":"text","value":"\nSo we have a few different avenues for brainstorming these ideas. One is actually a team whose mandate is architecture patterns, and they’re the ones that built Packwerk and provided a lot of the patterns to follow. And so sometimes it’s just projects that get resourced, and we do explore and prototype phases. And so being armed with the learnings from Wedge, it led us down the road to Packwerk.","position":{"start":{"line":344,"column":23,"offset":41831},"end":{"line":345,"column":399,"offset":42230},"indent":[1]}}],"position":{"start":{"line":344,"column":1,"offset":41809},"end":{"line":345,"column":399,"offset":42230},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":347,"column":3,"offset":42234},"end":{"line":347,"column":21,"offset":42252},"indent":[]}}],"position":{"start":{"line":347,"column":1,"offset":42232},"end":{"line":347,"column":23,"offset":42254},"indent":[]}},{"type":"text","value":"\nBut the other thing is we have a software architecture guild at Shopify, which is basically anyone from the company who is interested in software architecture. We have a Slack channel and a bi-weekly meetup. And that’s where a lot of these conversations come to a head. Because I think there were a lot of learnings from Core, but then for example, the developers who were starting to build out SFN may not have had access to that frontline information.","position":{"start":{"line":347,"column":23,"offset":42254},"end":{"line":348,"column":454,"offset":42708},"indent":[1]}}],"position":{"start":{"line":347,"column":1,"offset":42232},"end":{"line":348,"column":454,"offset":42708},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":350,"column":3,"offset":42712},"end":{"line":350,"column":21,"offset":42730},"indent":[]}}],"position":{"start":{"line":350,"column":1,"offset":42710},"end":{"line":350,"column":23,"offset":42732},"indent":[]}},{"type":"text","value":"\nAnd so we did a lot of pairing actually as a way to share this knowledge and have a lot of discussions with the architecture guild. Because Shopify is very, I guess each team has a lot of autonomy. So the SFN team had the autonomy to decide what the right solution for it was, but definitely wanted to leverage the learnings that were present from Core. So that’s the type of discussion that we would have at an architecture guild. Or we also do technical design reviews for any big tech projects we’re kicking off. So that would be another. We have templates for those, and we have filled those templates with some prompting and questions to try to make people think about modularization as part of the upfront design.","position":{"start":{"line":350,"column":23,"offset":42732},"end":{"line":351,"column":720,"offset":43452},"indent":[1]}}],"position":{"start":{"line":350,"column":1,"offset":42710},"end":{"line":351,"column":720,"offset":43452},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":353,"column":3,"offset":43456},"end":{"line":353,"column":14,"offset":43467},"indent":[]}}],"position":{"start":{"line":353,"column":1,"offset":43454},"end":{"line":353,"column":16,"offset":43469},"indent":[]}},{"type":"text","value":"\nInteresting. Tell me more about this guild. So what is a guild exactly? Is it just a collection of individuals who have a common technical interest area? Or how is it organized? Is there a process associated with it? How does it fit into the overall org structure of the engineering team?","position":{"start":{"line":353,"column":16,"offset":43469},"end":{"line":354,"column":289,"offset":43758},"indent":[1]}}],"position":{"start":{"line":353,"column":1,"offset":43454},"end":{"line":354,"column":289,"offset":43758},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":356,"column":3,"offset":43762},"end":{"line":356,"column":21,"offset":43780},"indent":[]}}],"position":{"start":{"line":356,"column":1,"offset":43760},"end":{"line":356,"column":23,"offset":43782},"indent":[]}},{"type":"text","value":"\nYeah. Actually it doesn’t fit into the org structure of the engineering team. It’s composed of people from across everywhere in the engineering organization. It’s completely opt-in, and it grew organically from people who were curious to be having conversations like this. I think one big learning actually that my coworker Phillip called out in his blog post was that he wished that we had started this sooner in the componentization process. So more minds could be involved and had buy-in basically for them to apply the approach that we were aligning upon in their different areas of the company.","position":{"start":{"line":356,"column":23,"offset":43782},"end":{"line":357,"column":600,"offset":44382},"indent":[1]}}],"position":{"start":{"line":356,"column":1,"offset":43760},"end":{"line":357,"column":600,"offset":44382},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":359,"column":3,"offset":44386},"end":{"line":359,"column":21,"offset":44404},"indent":[]}}],"position":{"start":{"line":359,"column":1,"offset":44384},"end":{"line":359,"column":23,"offset":44406},"indent":[]}},{"type":"text","value":"\nBut it really is just people that want to nerd out about software architecture, and people come with presentations every other week. Sometimes we’ll just share the architecture of one of our systems. Sometimes we’ll have more pointed discussions about certain software design strategies. It’s pretty organic, but people like it.","position":{"start":{"line":359,"column":23,"offset":44406},"end":{"line":360,"column":329,"offset":44735},"indent":[1]}}],"position":{"start":{"line":359,"column":1,"offset":44384},"end":{"line":360,"column":329,"offset":44735},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":362,"column":3,"offset":44739},"end":{"line":362,"column":14,"offset":44750},"indent":[]}}],"position":{"start":{"line":362,"column":1,"offset":44737},"end":{"line":362,"column":16,"offset":44752},"indent":[]}},{"type":"text","value":"\nThat’s awesome. So the guild formed after the start of the original project.","position":{"start":{"line":362,"column":16,"offset":44752},"end":{"line":363,"column":77,"offset":44829},"indent":[1]}}],"position":{"start":{"line":362,"column":1,"offset":44737},"end":{"line":363,"column":77,"offset":44829},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":365,"column":3,"offset":44833},"end":{"line":365,"column":21,"offset":44851},"indent":[]}}],"position":{"start":{"line":365,"column":1,"offset":44831},"end":{"line":365,"column":23,"offset":44853},"indent":[]}},{"type":"text","value":"\nYeah. That’s right.","position":{"start":{"line":365,"column":23,"offset":44853},"end":{"line":366,"column":20,"offset":44873},"indent":[1]}}],"position":{"start":{"line":365,"column":1,"offset":44831},"end":{"line":366,"column":20,"offset":44873},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":368,"column":3,"offset":44877},"end":{"line":368,"column":14,"offset":44888},"indent":[]}}],"position":{"start":{"line":368,"column":1,"offset":44875},"end":{"line":368,"column":16,"offset":44890},"indent":[]}},{"type":"text","value":"\nAt what stage do you think it makes sense to form a guild? I think that we run into the same issue, and I think a lot of other engineering organizations run into this issue, where you have your org chart and you try your best to produce an org chart that reflects the needs of the product and how knowledge and information needs to flow. But no chart is ever going to be perfect, and there’s all these areas of expertise that don’t neatly fit into that. And I guess the question in my mind has always been, at what point do you start to need these guild structures? Is it at 100 engineers? Is it at 1,000 engineers? Or what, in your mind, is the right size?","position":{"start":{"line":368,"column":16,"offset":44890},"end":{"line":369,"column":658,"offset":45548},"indent":[1]}}],"position":{"start":{"line":368,"column":1,"offset":44875},"end":{"line":369,"column":658,"offset":45548},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":371,"column":3,"offset":45552},"end":{"line":371,"column":21,"offset":45570},"indent":[]}}],"position":{"start":{"line":371,"column":1,"offset":45550},"end":{"line":371,"column":23,"offset":45572},"indent":[]}},{"type":"text","value":"\nYeah. We’ve actually experimented with a few different things. The guild is more of a meetup. We less drive change through the guild, I would say, other than grassroots movements. But we also have what we call a technical leadership team, which is on a rotational basis. Technical leaders from across the company will be on that team. And anytime we’re doing a tech design review, you’ll get paired up with someone from the technical leadership team. You can bring them your gnarliest problems, and it’s made up of people from all different parts of the org with all different perspectives on the problem.","position":{"start":{"line":371,"column":23,"offset":45572},"end":{"line":372,"column":606,"offset":46178},"indent":[1]}}],"position":{"start":{"line":371,"column":1,"offset":45550},"end":{"line":372,"column":606,"offset":46178},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":374,"column":3,"offset":46182},"end":{"line":374,"column":21,"offset":46200},"indent":[]}}],"position":{"start":{"line":374,"column":1,"offset":46180},"end":{"line":374,"column":23,"offset":46202},"indent":[]}},{"type":"text","value":"\nSo it’s a way to try to, I guess, make sure that we’re leveraging the learnings that are available at the company level. And then there’s also what we were chatting about before, I forget what it’s… the tools and patterns team. And their actual mandate and what they work on day in and day out is building out some of these tools and patterns.","position":{"start":{"line":374,"column":23,"offset":46202},"end":{"line":375,"column":346,"offset":46548},"indent":[1]}}],"position":{"start":{"line":374,"column":1,"offset":46180},"end":{"line":375,"column":346,"offset":46548},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":377,"column":3,"offset":46552},"end":{"line":377,"column":21,"offset":46570},"indent":[]}}],"position":{"start":{"line":377,"column":1,"offset":46550},"end":{"line":377,"column":23,"offset":46572},"indent":[]}},{"type":"text","value":"\nAnd I think I would guess that team spun up probably in 2018 just based on this project having started in 2017. And yeah, we were probably 500 to 600 engineers around then. It’s going to be different for every organization, and I think it depends on how much your organization already has it baked into their DNA to be thinking about these things, to be thinking about good software design, technical initiatives, etc., or not. Sometimes it might make sense to start earlier if that’s not as organically present.","position":{"start":{"line":377,"column":23,"offset":46572},"end":{"line":378,"column":513,"offset":47085},"indent":[1]}}],"position":{"start":{"line":377,"column":1,"offset":46550},"end":{"line":378,"column":513,"offset":47085},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":380,"column":3,"offset":47089},"end":{"line":380,"column":21,"offset":47107},"indent":[]}}],"position":{"start":{"line":380,"column":1,"offset":47087},"end":{"line":380,"column":23,"offset":47109},"indent":[]}},{"type":"text","value":"\nThere’s trade-offs to each approach. One of the challenges that the tools and patterns team has is that they’re just building tools and patterns, but they aren’t necessarily using those tools and patterns to build a product. So they need to make sure that they are in touch with the people that are using those tools and patterns and actually solving the right problems. And so we do that through pairing and internal documentation presentations, etc. But we really try to make sure that the problems that need to be solved are being solved, and we’re not just adding friction to developers’ lives because we think it’s nicer.","position":{"start":{"line":380,"column":23,"offset":47109},"end":{"line":381,"column":627,"offset":47736},"indent":[1]}}],"position":{"start":{"line":380,"column":1,"offset":47087},"end":{"line":381,"column":627,"offset":47736},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":383,"column":3,"offset":47740},"end":{"line":383,"column":14,"offset":47751},"indent":[]}}],"position":{"start":{"line":383,"column":1,"offset":47738},"end":{"line":383,"column":16,"offset":47753},"indent":[]}},{"type":"text","value":"\nYeah. That makes a ton of sense. Looking back on both projects that you’ve been involved in with decomposition, to what extent are the patterns that you discovered, do you think, specific to those particular codebases? And to what extent do you feel like there’s some general principles here that would be widely applicable? That’s one question. A more proximal question would be the way that you’re approaching modularization on the fulfillment network codebase. Do you wish that you had done that with the main codebase initially, knowing what you know now? Or do you think that each codebase found its proper approach?","position":{"start":{"line":383,"column":16,"offset":47753},"end":{"line":384,"column":622,"offset":48375},"indent":[1]}}],"position":{"start":{"line":383,"column":1,"offset":47738},"end":{"line":384,"column":622,"offset":48375},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":386,"column":3,"offset":48379},"end":{"line":386,"column":21,"offset":48397},"indent":[]}}],"position":{"start":{"line":386,"column":1,"offset":48377},"end":{"line":386,"column":23,"offset":48399},"indent":[]}},{"type":"text","value":"\nYeah. It’s a challenging question because they both have their trade-offs. So I think that you just need to know in your situation which trade-offs you’re willing to accept. For the Shopify Core case, what we were really struggling with and really wanting to optimize for was that we had a lot of code that didn’t have ownership. And so having moved the code into folders that have explicit owners is a big win for that. Whereas in SFN, we still have a lot of code living in the app component that doesn’t have as clear owners, but for us that’s okay because it’s a smaller group of people working on it. And so it’s easier to share the load across our team, which is smaller. Whereas for core, it was really important that we get it right in terms of code ownership.","position":{"start":{"line":386,"column":23,"offset":48399},"end":{"line":387,"column":768,"offset":49167},"indent":[1]}}],"position":{"start":{"line":386,"column":1,"offset":48377},"end":{"line":387,"column":768,"offset":49167},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":389,"column":3,"offset":49171},"end":{"line":389,"column":21,"offset":49189},"indent":[]}}],"position":{"start":{"line":389,"column":1,"offset":49169},"end":{"line":389,"column":23,"offset":49191},"indent":[]}},{"type":"text","value":"\nSo I think you really have to ask yourself, what is the intermediate state that you’re most comfortable with? Because these things take a long time. And so I think Phillip has an amazing quote in his blog post. He says, “My experience tells me that a temporary incomplete state will at least last longer than you expect. So choose an approach based on which intermediate state is most useful for your situation.” And it’s 100% true in this case. Both of those codebases are in intermediate states that are correct for them, and I think you just need to think about what that means for your codebase.","position":{"start":{"line":389,"column":23,"offset":49191},"end":{"line":390,"column":600,"offset":49791},"indent":[1]}}],"position":{"start":{"line":389,"column":1,"offset":49169},"end":{"line":390,"column":600,"offset":49791},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":392,"column":3,"offset":49795},"end":{"line":392,"column":14,"offset":49806},"indent":[]}}],"position":{"start":{"line":392,"column":1,"offset":49793},"end":{"line":392,"column":16,"offset":49808},"indent":[]}},{"type":"text","value":"\nYeah. That’s very fair. Somewhere out there there’s a person listening who wants to propose a big refactoring re-architecture project, but you often run into resistance from Product, from other stakeholders in the business because the value of such a project is not always clear. What advice would you have for people in that position, just in the very early stages of thinking through starting such a project and getting organizational buy-in?","position":{"start":{"line":392,"column":16,"offset":49808},"end":{"line":393,"column":445,"offset":50253},"indent":[1]}}],"position":{"start":{"line":392,"column":1,"offset":49793},"end":{"line":393,"column":445,"offset":50253},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":395,"column":3,"offset":50257},"end":{"line":395,"column":21,"offset":50275},"indent":[]}}],"position":{"start":{"line":395,"column":1,"offset":50255},"end":{"line":395,"column":23,"offset":50277},"indent":[]}},{"type":"text","value":"\nYeah. One thing that I think about often as it relates to this is, I don’t know if you’re familiar with Martin Fowler’s design stamina hypothesis, but it basically says that in the beginning—","position":{"start":{"line":395,"column":23,"offset":50277},"end":{"line":396,"column":192,"offset":50469},"indent":[1]}}],"position":{"start":{"line":395,"column":1,"offset":50255},"end":{"line":396,"column":192,"offset":50469},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":398,"column":3,"offset":50473},"end":{"line":398,"column":14,"offset":50484},"indent":[]}}],"position":{"start":{"line":398,"column":1,"offset":50471},"end":{"line":398,"column":16,"offset":50486},"indent":[]}},{"type":"text","value":"\nI read that in your post.","position":{"start":{"line":398,"column":16,"offset":50486},"end":{"line":399,"column":26,"offset":50512},"indent":[1]}}],"position":{"start":{"line":398,"column":1,"offset":50471},"end":{"line":399,"column":26,"offset":50512},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":401,"column":3,"offset":50516},"end":{"line":401,"column":21,"offset":50534},"indent":[]}}],"position":{"start":{"line":401,"column":1,"offset":50514},"end":{"line":401,"column":23,"offset":50536},"indent":[]}},{"type":"text","value":"\nYeah, I love it. I talk about it all the time. It basically says that in the beginning, no design is actually the best design, and you’ll be able to move more quickly without design. But at some point you’re going to reach a point where not having a design is going to slow you down more and more and more, and adding incremental functionality just gets harder and harder.","position":{"start":{"line":401,"column":23,"offset":50536},"end":{"line":402,"column":373,"offset":50909},"indent":[1]}}],"position":{"start":{"line":401,"column":1,"offset":50514},"end":{"line":402,"column":373,"offset":50909},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":404,"column":3,"offset":50913},"end":{"line":404,"column":21,"offset":50931},"indent":[]}}],"position":{"start":{"line":404,"column":1,"offset":50911},"end":{"line":404,"column":23,"offset":50933},"indent":[]}},{"type":"text","value":"\nSo the first question that I would ask is, are we past that point? He calls it the design payoff line. Are we really at a point where we need this design? Because honestly, it’s worse to have a bad design than to have no design, in my opinion. So you want to make sure that you have enough information and have built enough features to understand what design your codebase needs. So that’s the first thing.","position":{"start":{"line":404,"column":23,"offset":50933},"end":{"line":405,"column":407,"offset":51340},"indent":[1]}}],"position":{"start":{"line":404,"column":1,"offset":50911},"end":{"line":405,"column":407,"offset":51340},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":407,"column":3,"offset":51344},"end":{"line":407,"column":21,"offset":51362},"indent":[]}}],"position":{"start":{"line":407,"column":1,"offset":51342},"end":{"line":407,"column":23,"offset":51364},"indent":[]}},{"type":"text","value":"\nBut if you think that you are in that position, I always find that the business and the product managers are very motivated by data. So the more data that you can capture, the better. So I don’t know that your organization uses story points, but say you could point to an issue of story point three that used to take half a day. Now it takes a day-and-a-half. Anything that you can point to to show that you are getting slower is a really good starting point.","position":{"start":{"line":407,"column":23,"offset":51364},"end":{"line":408,"column":460,"offset":51824},"indent":[1]}}],"position":{"start":{"line":407,"column":1,"offset":51342},"end":{"line":408,"column":460,"offset":51824},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":410,"column":3,"offset":51828},"end":{"line":410,"column":21,"offset":51846},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":51826},"end":{"line":410,"column":23,"offset":51848},"indent":[]}},{"type":"text","value":"\nOften they will have been feeling similar things. It probably won’t come out of left field to them. They might feel like projects are taking longer than they should and are harder than they should. So the more you socialize the idea of, “X would be easier if we did this” and really just keep being the squeaky wheel, that can be really helpful.","position":{"start":{"line":410,"column":23,"offset":51848},"end":{"line":411,"column":346,"offset":52194},"indent":[1]}}],"position":{"start":{"line":410,"column":1,"offset":51826},"end":{"line":411,"column":346,"offset":52194},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":413,"column":3,"offset":52198},"end":{"line":413,"column":21,"offset":52216},"indent":[]}}],"position":{"start":{"line":413,"column":1,"offset":52196},"end":{"line":413,"column":23,"offset":52218},"indent":[]}},{"type":"text","value":"\nThe other thing too is we would absolutely never have gotten buy-in to stop feature development and do this. So if you can do it in an incremental way that you can chip away at over time, it’ll be much more likely that you can get buy-in. And if you’re in the lucky situation where your company has enough engineers to be working on parallel tracks of work, then if some people can still be building features while some people do this, it’s going to be a lot easier of a pill to swallow for the business.","position":{"start":{"line":413,"column":23,"offset":52218},"end":{"line":414,"column":505,"offset":52723},"indent":[1]}}],"position":{"start":{"line":413,"column":1,"offset":52196},"end":{"line":414,"column":505,"offset":52723},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":416,"column":3,"offset":52727},"end":{"line":416,"column":14,"offset":52738},"indent":[]}}],"position":{"start":{"line":416,"column":1,"offset":52725},"end":{"line":416,"column":16,"offset":52740},"indent":[]}},{"type":"text","value":"\nYeah. That makes a lot of sense. Kirsten, thanks so much for taking the time today. If there’s people listening to this and they’re interested in learning more about this effort or more about projects and learnings that you’ve undertaken, where should they go on the internet to find out more and learn more?","position":{"start":{"line":416,"column":16,"offset":52740},"end":{"line":417,"column":309,"offset":53049},"indent":[1]}}],"position":{"start":{"line":416,"column":1,"offset":52725},"end":{"line":417,"column":309,"offset":53049},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":419,"column":3,"offset":53053},"end":{"line":419,"column":21,"offset":53071},"indent":[]}}],"position":{"start":{"line":419,"column":1,"offset":53051},"end":{"line":419,"column":23,"offset":53073},"indent":[]}},{"type":"text","value":"\nWell, Shopify has an engineering blog where we’ve published a few different blog posts on this topic. So I would definitely start with checking those out. We also have a ShipIt Presents new YouTube series about some of the engineering efforts at Shopify, and there’s an episode that speaks about this as well. So check those out. And there’s lots of other interesting non-componentization-related stuff on the shelf for the engineering blog. So I would say give that a look.","position":{"start":{"line":419,"column":23,"offset":53073},"end":{"line":420,"column":475,"offset":53548},"indent":[1]}}],"position":{"start":{"line":419,"column":1,"offset":53051},"end":{"line":420,"column":475,"offset":53548},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Beyang Liu:","position":{"start":{"line":422,"column":3,"offset":53552},"end":{"line":422,"column":14,"offset":53563},"indent":[]}}],"position":{"start":{"line":422,"column":1,"offset":53550},"end":{"line":422,"column":16,"offset":53565},"indent":[]}},{"type":"text","value":"\nAll right. My guest today has been Kirsten Westeinde. Kirsten, thanks for being on the show.","position":{"start":{"line":422,"column":16,"offset":53565},"end":{"line":423,"column":93,"offset":53658},"indent":[1]}}],"position":{"start":{"line":422,"column":1,"offset":53550},"end":{"line":423,"column":93,"offset":53658},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Kirsten Westeinde:","position":{"start":{"line":425,"column":3,"offset":53662},"end":{"line":425,"column":21,"offset":53680},"indent":[]}}],"position":{"start":{"line":425,"column":1,"offset":53660},"end":{"line":425,"column":23,"offset":53682},"indent":[]}},{"type":"text","value":"\nThanks for having me. It was fun.","position":{"start":{"line":425,"column":23,"offset":53682},"end":{"line":426,"column":34,"offset":53716},"indent":[1]}}],"position":{"start":{"line":425,"column":1,"offset":53660},"end":{"line":426,"column":34,"offset":53716},"indent":[1]}},{"type":"html","value":"<!-- END TRANSCRIPT -->","position":{"start":{"line":428,"column":1,"offset":53718},"end":{"line":428,"column":24,"offset":53741},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":429,"column":1,"offset":53742}}}}