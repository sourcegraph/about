{"expireTime":9007200905229170000,"key":"transformer-remark-markdown-html-ast-f5b9ad28a5727aa8a3dcfe4b452aff4b-gatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-unwrap-imagesgatsby-remark-imagesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"raw","value":"<!-- START AUDIO -->","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":21,"offset":21}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<audio className=\"object-center\" src=\"https://www.buzzsprout.com/1097978/5701504-syrus-akbary.mp3\" controls preload=\"none\">","position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":124,"offset":146}}},{"type":"raw","value":"</audio>","position":{"start":{"line":4,"column":124,"offset":146},"end":{"line":4,"column":132,"offset":154}}}],"position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":132,"offset":154}}},{"type":"text","value":"\n"},{"type":"raw","value":"<!-- END AUDIO -->","position":{"start":{"line":6,"column":1,"offset":156},"end":{"line":6,"column":19,"offset":174}}},{"type":"text","value":"\n"},{"type":"raw","value":"<!-- START GUESTS -->","position":{"start":{"line":8,"column":1,"offset":176},"end":{"line":8,"column":22,"offset":197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<span>","position":{"start":{"line":10,"column":1,"offset":199},"end":{"line":10,"column":7,"offset":205}}},{"type":"text","value":"Syrus Akbary, Beyang Liu","position":{"start":{"line":10,"column":7,"offset":205},"end":{"line":10,"column":31,"offset":229}}},{"type":"raw","value":"</span>","position":{"start":{"line":10,"column":31,"offset":229},"end":{"line":10,"column":38,"offset":236}}}],"position":{"start":{"line":10,"column":1,"offset":199},"end":{"line":10,"column":38,"offset":236}}},{"type":"text","value":"\n"},{"type":"raw","value":"<!-- END GUESTS -->","position":{"start":{"line":12,"column":1,"offset":238},"end":{"line":12,"column":20,"offset":257}}},{"type":"text","value":"\n"},{"type":"raw","value":"<!-- START SUMMARY -->","position":{"start":{"line":14,"column":1,"offset":259},"end":{"line":14,"column":23,"offset":281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://twitter.com/syrusakbary"},"children":[{"type":"text","value":"Syrus Akbary","position":{"start":{"line":16,"column":2,"offset":284},"end":{"line":16,"column":14,"offset":296}}}],"position":{"start":{"line":16,"column":1,"offset":283},"end":{"line":16,"column":48,"offset":330}}},{"type":"text","value":" is the founder and CEO of ","position":{"start":{"line":16,"column":48,"offset":330},"end":{"line":16,"column":75,"offset":357}}},{"type":"element","tagName":"a","properties":{"href":"https://wasmer.io/"},"children":[{"type":"text","value":"Wasmer","position":{"start":{"line":16,"column":76,"offset":358},"end":{"line":16,"column":82,"offset":364}}}],"position":{"start":{"line":16,"column":75,"offset":357},"end":{"line":16,"column":103,"offset":385}}},{"type":"text","value":", the startup behind the ","position":{"start":{"line":16,"column":103,"offset":385},"end":{"line":16,"column":128,"offset":410}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/wasmerio/wasmer"},"children":[{"type":"text","value":"open-source web assembly runtime","position":{"start":{"line":16,"column":129,"offset":411},"end":{"line":16,"column":161,"offset":443}}}],"position":{"start":{"line":16,"column":128,"offset":410},"end":{"line":16,"column":198,"offset":480}}},{"type":"text","value":" that’s doing for WebAssembly what Docker did for LXC. Syrus explains what WebAssembly is, why it matters outside your browser, and how it compares to other virtualization technologies. He shares the pains that motivated him to look into WebAssembly and eventually led him to create a new WebAssembly runtime and a new company around it. We dive deep into WebAssembly as a technology, its portability and performance characteristics, and talk about the importance of prioritizing community and developer experience when building new development platforms.","position":{"start":{"line":16,"column":198,"offset":480},"end":{"line":16,"column":753,"offset":1035}}}],"position":{"start":{"line":16,"column":1,"offset":283},"end":{"line":16,"column":753,"offset":1035}}},{"type":"text","value":"\n"},{"type":"raw","value":"<!-- END SUMMARY -->","position":{"start":{"line":18,"column":1,"offset":1037},"end":{"line":18,"column":21,"offset":1057}}},{"type":"text","value":"\n"},{"type":"raw","value":"<!-- START SHOWNOTES -->","position":{"start":{"line":20,"column":1,"offset":1059},"end":{"line":20,"column":25,"offset":1083}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Wasmer: ","position":{"start":{"line":22,"column":1,"offset":1085},"end":{"line":22,"column":9,"offset":1093}}},{"type":"element","tagName":"a","properties":{"href":"https://wasmer.io"},"children":[{"type":"text","value":"https://wasmer.io","position":{"start":{"line":22,"column":9,"offset":1093},"end":{"line":22,"column":26,"offset":1110}}}],"position":{"start":{"line":22,"column":9,"offset":1093},"end":{"line":22,"column":26,"offset":1110}}},{"type":"text","value":", ","position":{"start":{"line":22,"column":26,"offset":1110},"end":{"line":22,"column":28,"offset":1112}}},{"type":"element","tagName":"a","properties":{"href":"https://twitter.com/wasmerio"},"children":[{"type":"text","value":"https://twitter.com/wasmerio","position":{"start":{"line":22,"column":28,"offset":1112},"end":{"line":22,"column":56,"offset":1140}}}],"position":{"start":{"line":22,"column":28,"offset":1112},"end":{"line":22,"column":56,"offset":1140}}}],"position":{"start":{"line":22,"column":1,"offset":1085},"end":{"line":22,"column":56,"offset":1140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Syrus Akbary: ","position":{"start":{"line":24,"column":1,"offset":1142},"end":{"line":24,"column":15,"offset":1156}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/syrusakbary"},"children":[{"type":"text","value":"https://github.com/syrusakbary","position":{"start":{"line":24,"column":15,"offset":1156},"end":{"line":24,"column":45,"offset":1186}}}],"position":{"start":{"line":24,"column":15,"offset":1156},"end":{"line":24,"column":45,"offset":1186}}},{"type":"text","value":", ","position":{"start":{"line":24,"column":45,"offset":1186},"end":{"line":24,"column":47,"offset":1188}}},{"type":"element","tagName":"a","properties":{"href":"https://twitter.com/syrusakbary"},"children":[{"type":"text","value":"https://twitter.com/syrusakbary","position":{"start":{"line":24,"column":47,"offset":1188},"end":{"line":24,"column":78,"offset":1219}}}],"position":{"start":{"line":24,"column":47,"offset":1188},"end":{"line":24,"column":78,"offset":1219}}}],"position":{"start":{"line":24,"column":1,"offset":1142},"end":{"line":24,"column":78,"offset":1219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Graphene, Python GraphQL framework created by Syrus: ","position":{"start":{"line":26,"column":1,"offset":1221},"end":{"line":26,"column":54,"offset":1274}}},{"type":"element","tagName":"a","properties":{"href":"https://graphene-python.org"},"children":[{"type":"text","value":"https://graphene-python.org","position":{"start":{"line":26,"column":54,"offset":1274},"end":{"line":26,"column":81,"offset":1301}}}],"position":{"start":{"line":26,"column":54,"offset":1274},"end":{"line":26,"column":81,"offset":1301}}}],"position":{"start":{"line":26,"column":1,"offset":1221},"end":{"line":26,"column":81,"offset":1301}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"WebAssembly: ","position":{"start":{"line":28,"column":1,"offset":1303},"end":{"line":28,"column":14,"offset":1316}}},{"type":"element","tagName":"a","properties":{"href":"https://webassembly.org"},"children":[{"type":"text","value":"https://webassembly.org","position":{"start":{"line":28,"column":14,"offset":1316},"end":{"line":28,"column":37,"offset":1339}}}],"position":{"start":{"line":28,"column":14,"offset":1316},"end":{"line":28,"column":37,"offset":1339}}}],"position":{"start":{"line":28,"column":1,"offset":1303},"end":{"line":28,"column":37,"offset":1339}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"asm.js: ","position":{"start":{"line":30,"column":1,"offset":1341},"end":{"line":30,"column":9,"offset":1349}}},{"type":"element","tagName":"a","properties":{"href":"http://asmjs.org"},"children":[{"type":"text","value":"http://asmjs.org","position":{"start":{"line":30,"column":9,"offset":1349},"end":{"line":30,"column":25,"offset":1365}}}],"position":{"start":{"line":30,"column":9,"offset":1349},"end":{"line":30,"column":25,"offset":1365}}}],"position":{"start":{"line":30,"column":1,"offset":1341},"end":{"line":30,"column":25,"offset":1365}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Alon Zakai, creator of asm.js: ","position":{"start":{"line":32,"column":1,"offset":1367},"end":{"line":32,"column":32,"offset":1398}}},{"type":"element","tagName":"a","properties":{"href":"https://twitter.com/kripken"},"children":[{"type":"text","value":"https://twitter.com/kripken","position":{"start":{"line":32,"column":32,"offset":1398},"end":{"line":32,"column":59,"offset":1425}}}],"position":{"start":{"line":32,"column":32,"offset":1398},"end":{"line":32,"column":59,"offset":1425}}}],"position":{"start":{"line":32,"column":1,"offset":1367},"end":{"line":32,"column":59,"offset":1425}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"LLVM: ","position":{"start":{"line":34,"column":1,"offset":1427},"end":{"line":34,"column":7,"offset":1433}}},{"type":"element","tagName":"a","properties":{"href":"https://llvm.org/"},"children":[{"type":"text","value":"https://llvm.org/","position":{"start":{"line":34,"column":7,"offset":1433},"end":{"line":34,"column":24,"offset":1450}}}],"position":{"start":{"line":34,"column":7,"offset":1433},"end":{"line":34,"column":24,"offset":1450}}}],"position":{"start":{"line":34,"column":1,"offset":1427},"end":{"line":34,"column":24,"offset":1450}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"NativeClient (NaCl): ","position":{"start":{"line":36,"column":1,"offset":1452},"end":{"line":36,"column":22,"offset":1473}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Google_Native_Client"},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Google_Native_Client","position":{"start":{"line":36,"column":22,"offset":1473},"end":{"line":36,"column":72,"offset":1523}}}],"position":{"start":{"line":36,"column":22,"offset":1473},"end":{"line":36,"column":72,"offset":1523}}}],"position":{"start":{"line":36,"column":1,"offset":1452},"end":{"line":36,"column":72,"offset":1523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Java Virtual Machine (JVM): ","position":{"start":{"line":38,"column":1,"offset":1525},"end":{"line":38,"column":29,"offset":1553}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Java_virtual_machine"},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Java_virtual_machine","position":{"start":{"line":38,"column":29,"offset":1553},"end":{"line":38,"column":79,"offset":1603}}}],"position":{"start":{"line":38,"column":29,"offset":1553},"end":{"line":38,"column":79,"offset":1603}}}],"position":{"start":{"line":38,"column":1,"offset":1525},"end":{"line":38,"column":79,"offset":1603}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"TeaVM: ","position":{"start":{"line":40,"column":1,"offset":1605},"end":{"line":40,"column":8,"offset":1612}}},{"type":"element","tagName":"a","properties":{"href":"http://teavm.org"},"children":[{"type":"text","value":"http://teavm.org","position":{"start":{"line":40,"column":8,"offset":1612},"end":{"line":40,"column":24,"offset":1628}}}],"position":{"start":{"line":40,"column":8,"offset":1612},"end":{"line":40,"column":24,"offset":1628}}}],"position":{"start":{"line":40,"column":1,"offset":1605},"end":{"line":40,"column":24,"offset":1628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"WAVM: ","position":{"start":{"line":42,"column":1,"offset":1630},"end":{"line":42,"column":7,"offset":1636}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/WAVM/WAVM"},"children":[{"type":"text","value":"https://github.com/WAVM/WAVM","position":{"start":{"line":42,"column":7,"offset":1636},"end":{"line":42,"column":35,"offset":1664}}}],"position":{"start":{"line":42,"column":7,"offset":1636},"end":{"line":42,"column":35,"offset":1664}}}],"position":{"start":{"line":42,"column":1,"offset":1630},"end":{"line":42,"column":35,"offset":1664}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Wasmjit (defunct): ","position":{"start":{"line":44,"column":1,"offset":1666},"end":{"line":44,"column":20,"offset":1685}}},{"type":"element","tagName":"a","properties":{"href":"https://web.archive.org/web/20181216234429/https://github.com/rianhunter/wasmjit"},"children":[{"type":"text","value":"https://web.archive.org/web/20181216234429/https://github.com/rianhunter/wasmjit","position":{"start":{"line":44,"column":20,"offset":1685},"end":{"line":44,"column":100,"offset":1765}}}],"position":{"start":{"line":44,"column":20,"offset":1685},"end":{"line":44,"column":100,"offset":1765}}}],"position":{"start":{"line":44,"column":1,"offset":1666},"end":{"line":44,"column":100,"offset":1765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Cloudflare workers and WebAssembly: ","position":{"start":{"line":46,"column":1,"offset":1767},"end":{"line":46,"column":37,"offset":1803}}},{"type":"element","tagName":"a","properties":{"href":"https://blog.cloudflare.com/webassembly-on-cloudflare-workers/"},"children":[{"type":"text","value":"https://blog.cloudflare.com/webassembly-on-cloudflare-workers/","position":{"start":{"line":46,"column":37,"offset":1803},"end":{"line":46,"column":99,"offset":1865}}}],"position":{"start":{"line":46,"column":37,"offset":1803},"end":{"line":46,"column":99,"offset":1865}}}],"position":{"start":{"line":46,"column":1,"offset":1767},"end":{"line":46,"column":99,"offset":1865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Lucet, Fastly’s WebAssembly runtime: ","position":{"start":{"line":48,"column":1,"offset":1867},"end":{"line":48,"column":38,"offset":1904}}},{"type":"element","tagName":"a","properties":{"href":"https://www.fastly.com/blog/announcing-lucet-fastly-native-webassembly-compiler-runtime"},"children":[{"type":"text","value":"https://www.fastly.com/blog/announcing-lucet-fastly-native-webassembly-compiler-runtime","position":{"start":{"line":48,"column":38,"offset":1904},"end":{"line":48,"column":125,"offset":1991}}}],"position":{"start":{"line":48,"column":38,"offset":1904},"end":{"line":48,"column":125,"offset":1991}}}],"position":{"start":{"line":48,"column":1,"offset":1867},"end":{"line":48,"column":125,"offset":1991}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"WAPM: ","position":{"start":{"line":50,"column":1,"offset":1993},"end":{"line":50,"column":7,"offset":1999}}},{"type":"element","tagName":"a","properties":{"href":"https://wapm.io"},"children":[{"type":"text","value":"https://wapm.io","position":{"start":{"line":50,"column":7,"offset":1999},"end":{"line":50,"column":22,"offset":2014}}}],"position":{"start":{"line":50,"column":7,"offset":1999},"end":{"line":50,"column":22,"offset":2014}}}],"position":{"start":{"line":50,"column":1,"offset":1993},"end":{"line":50,"column":22,"offset":2014}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"WASI: ","position":{"start":{"line":52,"column":1,"offset":2016},"end":{"line":52,"column":7,"offset":2022}}},{"type":"element","tagName":"a","properties":{"href":"https://wasi.dev"},"children":[{"type":"text","value":"https://wasi.dev","position":{"start":{"line":52,"column":7,"offset":2022},"end":{"line":52,"column":23,"offset":2038}}}],"position":{"start":{"line":52,"column":7,"offset":2022},"end":{"line":52,"column":23,"offset":2038}}}],"position":{"start":{"line":52,"column":1,"offset":2016},"end":{"line":52,"column":23,"offset":2038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Wasmer runtimes for different languages: ","position":{"start":{"line":54,"column":1,"offset":2040},"end":{"line":54,"column":42,"offset":2081}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/wasmerio/wasmer-python"},"children":[{"type":"text","value":"Python","position":{"start":{"line":54,"column":43,"offset":2082},"end":{"line":54,"column":49,"offset":2088}}}],"position":{"start":{"line":54,"column":42,"offset":2081},"end":{"line":54,"column":93,"offset":2132}}},{"type":"text","value":", ","position":{"start":{"line":54,"column":93,"offset":2132},"end":{"line":54,"column":95,"offset":2134}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/wasmerio/wasmer-python"},"children":[{"type":"text","value":"Java","position":{"start":{"line":54,"column":96,"offset":2135},"end":{"line":54,"column":100,"offset":2139}}}],"position":{"start":{"line":54,"column":95,"offset":2134},"end":{"line":54,"column":144,"offset":2183}}},{"type":"text","value":", ","position":{"start":{"line":54,"column":144,"offset":2183},"end":{"line":54,"column":146,"offset":2185}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/wasmerio/wasmer-go"},"children":[{"type":"text","value":"Go","position":{"start":{"line":54,"column":147,"offset":2186},"end":{"line":54,"column":149,"offset":2188}}}],"position":{"start":{"line":54,"column":146,"offset":2185},"end":{"line":54,"column":189,"offset":2228}}},{"type":"text","value":", ","position":{"start":{"line":54,"column":189,"offset":2228},"end":{"line":54,"column":191,"offset":2230}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/wasmerio/wasmer-ruby"},"children":[{"type":"text","value":"Ruby","position":{"start":{"line":54,"column":192,"offset":2231},"end":{"line":54,"column":196,"offset":2235}}}],"position":{"start":{"line":54,"column":191,"offset":2230},"end":{"line":54,"column":238,"offset":2277}}},{"type":"text","value":", ","position":{"start":{"line":54,"column":238,"offset":2277},"end":{"line":54,"column":240,"offset":2279}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/wasmerio/wasmer-php"},"children":[{"type":"text","value":"PHP","position":{"start":{"line":54,"column":241,"offset":2280},"end":{"line":54,"column":244,"offset":2283}}}],"position":{"start":{"line":54,"column":240,"offset":2279},"end":{"line":54,"column":285,"offset":2324}}}],"position":{"start":{"line":54,"column":1,"offset":2040},"end":{"line":54,"column":285,"offset":2324}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"GraalVM, project from Oracle to compile JVM bytecode into native binaries: ","position":{"start":{"line":56,"column":1,"offset":2326},"end":{"line":56,"column":76,"offset":2401}}},{"type":"element","tagName":"a","properties":{"href":"https://www.graalvm.org"},"children":[{"type":"text","value":"https://www.graalvm.org","position":{"start":{"line":56,"column":76,"offset":2401},"end":{"line":56,"column":99,"offset":2424}}}],"position":{"start":{"line":56,"column":76,"offset":2401},"end":{"line":56,"column":99,"offset":2424}}}],"position":{"start":{"line":56,"column":1,"offset":2326},"end":{"line":56,"column":99,"offset":2424}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Truffle Language Implementation Framework: ","position":{"start":{"line":58,"column":1,"offset":2426},"end":{"line":58,"column":44,"offset":2469}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/oracle/graal/tree/master/truffle"},"children":[{"type":"text","value":"https://github.com/oracle/graal/tree/master/truffle","position":{"start":{"line":58,"column":44,"offset":2469},"end":{"line":58,"column":95,"offset":2520}}}],"position":{"start":{"line":58,"column":44,"offset":2469},"end":{"line":58,"column":95,"offset":2520}}}],"position":{"start":{"line":58,"column":1,"offset":2426},"end":{"line":58,"column":95,"offset":2520}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Jython, version of Python that runs on the JVM: ","position":{"start":{"line":60,"column":1,"offset":2522},"end":{"line":60,"column":49,"offset":2570}}},{"type":"element","tagName":"a","properties":{"href":"https://www.jython.org/"},"children":[{"type":"text","value":"https://www.jython.org/","position":{"start":{"line":60,"column":49,"offset":2570},"end":{"line":60,"column":72,"offset":2593}}}],"position":{"start":{"line":60,"column":49,"offset":2570},"end":{"line":60,"column":72,"offset":2593}}}],"position":{"start":{"line":60,"column":1,"offset":2522},"end":{"line":60,"column":72,"offset":2593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"LXC, Linux containers: ","position":{"start":{"line":62,"column":1,"offset":2595},"end":{"line":62,"column":24,"offset":2618}}},{"type":"element","tagName":"a","properties":{"href":"https://linuxcontainers.org"},"children":[{"type":"text","value":"https://linuxcontainers.org","position":{"start":{"line":62,"column":24,"offset":2618},"end":{"line":62,"column":51,"offset":2645}}}],"position":{"start":{"line":62,"column":24,"offset":2618},"end":{"line":62,"column":51,"offset":2645}}}],"position":{"start":{"line":62,"column":1,"offset":2595},"end":{"line":62,"column":51,"offset":2645}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Docker: ","position":{"start":{"line":64,"column":1,"offset":2647},"end":{"line":64,"column":9,"offset":2655}}},{"type":"element","tagName":"a","properties":{"href":"https://www.docker.com"},"children":[{"type":"text","value":"https://www.docker.com","position":{"start":{"line":64,"column":9,"offset":2655},"end":{"line":64,"column":31,"offset":2677}}}],"position":{"start":{"line":64,"column":9,"offset":2655},"end":{"line":64,"column":31,"offset":2677}}}],"position":{"start":{"line":64,"column":1,"offset":2647},"end":{"line":64,"column":31,"offset":2677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Amazon Firecracker: ","position":{"start":{"line":66,"column":1,"offset":2679},"end":{"line":66,"column":21,"offset":2699}}},{"type":"element","tagName":"a","properties":{"href":"https://aws.amazon.com/blogs/aws/firecracker-lightweight-virtualization-for-serverless-computing/"},"children":[{"type":"text","value":"https://aws.amazon.com/blogs/aws/firecracker-lightweight-virtualization-for-serverless-computing/","position":{"start":{"line":66,"column":21,"offset":2699},"end":{"line":66,"column":118,"offset":2796}}}],"position":{"start":{"line":66,"column":21,"offset":2699},"end":{"line":66,"column":118,"offset":2796}}}],"position":{"start":{"line":66,"column":1,"offset":2679},"end":{"line":66,"column":118,"offset":2796}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Solomon Hykes’ (co-founder of Docker) tweet on WASM: ","position":{"start":{"line":68,"column":1,"offset":2798},"end":{"line":68,"column":54,"offset":2851}}},{"type":"element","tagName":"a","properties":{"href":"https://twitter.com/solomonstre/status/1111004913222324225"},"children":[{"type":"text","value":"https://twitter.com/solomonstre/status/1111004913222324225","position":{"start":{"line":68,"column":54,"offset":2851},"end":{"line":68,"column":112,"offset":2909}}}],"position":{"start":{"line":68,"column":54,"offset":2851},"end":{"line":68,"column":112,"offset":2909}}}],"position":{"start":{"line":68,"column":1,"offset":2798},"end":{"line":68,"column":112,"offset":2909}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Wasmer community Slack: ","position":{"start":{"line":70,"column":1,"offset":2911},"end":{"line":70,"column":25,"offset":2935}}},{"type":"element","tagName":"a","properties":{"href":"http://slack.wasmer.io"},"children":[{"type":"text","value":"http://slack.wasmer.io","position":{"start":{"line":70,"column":25,"offset":2935},"end":{"line":70,"column":47,"offset":2957}}}],"position":{"start":{"line":70,"column":25,"offset":2935},"end":{"line":70,"column":47,"offset":2957}}}],"position":{"start":{"line":70,"column":1,"offset":2911},"end":{"line":70,"column":47,"offset":2957}}},{"type":"text","value":"\n"},{"type":"raw","value":"<!-- END SHOWNOTES -->","position":{"start":{"line":72,"column":1,"offset":2959},"end":{"line":72,"column":23,"offset":2981}}},{"type":"text","value":"\n"},{"type":"raw","value":"<!-- START TRANSCRIPT -->","position":{"start":{"line":74,"column":1,"offset":2983},"end":{"line":74,"column":26,"offset":3008}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"This transcript was generated with the help of auto-transcription software and ","position":{"start":{"line":76,"column":2,"offset":3011},"end":{"line":76,"column":81,"offset":3090}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/sourcegraph/about/blob/main/podcast/12.md"},"children":[{"type":"text","value":"the source can be edited here","position":{"start":{"line":76,"column":82,"offset":3091},"end":{"line":76,"column":111,"offset":3120}}}],"position":{"start":{"line":76,"column":81,"offset":3090},"end":{"line":76,"column":174,"offset":3183}}},{"type":"text","value":".","position":{"start":{"line":76,"column":174,"offset":3183},"end":{"line":76,"column":175,"offset":3184}}}],"position":{"start":{"line":76,"column":1,"offset":3010},"end":{"line":76,"column":176,"offset":3185}}}],"position":{"start":{"line":76,"column":1,"offset":3010},"end":{"line":76,"column":176,"offset":3185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":78,"column":3,"offset":3189},"end":{"line":78,"column":10,"offset":3196}}}],"position":{"start":{"line":78,"column":1,"offset":3187},"end":{"line":78,"column":12,"offset":3198}}},{"type":"text","value":"\nAll right, I’m here with Syrus Akbary, founder and CEO of Wasmer, an open-source WebAssembly runtime and startup that lets you run WebAssembly compiled code outside the browser. Syrus, welcome.","position":{"start":{"line":78,"column":12,"offset":3198},"end":{"line":79,"column":194,"offset":3392}}}],"position":{"start":{"line":78,"column":1,"offset":3187},"end":{"line":79,"column":194,"offset":3392}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":81,"column":3,"offset":3396},"end":{"line":81,"column":9,"offset":3402}}}],"position":{"start":{"line":81,"column":1,"offset":3394},"end":{"line":81,"column":11,"offset":3404}}},{"type":"text","value":"\nThank you very much Beyang, I’m super happy to be here today.","position":{"start":{"line":81,"column":11,"offset":3404},"end":{"line":82,"column":62,"offset":3466}}}],"position":{"start":{"line":81,"column":1,"offset":3394},"end":{"line":82,"column":62,"offset":3466}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":84,"column":3,"offset":3470},"end":{"line":84,"column":10,"offset":3477}}}],"position":{"start":{"line":84,"column":1,"offset":3468},"end":{"line":84,"column":12,"offset":3479}}},{"type":"text","value":"\nAwesome. So, we have a lot of ground to cover today, and there’s so much I want to get to with respect to Wasmer and also WebAssembly in general. But, before we get into that, I always like to kick things off by asking people, how did they get into programming originally?","position":{"start":{"line":84,"column":12,"offset":3479},"end":{"line":85,"column":273,"offset":3752}}}],"position":{"start":{"line":84,"column":1,"offset":3468},"end":{"line":85,"column":273,"offset":3752}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":87,"column":3,"offset":3756},"end":{"line":87,"column":9,"offset":3762}}}],"position":{"start":{"line":87,"column":1,"offset":3754},"end":{"line":87,"column":11,"offset":3764}}},{"type":"text","value":"\nWell, so in my case it’s a little bit peculiar because I actually created a website when I was 14 years old, that was for watching TVs and listening radios online. At the beginning actually, I just started, I have a personal website, and I added a new section for watching TV and radio online. And then this section got super popular, so I created a special website for that. All this was pre YouTube, in 2006 or 2005. So, I created this new website, got super, super popular in the Spain, actually we got 300k visitors per month. I remember I put Google ads on their website and I was earning more money than my parents, when I was 14 or 15 years old. So, that was an interesting experience.","position":{"start":{"line":87,"column":11,"offset":3764},"end":{"line":88,"column":693,"offset":4457}}}],"position":{"start":{"line":87,"column":1,"offset":3754},"end":{"line":88,"column":693,"offset":4457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":90,"column":3,"offset":4461},"end":{"line":90,"column":10,"offset":4468}}}],"position":{"start":{"line":90,"column":1,"offset":4459},"end":{"line":90,"column":12,"offset":4470}}},{"type":"text","value":"\nThat’s awesome. And I take it from there you were just at the forefront of all the things that were happening on the web, and I guess that’s how you stumbled into the WebAssembly world?","position":{"start":{"line":90,"column":12,"offset":4470},"end":{"line":91,"column":186,"offset":4656}}}],"position":{"start":{"line":90,"column":1,"offset":4459},"end":{"line":91,"column":186,"offset":4656}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":93,"column":3,"offset":4660},"end":{"line":93,"column":9,"offset":4666}}}],"position":{"start":{"line":93,"column":1,"offset":4658},"end":{"line":93,"column":11,"offset":4668}}},{"type":"text","value":"\nWell, I will say, it was a little bit longer. So, actually I started doing front-end work, front-end or back-end, actually, at the beginning when I created the website, for me, there was no difference between back-end and front-end, everything was web. So, I did study mathematics, after that I went into a startup in Spain, then I jumped into Silicon Valley, and then from there basically fast forward, I created an open-source framework that become popular, it was in Python for using GraphQL. And then from there I sprung then into the WebAssembly world.","position":{"start":{"line":93,"column":11,"offset":4668},"end":{"line":94,"column":558,"offset":5226}}}],"position":{"start":{"line":93,"column":1,"offset":4658},"end":{"line":94,"column":558,"offset":5226}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":96,"column":3,"offset":5230},"end":{"line":96,"column":10,"offset":5237}}}],"position":{"start":{"line":96,"column":1,"offset":5228},"end":{"line":96,"column":12,"offset":5239}}},{"type":"text","value":"\nGot it. Awesome, and can you explain for people who might be a little bit unfamiliar with this world. What is WebAssembly and why does it matter?","position":{"start":{"line":96,"column":12,"offset":5239},"end":{"line":97,"column":146,"offset":5385}}}],"position":{"start":{"line":96,"column":1,"offset":5228},"end":{"line":97,"column":146,"offset":5385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":99,"column":3,"offset":5389},"end":{"line":99,"column":9,"offset":5395}}}],"position":{"start":{"line":99,"column":1,"offset":5387},"end":{"line":99,"column":11,"offset":5397}}},{"type":"text","value":"\nSo, WebAssembly, it’s a technology that was invented by the browser vendors in order to be able to execute code at super, super fastest speeds in the browser, but also in a way that was safe. Basically when you access a website, you want to make sure this website doesn’t have access to things that it should not have access to, you have more a sandbox environment rather than native programs. So, that’s what had gone into integrating WebAssembly.","position":{"start":{"line":99,"column":11,"offset":5397},"end":{"line":100,"column":449,"offset":5846}}}],"position":{"start":{"line":99,"column":1,"offset":5387},"end":{"line":100,"column":449,"offset":5846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":102,"column":3,"offset":5850},"end":{"line":102,"column":10,"offset":5857}}}],"position":{"start":{"line":102,"column":1,"offset":5848},"end":{"line":102,"column":12,"offset":5859}}},{"type":"text","value":"\nGot it. And unlike what came before it, you don’t have to write your code in JavaScript. You can, in theory, write your code in any programming language as long as it compiles down in a WebAssembly.","position":{"start":{"line":102,"column":12,"offset":5859},"end":{"line":103,"column":199,"offset":6058}}}],"position":{"start":{"line":102,"column":1,"offset":5848},"end":{"line":103,"column":199,"offset":6058}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":105,"column":3,"offset":6062},"end":{"line":105,"column":9,"offset":6068}}}],"position":{"start":{"line":105,"column":1,"offset":6060},"end":{"line":105,"column":11,"offset":6070}}},{"type":"text","value":"\nYes, so the history of WebAssembly, because everything has started with asm.gs which was created by Alon Zakai… And basically what he did was LLVM bit code converted from, basically LLVM bit code into JavaScript. It was simple because seemed to have super basic instructions. So, he created that subset of JavaScript that could be typed and could be basically interpreted by the JavaScript VMs in a much faster way than normal JavaScript. So, he’d written this, with that you were able to basically run almost any program that could be compiled with LLVM, so that means C or c++ program, so the beginning.","position":{"start":{"line":105,"column":11,"offset":6070},"end":{"line":106,"column":608,"offset":6678}}}],"position":{"start":{"line":105,"column":1,"offset":6060},"end":{"line":106,"column":608,"offset":6678}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":108,"column":3,"offset":6682},"end":{"line":108,"column":9,"offset":6688}}}],"position":{"start":{"line":108,"column":1,"offset":6680},"end":{"line":108,"column":11,"offset":6690}}},{"type":"text","value":"\nWhich that basically was a great proof of concept and you started getting games, I’m not sure if it was Doom or Quake or something like that just running on the browser, but super flashy, but then at the same time, Google was trying to push other technology called Native Client. And Native Client was a similar approach to the same problem, which was how we can make run any kind of program at a much faster way in a sandboxed way. So, they created the Knuckle subway to approach that, but it was super proprietary. That means they didn’t got agreement from other vendors, and the approach from asm.js, the advantage that they have against Knuckle. Knuckle is different for Native Client. The advantage that the asm.js had was, it basically could work even in browsers that didn’t explicitly support Knuckle, and the main reason for all this was because it was a subset of JavaScript. So, that means it could run asm.js, could run on Internet Explorer, or in Firefox.","position":{"start":{"line":108,"column":11,"offset":6690},"end":{"line":109,"column":969,"offset":7659}}}],"position":{"start":{"line":108,"column":1,"offset":6680},"end":{"line":109,"column":969,"offset":7659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":111,"column":3,"offset":7663},"end":{"line":111,"column":10,"offset":7670}}}],"position":{"start":{"line":111,"column":1,"offset":7661},"end":{"line":111,"column":12,"offset":7672}}},{"type":"text","value":"\nYeah, that makes sense. And both asm.js and Knuckle were both motivated by people just trying to get away from JavaScript, or writing code in other languages that would be more performant than they could ever make JavaScript runtimes. Is that right?","position":{"start":{"line":111,"column":12,"offset":7672},"end":{"line":112,"column":250,"offset":7922}}}],"position":{"start":{"line":111,"column":1,"offset":7661},"end":{"line":112,"column":250,"offset":7922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":114,"column":3,"offset":7926},"end":{"line":114,"column":9,"offset":7932}}}],"position":{"start":{"line":114,"column":1,"offset":7924},"end":{"line":114,"column":11,"offset":7934}}},{"type":"text","value":"\nYes, I will say, performance was a big part of that. Basically, it was not easy to run code at the super speeds with JavaScript. I mean, JavaScript VMs are great, but the ","position":{"start":{"line":114,"column":11,"offset":7934},"end":{"line":115,"column":172,"offset":8106}}},{"type":"text","value":"[inaudible 00:06:56]","position":{"start":{"line":115,"column":173,"offset":8107},"end":{"line":115,"column":191,"offset":8125}}},{"type":"text","value":" you have to run code basically to fulfill the standards of JavaScript, just it will mean that it always will have some overhead. So, in general, even with the best case scenario JavaScript will be two or three times slower than native code.","position":{"start":{"line":115,"column":192,"offset":8126},"end":{"line":115,"column":433,"offset":8367}}}],"position":{"start":{"line":114,"column":1,"offset":7924},"end":{"line":115,"column":433,"offset":8367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":117,"column":3,"offset":8371},"end":{"line":117,"column":10,"offset":8378}}}],"position":{"start":{"line":117,"column":1,"offset":8369},"end":{"line":117,"column":12,"offset":8380}}},{"type":"text","value":"\nWould you say WebAssembly took more inspiration from the asen.js world or from the Knuckle world, or is it kind of a pretty balanced synthesis of those two predecessors?","position":{"start":{"line":117,"column":12,"offset":8380},"end":{"line":118,"column":170,"offset":8550}}}],"position":{"start":{"line":117,"column":1,"offset":8369},"end":{"line":118,"column":170,"offset":8550}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":120,"column":3,"offset":8554},"end":{"line":120,"column":9,"offset":8560}}}],"position":{"start":{"line":120,"column":1,"offset":8552},"end":{"line":120,"column":11,"offset":8562}}},{"type":"text","value":"\nI think it was from both, honestly. I think they, basically, people from the Firefox team because Alon Zakai was recruited by Firefox. At the beginning he was working on asm.js, I think, also as part of the Mozilla in Mozilla, And I think they just got all together saying, “Okay, Knuckle is not good enough because.” Because Knuckle under the hood was actually, I think, using the LLVM bit code. So, Knuckle was not portable enough, asm.js was still JavaScript, so it’s like you have to do a special tricks to optimize it. I think they just went all together and decided to create something that basically all the browser’s could understand. And actually, funny enough, they created that WebAssembly to JavaScript converter, so basically it will still work with all browsers, even on the ones that they don’t regularly support WebAssembly.","position":{"start":{"line":120,"column":11,"offset":8562},"end":{"line":121,"column":841,"offset":9403}}}],"position":{"start":{"line":120,"column":1,"offset":8552},"end":{"line":121,"column":841,"offset":9403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":123,"column":3,"offset":9407},"end":{"line":123,"column":10,"offset":9414}}}],"position":{"start":{"line":123,"column":1,"offset":9405},"end":{"line":123,"column":12,"offset":9416}}},{"type":"text","value":"\nGot it. That’s cool. So, I guess fast forward to day, I think almost every major browser has a WebAssembly environment, and you also have Wasmer which is this WebAssembly environment that runs outside of the browser. Can you tell us a little bit about Wasmer and what’s the quick elevator pitch for why people should hear about it?","position":{"start":{"line":123,"column":12,"offset":9416},"end":{"line":124,"column":332,"offset":9748}}}],"position":{"start":{"line":123,"column":1,"offset":9405},"end":{"line":124,"column":332,"offset":9748}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":126,"column":3,"offset":9752},"end":{"line":126,"column":9,"offset":9758}}}],"position":{"start":{"line":126,"column":1,"offset":9750},"end":{"line":126,"column":11,"offset":9760}}},{"type":"text","value":"\nSo, just first, to understand what we want at Wasmer. I think is good to do very simple analogy, which is, if you remember what no GS did bringing JavaScript to the server-side, we are doing something similar. Taking the WebAssembly technology that was created on the browsers, we are moving it server-side. And the main question is, why you are doing that actually, why people would want to execute WebAssembly server-side? And the main reason for that is, that with WebAssembly you have a universal binary format that almost any chipset or platform could understand.","position":{"start":{"line":126,"column":11,"offset":9760},"end":{"line":127,"column":569,"offset":10329}}}],"position":{"start":{"line":126,"column":1,"offset":9750},"end":{"line":127,"column":569,"offset":10329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":129,"column":3,"offset":10333},"end":{"line":129,"column":9,"offset":10339}}}],"position":{"start":{"line":129,"column":1,"offset":10331},"end":{"line":129,"column":11,"offset":10341}}},{"type":"text","value":"\nSo, that means is fully portable, but at the same time is super sandboxed. So, the fact that this is sandboxed and also is super fast and it’s universal, it makes it actually ideal just to run software in general. So, that’s one of the realizations that I had. And basically why I started Wasmer was, because when I tried to use WebAssembly server-side, I realized that he was actually very, very hard. And the Go system was ","position":{"start":{"line":129,"column":11,"offset":10341},"end":{"line":130,"column":426,"offset":10767}}},{"type":"text","value":"[inaudible 00:09:56]","position":{"start":{"line":130,"column":427,"offset":10768},"end":{"line":130,"column":445,"offset":10786}}},{"type":"text","value":" to run WebAssembly server-side. So, as someone with that very hardcore developer mindset, I thought actually we could improve that experience and make it much easier for developers, and for companies to startup in WebAssembly server-side, to run software.","position":{"start":{"line":130,"column":446,"offset":10787},"end":{"line":130,"column":702,"offset":11043}}}],"position":{"start":{"line":129,"column":1,"offset":10331},"end":{"line":130,"column":702,"offset":11043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":132,"column":3,"offset":11047},"end":{"line":132,"column":10,"offset":11054}}}],"position":{"start":{"line":132,"column":1,"offset":11045},"end":{"line":132,"column":12,"offset":11056}}},{"type":"text","value":"\nCool. What languages are compiled down into WebAssembly at the moment?","position":{"start":{"line":132,"column":12,"offset":11056},"end":{"line":133,"column":71,"offset":11127}}}],"position":{"start":{"line":132,"column":1,"offset":11045},"end":{"line":133,"column":71,"offset":11127}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":135,"column":3,"offset":11131},"end":{"line":135,"column":9,"offset":11137}}}],"position":{"start":{"line":135,"column":1,"offset":11129},"end":{"line":135,"column":11,"offset":11139}}},{"type":"text","value":"\nSo, at the moment there is C and c++, of course. We have Rust as well, apart of Rust we have Go. We have other languages that are also likely to compile down to WebAssembly, in general, any language that under the hood, basically, is compiled and is using LLVM under the hood, could be compiling to WebAssembly. But, then there are other projects that are actually made impossible to, for example, convert a Java bytecode, or basically there is a real incentive for languages to be able to target the browser. Why? Because it expands their market.","position":{"start":{"line":135,"column":11,"offset":11139},"end":{"line":136,"column":548,"offset":11687}}}],"position":{"start":{"line":135,"column":1,"offset":11129},"end":{"line":136,"column":548,"offset":11687}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":138,"column":3,"offset":11691},"end":{"line":138,"column":9,"offset":11697}}}],"position":{"start":{"line":138,"column":1,"offset":11689},"end":{"line":138,"column":11,"offset":11699}}},{"type":"text","value":"\nSo, that means almost any other language right now is trying to compile down to WebAssembly, because it just like a sponsor market and make sure that the language prospers on the long term. So, on one side we have Java bytecode that could be compiled to WebAssembly with JVM, we have also a Python interpreter, because Python is still like interpreters so you have to compile the interpreter itself to WebAssembly, and then you can run it, which is actually already possible. I would say almost any other language from ","position":{"start":{"line":138,"column":11,"offset":11699},"end":{"line":139,"column":520,"offset":12219}}},{"type":"text","value":"[inaudible 00:11:34]","position":{"start":{"line":139,"column":521,"offset":12220},"end":{"line":139,"column":539,"offset":12238}}},{"type":"text","value":" that you can imagine, it could be compiled down to WebAssembly, either in that full compile form or in the interpreted way.","position":{"start":{"line":139,"column":540,"offset":12239},"end":{"line":139,"column":664,"offset":12363}}}],"position":{"start":{"line":138,"column":1,"offset":11689},"end":{"line":139,"column":664,"offset":12363}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":141,"column":3,"offset":12367},"end":{"line":141,"column":10,"offset":12374}}}],"position":{"start":{"line":141,"column":1,"offset":12365},"end":{"line":141,"column":12,"offset":12376}}},{"type":"text","value":"\nSo, the WebAssembly dream is this Holy Grail that people have been after for a while now, which is, “I could write code in any language and I should be able to run it anywhere, whether that’s in the browser or on the server, or on my desktop machine running any operating system.” The dream is, write it in any language and then run it everywhere, is that right?","position":{"start":{"line":141,"column":12,"offset":12376},"end":{"line":142,"column":363,"offset":12739}}}],"position":{"start":{"line":141,"column":1,"offset":12365},"end":{"line":142,"column":363,"offset":12739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":144,"column":3,"offset":12743},"end":{"line":144,"column":9,"offset":12749}}}],"position":{"start":{"line":144,"column":1,"offset":12741},"end":{"line":144,"column":11,"offset":12751}}},{"type":"text","value":"\nYes, that’s the ideal scenario. Basically, I think we have been working a lot on trying to run software in different platforms, we realize that it’s actually quite hard. We realize that it’s quite hard to integrate programs that are made in Rust, integrate them in our Python programs, or programs that are in made in C, how we can integrate these into our JavaScript programs. Or, for example, we create a program that will work in our Mac machine, but the same binary will not work in Windows, or this same binary will not work in Linux.","position":{"start":{"line":144,"column":11,"offset":12751},"end":{"line":145,"column":540,"offset":13291}}}],"position":{"start":{"line":144,"column":1,"offset":12741},"end":{"line":145,"column":540,"offset":13291}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":147,"column":3,"offset":13295},"end":{"line":147,"column":9,"offset":13301}}}],"position":{"start":{"line":147,"column":1,"offset":13293},"end":{"line":147,"column":11,"offset":13303}}},{"type":"text","value":"\nSo, we assume a lot of issues that we have when running software, that should not exist. And WebAssembly basically remove all these barriers, and what it allows us is to just make sure that one binary could actually be executed in any platform, or basically in any ecosystem very easily. So, it’s, if you realize it’s actually quite close to what the promise of the Java virtual machine will be, with a main difference that is it’s, I will say, the bytecode format is much better designed, because it have a lot of lessons learned. Also, you have industry… Basically all the industry wants to push for that, and it’s an open specification is not proprietary. So, I think this is actually what is pushing WebAssembly even farther.","position":{"start":{"line":147,"column":11,"offset":13303},"end":{"line":148,"column":732,"offset":14035}}}],"position":{"start":{"line":147,"column":1,"offset":13293},"end":{"line":148,"column":732,"offset":14035}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":150,"column":3,"offset":14039},"end":{"line":150,"column":10,"offset":14046}}}],"position":{"start":{"line":150,"column":1,"offset":14037},"end":{"line":150,"column":12,"offset":14048}}},{"type":"text","value":"\nCool, and I want to rewind a bit to earlier when you were talking about your motivations for creating Wasmer. So, you mentioned that you created Wasmer out of these pain points that you experienced working on your previous startup Graphene. And can you talk about what the WebAssembly ecosystem was back then and what was the gap that you saw that Wasmer is trying to fill?","position":{"start":{"line":150,"column":12,"offset":14048},"end":{"line":151,"column":374,"offset":14422}}}],"position":{"start":{"line":150,"column":1,"offset":14037},"end":{"line":151,"column":374,"offset":14422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":153,"column":3,"offset":14426},"end":{"line":153,"column":9,"offset":14432}}}],"position":{"start":{"line":153,"column":1,"offset":14424},"end":{"line":153,"column":11,"offset":14434}}},{"type":"text","value":"\nYes, some background, around four, five years ago I created this GraphQL framework for using GraphQL in Python, called Graphene. And this framework become super, super popular. When I created the company about Graphene I was actually competing against other startups that have funding, where actually Graphene we didn’t raise any money. I had no idea how to raise money, that’s been a nice learning, but I had no idea how to raise money so we didn’t have money on the bank, and I was trying to see how I can expand the Graphene ecosystem.","position":{"start":{"line":153,"column":11,"offset":14434},"end":{"line":154,"column":539,"offset":14973}}}],"position":{"start":{"line":153,"column":1,"offset":14424},"end":{"line":154,"column":539,"offset":14973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":156,"column":3,"offset":14977},"end":{"line":156,"column":9,"offset":14983}}}],"position":{"start":{"line":156,"column":1,"offset":14975},"end":{"line":156,"column":11,"offset":14985}}},{"type":"text","value":"\nAnd I realized that if we actually target WebAssembly, we could get Graphene actually used in a lot of different languages. Why is that? The graphical is spaces is very special, and this is special because there is a reference implementation which is made in JavaScript, and all the other implementations that you see in Python, in Ruby, in rust, basically in Go. They are all porting by hand the JavaScript reference implementation to the different languages, and a night on this and it’s been super time consuming. And I realized why we need to do that, why I have a program and they need to translate it from JavaScript into Python, this it this is suboptimal.","position":{"start":{"line":156,"column":11,"offset":14985},"end":{"line":157,"column":664,"offset":15649}}}],"position":{"start":{"line":156,"column":1,"offset":14975},"end":{"line":157,"column":664,"offset":15649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":159,"column":3,"offset":15653},"end":{"line":159,"column":9,"offset":15659}}}],"position":{"start":{"line":159,"column":1,"offset":15651},"end":{"line":159,"column":11,"offset":15661}}},{"type":"text","value":"\nSo, ideally what I realized we could have is actually one universal Engine that could run everywhere. Could run in Python, could run in Go, could run in Rust, could run in Java, and that means you don’t need to recreate a lot of the integration issues, or the integration things with a certain program language that you have, basically you can assure that will be given by the universal library. So, that’s what it pushed me to start researching, at least, into the WebAssembly world.","position":{"start":{"line":159,"column":11,"offset":15661},"end":{"line":160,"column":485,"offset":16146}}}],"position":{"start":{"line":159,"column":1,"offset":15651},"end":{"line":160,"column":485,"offset":16146}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":162,"column":3,"offset":16150},"end":{"line":162,"column":10,"offset":16157}}}],"position":{"start":{"line":162,"column":1,"offset":16148},"end":{"line":162,"column":12,"offset":16159}}},{"type":"text","value":"\nGot it, that makes sense.","position":{"start":{"line":162,"column":12,"offset":16159},"end":{"line":163,"column":26,"offset":16185}}}],"position":{"start":{"line":162,"column":1,"offset":16148},"end":{"line":163,"column":26,"offset":16185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":165,"column":3,"offset":16189},"end":{"line":165,"column":9,"offset":16195}}}],"position":{"start":{"line":165,"column":1,"offset":16187},"end":{"line":165,"column":11,"offset":16197}}},{"type":"text","value":"\nAnd that’s why what got me into WebAssembly. But then, the more I dig into WebAssembly the more I realize that it could be useful, not only for using universal libraries that could be using a lot of different programming languages at the same time, but also for cloud computing and edge computing, and IoT.","position":{"start":{"line":165,"column":11,"offset":16197},"end":{"line":166,"column":307,"offset":16504}}}],"position":{"start":{"line":165,"column":1,"offset":16187},"end":{"line":166,"column":307,"offset":16504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":168,"column":3,"offset":16508},"end":{"line":168,"column":10,"offset":16515}}}],"position":{"start":{"line":168,"column":1,"offset":16506},"end":{"line":168,"column":12,"offset":16517}}},{"type":"text","value":"\nGot it. And were there existing WASM runtimes, back then, that ran outside the browser or was Wasmer the first?","position":{"start":{"line":168,"column":12,"offset":16517},"end":{"line":169,"column":112,"offset":16629}}}],"position":{"start":{"line":168,"column":1,"offset":16506},"end":{"line":169,"column":112,"offset":16629}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":171,"column":3,"offset":16633},"end":{"line":171,"column":9,"offset":16639}}}],"position":{"start":{"line":171,"column":1,"offset":16631},"end":{"line":171,"column":11,"offset":16641}}},{"type":"text","value":"\nNo, there were others, there was WAVM. WAVM was one of the first WebAssembly virtual machines that existed. And, actually, I collaborated a lot into WAVM before starting Wasmer, I mean, when I say a lot it’s just like three or four pull requests, so not really that much more. It was made in C, and I’m not super familiar with C, but actually it was not easy for me to collaborate into, although actually ","position":{"start":{"line":171,"column":11,"offset":16641},"end":{"line":172,"column":406,"offset":17047}}},{"type":"text","value":"[inaudible 00:16:56]","position":{"start":{"line":172,"column":407,"offset":17048},"end":{"line":172,"column":425,"offset":17066}}},{"type":"text","value":" was great, he was awesome. But, I realized WAVM was also taking a lot of time to compile an idea like that, and then I collaborate in to what the runtime called Wasmjit, which right now doesn’t exist.","position":{"start":{"line":172,"column":426,"offset":17067},"end":{"line":172,"column":627,"offset":17268}}}],"position":{"start":{"line":171,"column":1,"offset":16631},"end":{"line":172,"column":627,"offset":17268}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":174,"column":3,"offset":17272},"end":{"line":174,"column":9,"offset":17278}}}],"position":{"start":{"line":174,"column":1,"offset":17270},"end":{"line":174,"column":11,"offset":17280}}},{"type":"text","value":"\nThis one was actually creating by hand all the assembly code, that was where it was corresponding to certain WebAssembly operation, and I realized that path was actually very suboptimal, it was very, very, very hard to maintain. So, with these two approaches I realized that there was… Basically, the system solutions that were standalone were not easy to run WebAssembly server-side, were not ideal for me as a developer to use it. And then I started sneaking into the Vms that the browsers use, because all their browsers have the WebAssembly VM that is tightly integrated into their JavaScript VM.","position":{"start":{"line":174,"column":11,"offset":17280},"end":{"line":175,"column":603,"offset":17883}}}],"position":{"start":{"line":174,"column":1,"offset":17270},"end":{"line":175,"column":603,"offset":17883}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":177,"column":3,"offset":17887},"end":{"line":177,"column":9,"offset":17893}}}],"position":{"start":{"line":177,"column":1,"offset":17885},"end":{"line":177,"column":11,"offset":17895}}},{"type":"text","value":"\nSo, that was great, that was very insightful, but I realize that running a WebAssembly VM within their source code without JavaScript was actually quite, quite challenging. So, that’s when I realized that actually we need that engine that it’s decoupled from the JavaScript engine. And, again, browsers do optimizations that are in general useful to remove the boundaries between JavaScript, or to increase the performance when you cross boundaries between JavaScript and WebAssembly. But, in the case of there is no JavaScript, actually, the kind of phrases that you want to make are a little bit different, so that’s when I decided that we needed a proper runtime to run WebAssembly server-side.","position":{"start":{"line":177,"column":11,"offset":17895},"end":{"line":178,"column":698,"offset":18593}}}],"position":{"start":{"line":177,"column":1,"offset":17885},"end":{"line":178,"column":698,"offset":18593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":180,"column":3,"offset":18597},"end":{"line":180,"column":10,"offset":18604}}}],"position":{"start":{"line":180,"column":1,"offset":18595},"end":{"line":180,"column":12,"offset":18606}}},{"type":"text","value":"\nGot it. So, you tried some of the existing WebAssembly runtimes on the server-side, you had various difficulties, some difficulty collaborating in existing code-based, you checked out the in- browser runtimes and it was hard to just rip those out, so that motivated the formation of Wasmer?","position":{"start":{"line":180,"column":12,"offset":18606},"end":{"line":181,"column":291,"offset":18897}}}],"position":{"start":{"line":180,"column":1,"offset":18595},"end":{"line":181,"column":291,"offset":18897}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":183,"column":3,"offset":18901},"end":{"line":183,"column":9,"offset":18907}}}],"position":{"start":{"line":183,"column":1,"offset":18899},"end":{"line":183,"column":11,"offset":18909}}},{"type":"text","value":"\nYeah, and at the same time he was funny, because at the same time I saw an article from CloudFlare where they were basically talking about CloudFlare workers and isolates, and they were mentioning how fast the startup times, basically how fast they were compared to normal Containers. And at that moment, basically, my mind did click and it was like, “Okay, this is going to be big, this for run software in general and the ecosystem is still very early. So, there is a big opportunity to actually provide something to help developers and to help companies ","position":{"start":{"line":183,"column":11,"offset":18909},"end":{"line":184,"column":558,"offset":19467}}},{"type":"text","value":"[inaudible 00:19:38]","position":{"start":{"line":184,"column":559,"offset":19468},"end":{"line":184,"column":577,"offset":19486}}},{"type":"text","value":" WebAssembly server-side.","position":{"start":{"line":184,"column":578,"offset":19487},"end":{"line":184,"column":603,"offset":19512}}}],"position":{"start":{"line":183,"column":1,"offset":18899},"end":{"line":184,"column":603,"offset":19512}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":186,"column":3,"offset":19516},"end":{"line":186,"column":10,"offset":19523}}}],"position":{"start":{"line":186,"column":1,"offset":19514},"end":{"line":186,"column":12,"offset":19525}}},{"type":"text","value":"\nYeah, that makes sense. Yeah, I’ve heard a lot about CloudFlare investing in WebAssembly as a runtime to run serverless workloads. Are they building their own runtime or are they using Wasmer, or how they go about doing that?","position":{"start":{"line":186,"column":12,"offset":19525},"end":{"line":187,"column":226,"offset":19751}}}],"position":{"start":{"line":186,"column":1,"offset":19514},"end":{"line":187,"column":226,"offset":19751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":189,"column":3,"offset":19755},"end":{"line":189,"column":9,"offset":19761}}}],"position":{"start":{"line":189,"column":1,"offset":19753},"end":{"line":189,"column":11,"offset":19763}}},{"type":"text","value":"\nIn the case of CloudFlare they are using V8, because actually their CloudFlare workers offering is highly tied to JavaScript. So, you can actually do JavaScript on their VM, so for that reason they are actually using V8. There are some issues when running, actually, WebAssembly on V8, which is, when you want to speed up compilation time and when you want to cache it, and so on, there’s this deserialization time, which is the operation that you do to skip compilation and just basically getting it from cache. The deserialization time is much lower than if you actually have native images. So, in general, V8 have trade offs that are, I will say, not as good for running WebAssembly server-side. Although, it’s actually it’s a super great WebAssembly runtime.","position":{"start":{"line":189,"column":11,"offset":19763},"end":{"line":190,"column":763,"offset":20526}}}],"position":{"start":{"line":189,"column":1,"offset":19753},"end":{"line":190,"column":763,"offset":20526}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":192,"column":3,"offset":20530},"end":{"line":192,"column":10,"offset":20537}}}],"position":{"start":{"line":192,"column":1,"offset":20528},"end":{"line":192,"column":12,"offset":20539}}},{"type":"text","value":"\nGot it. And are other cloud computing companies also investing in this or is CloudFlare the only one?","position":{"start":{"line":192,"column":12,"offset":20539},"end":{"line":193,"column":102,"offset":20641}}}],"position":{"start":{"line":192,"column":1,"offset":20528},"end":{"line":193,"column":102,"offset":20641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":195,"column":3,"offset":20645},"end":{"line":195,"column":9,"offset":20651}}}],"position":{"start":{"line":195,"column":1,"offset":20643},"end":{"line":195,"column":11,"offset":20653}}},{"type":"text","value":"\nSo, CloudFlare, I’m not sure if it was the first one, or on the CDN space, or if it was Fastly. So, Fastly also has been down researching on the WebAssembly, on the server-side world for some years, and they actually like open-source Lucet about which is our WebAssembly runtime. The open-source is about four months or five months after we open-source or we created Wasmer, and the main reason for that was because Wasmer was actually given all the attention, and they were working on this WebAssembly VM for years. And they were like, “Fuck, there is some strange person or company now creating the runtime, and as we have everything, basically we are getting none of the community gains from that.” So, the open-source Lucet, and I think Lucet did a lot of good decisions on the way of running WebAssembly server-side. And actually, funnily enough, for Wasmer 1.0, we are getting back a lot of the learnings of the Lucet fast. But, Lucet is also a great runtime created by great people.","position":{"start":{"line":195,"column":11,"offset":20653},"end":{"line":196,"column":990,"offset":21643}}}],"position":{"start":{"line":195,"column":1,"offset":20643},"end":{"line":196,"column":990,"offset":21643}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":198,"column":3,"offset":21647},"end":{"line":198,"column":10,"offset":21654}}}],"position":{"start":{"line":198,"column":1,"offset":21645},"end":{"line":198,"column":12,"offset":21656}}},{"type":"text","value":"\nYeah, That’s great. It sounds you force their hand a little bit, and in encouraged them indirectly to release their technologies open-source as well.","position":{"start":{"line":198,"column":12,"offset":21656},"end":{"line":199,"column":150,"offset":21806}}}],"position":{"start":{"line":198,"column":1,"offset":21645},"end":{"line":199,"column":150,"offset":21806}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":201,"column":3,"offset":21810},"end":{"line":201,"column":9,"offset":21816}}}],"position":{"start":{"line":201,"column":1,"offset":21808},"end":{"line":201,"column":11,"offset":21818}}},{"type":"text","value":"\nYeah, it’s funny, we go like this… The Politics of open-source are a little bit weird, and that means sometimes when you’re on the open-sources space and you have like, let’s say, competing products. You always have to fight to win that battle against basically who’s going to get the users. But in general, I will say, the ones that benefit most from this are actually the users, because when there is more ways of running WebAssembly server-side, basically they have more choices, and with more choices they can choose whatever is best for them. And that means the ecosystem just evolves at a faster pace. So, I think it was a very good moment for a move from the Fastly team to open-source it.","position":{"start":{"line":201,"column":11,"offset":21818},"end":{"line":202,"column":699,"offset":22517}}}],"position":{"start":{"line":201,"column":1,"offset":21808},"end":{"line":202,"column":699,"offset":22517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":204,"column":3,"offset":22521},"end":{"line":204,"column":10,"offset":22528}}}],"position":{"start":{"line":204,"column":1,"offset":22519},"end":{"line":204,"column":12,"offset":22530}}},{"type":"text","value":"\nYeah, I read a lot of internet comment threads where people talk about the WASM wars or things like that, it sounds like things are really heating up in the space, so it was pretty exciting.","position":{"start":{"line":204,"column":12,"offset":22530},"end":{"line":205,"column":191,"offset":22721}}}],"position":{"start":{"line":204,"column":1,"offset":22519},"end":{"line":205,"column":191,"offset":22721}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":207,"column":3,"offset":22725},"end":{"line":207,"column":9,"offset":22731}}}],"position":{"start":{"line":207,"column":1,"offset":22723},"end":{"line":207,"column":11,"offset":22733}}},{"type":"text","value":"\nYeah, it’s funny, because the WASM wars have been real. I wouldn’t have never imagined that, I felt the wars we’re going to be in some other space. And the other thing is, at the end, it’s less about wars and more about what we can provide for the users, in our case, we are 300% focus on how we can improve the experience of users using WebAssembly server-side. And in the case of Lucet, actually, I will say their main goal is being able to supercharge their CDN. So, that means the available experience might not be as polished because their focus is somewhere else, which is fine. Basically, there are different trade offs in each of these approaches.","position":{"start":{"line":207,"column":11,"offset":22733},"end":{"line":208,"column":656,"offset":23389}}}],"position":{"start":{"line":207,"column":1,"offset":22723},"end":{"line":208,"column":656,"offset":23389}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":210,"column":3,"offset":23393},"end":{"line":210,"column":10,"offset":23400}}}],"position":{"start":{"line":210,"column":1,"offset":23391},"end":{"line":210,"column":12,"offset":23402}}},{"type":"text","value":"\nTotally. It seems to me, from what I’ve observed, that Wasmer from the get go has really made developer experience and community building a priority for the company, and also the open-source project. Can you talk a little bit about those efforts around building the community and what the community looks like today?","position":{"start":{"line":210,"column":12,"offset":23402},"end":{"line":211,"column":317,"offset":23719}}}],"position":{"start":{"line":210,"column":1,"offset":23391},"end":{"line":211,"column":317,"offset":23719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":213,"column":3,"offset":23723},"end":{"line":213,"column":9,"offset":23729}}}],"position":{"start":{"line":213,"column":1,"offset":23721},"end":{"line":213,"column":11,"offset":23731}}},{"type":"text","value":"\nSo, when I started Wasmer I realized that this ecosystem or this market was going to get field by a lot of different big companies, that wanted to basically be part of the space. And when you are an underdog that’s quite challenging, it’s like how we as a company, we are going to be able to survive when Google tries to do something on this space, or how we are going to be able to survive when a billion dollar company like Fastly does something in this space, how we are going to be able to get users? And at the end I realized community was a very big part of that. So, if you build more or if you focus more on that, then it’s going to be easier for you to have a good spot on the long term.","position":{"start":{"line":213,"column":11,"offset":23731},"end":{"line":214,"column":697,"offset":24428}}}],"position":{"start":{"line":213,"column":1,"offset":23721},"end":{"line":214,"column":697,"offset":24428}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":216,"column":3,"offset":24432},"end":{"line":216,"column":10,"offset":24439}}}],"position":{"start":{"line":216,"column":1,"offset":24430},"end":{"line":216,"column":12,"offset":24441}}},{"type":"text","value":"\nYeah, I think one of the efforts that might be related to this, I’m not sure maybe you can clarify, but the fact that WAPM, or W-A-P-M, the WASM package manager, that’s another project that came out of Wasmer, right?","position":{"start":{"line":216,"column":12,"offset":24441},"end":{"line":217,"column":217,"offset":24658}}}],"position":{"start":{"line":216,"column":1,"offset":24430},"end":{"line":217,"column":217,"offset":24658}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":219,"column":3,"offset":24662},"end":{"line":219,"column":9,"offset":24668}}}],"position":{"start":{"line":219,"column":1,"offset":24660},"end":{"line":219,"column":11,"offset":24670}}},{"type":"text","value":"\nYes, funny story. I actually created, or built WAPM one year before I created Wasmer. And the main reason for that is, I felt WebAssembly was going to become big, and they were like, “Okay, there is no package manager.” The package manager is quite important actually to be able to distribute software. So, there was no package manager, I created the logo first of WAPM, and actually if you analyze or if you compare the logo of WAPM and Wasmer. Wasmer is lyses of the WAPM box, and this is super intentional. But, the main reason for that is because actually I created the WAPM logo first, but WAPM is this package manager for distributing software created for WebAssembly.","position":{"start":{"line":219,"column":11,"offset":24670},"end":{"line":220,"column":675,"offset":25345}}}],"position":{"start":{"line":219,"column":1,"offset":24660},"end":{"line":220,"column":675,"offset":25345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":222,"column":3,"offset":25349},"end":{"line":222,"column":9,"offset":25355}}}],"position":{"start":{"line":222,"column":1,"offset":25347},"end":{"line":222,"column":11,"offset":25357}}},{"type":"text","value":"\nBasically it’s a package manager, it is fully designed for the WebAssembly ecosystem, because sometimes I get the question of, “Okay, why people will use WAPM and will not use NPM?” And the main reason, I will tell them, is when you ask basically Python developers if for running Python programs actually they have to install NPM, almost all of them will reject that idea, and the same for Go. But, when you have actually a package manager that is not trying to push you towards any ecosystem, because WebAssembly’s all the ecosystems, it’s all the languages at the same time.","position":{"start":{"line":222,"column":11,"offset":25357},"end":{"line":223,"column":577,"offset":25934}}}],"position":{"start":{"line":222,"column":1,"offset":25347},"end":{"line":223,"column":577,"offset":25934}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":225,"column":3,"offset":25938},"end":{"line":225,"column":9,"offset":25944}}}],"position":{"start":{"line":225,"column":1,"offset":25936},"end":{"line":225,"column":11,"offset":25946}}},{"type":"text","value":"\nSo we don’t want that table Python, or Rust, or Go, over C. We don’t want to do that. Basically, we just want to be one very easy way to distribute this server that can be used across different languages. So, that means we are not biased against JavaScript, and that means all of the developers will… When they try to, or when they want to use these universal software, they know that we are not trying to push JavaScript in their Python environments, for example. So, it’s a much proper way or a much easier way to get them basically using the ecosystem.","position":{"start":{"line":225,"column":11,"offset":25946},"end":{"line":226,"column":558,"offset":26504}}}],"position":{"start":{"line":225,"column":1,"offset":25936},"end":{"line":226,"column":558,"offset":26504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":228,"column":3,"offset":26508},"end":{"line":228,"column":10,"offset":26515}}}],"position":{"start":{"line":228,"column":1,"offset":26506},"end":{"line":228,"column":12,"offset":26517}}},{"type":"text","value":"\nYeah. Can you talk more about the developer experience of using a package, a WAPM package that’s written in a different language? Because, for me, most of the package managers I’ve used have been tied to one particular source language, so I’m coding in Go, I want to take a dependency on something, it has to be a library written in Go. And that library doesn’t exist yet, I have the port something else written in another language to Go, which is always super annoying. What does it look if I’m writing Python and I want to use some other library that might be written in Rust?","position":{"start":{"line":228,"column":12,"offset":26517},"end":{"line":229,"column":579,"offset":27096}}}],"position":{"start":{"line":228,"column":1,"offset":26506},"end":{"line":229,"column":579,"offset":27096}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":231,"column":3,"offset":27100},"end":{"line":231,"column":9,"offset":27106}}}],"position":{"start":{"line":231,"column":1,"offset":27098},"end":{"line":231,"column":11,"offset":27108}}},{"type":"text","value":"\nSo, right now there is a standard interface for running WebAssembly, this is called WASI. And this interface is similar to POSIX, which means ","position":{"start":{"line":231,"column":11,"offset":27108},"end":{"line":232,"column":143,"offset":27251}}},{"type":"text","value":"[inaudible 00:28:22]","position":{"start":{"line":232,"column":144,"offset":27252},"end":{"line":232,"column":162,"offset":27270}}},{"type":"text","value":" to able to open files within a sandbox environment, but open files and re-directories and things like that. So, that means if you have a Rust program right now, and you want to use this Rust program from Python. It could be a CC as basically compiling your Rust program into WebAssembly with the WASI target, and then once the program is compiled you just execute it directly on the Wasmer Python runtime.","position":{"start":{"line":232,"column":163,"offset":27271},"end":{"line":232,"column":569,"offset":27677}}}],"position":{"start":{"line":231,"column":1,"offset":27098},"end":{"line":232,"column":569,"offset":27677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":234,"column":3,"offset":27681},"end":{"line":234,"column":9,"offset":27687}}}],"position":{"start":{"line":234,"column":1,"offset":27679},"end":{"line":234,"column":11,"offset":27689}}},{"type":"text","value":"\nAnd the cool thing about that is Wasmer, even though it’s actually made in Rust, we have integrations with a lot of different languages. Basically it allows you to use a WebAssembly VM, not only in Rust or not only in JavaScript, but also in Python or in Go, or in Swift, or in Java, or in C#, or basically wherever you want to use it. So, that means, first you compile your WebAssembly or your program into WebAssembly, you have a micro Container, let’s say like my program, WASM, and then from Python you just execute it. And, right now, we are working on making super, super easy this intercommunication between the Python program and the Rust program, but there is some work going on that is not valid yet, like the interface types.","position":{"start":{"line":234,"column":11,"offset":27689},"end":{"line":235,"column":737,"offset":28426}}}],"position":{"start":{"line":234,"column":1,"offset":27679},"end":{"line":235,"column":737,"offset":28426}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":237,"column":3,"offset":28430},"end":{"line":237,"column":10,"offset":28437}}}],"position":{"start":{"line":237,"column":1,"offset":28428},"end":{"line":237,"column":12,"offset":28439}}},{"type":"text","value":"\nGot it. So, in the end state it would be something like, you have this mini executable that gets distributed and probably some lightweight wrapper in each source language that wraps that mini executable, so that if I’m using Python I can still Pip install that wrapper package and then import it in my Python code, just like any other Python package. Is that the experience that you’re going for?","position":{"start":{"line":237,"column":12,"offset":28439},"end":{"line":238,"column":397,"offset":28836}}}],"position":{"start":{"line":237,"column":1,"offset":28428},"end":{"line":238,"column":397,"offset":28836}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":240,"column":3,"offset":28840},"end":{"line":240,"column":9,"offset":28846}}}],"position":{"start":{"line":240,"column":1,"offset":28838},"end":{"line":240,"column":11,"offset":28848}}},{"type":"text","value":"\nIdeally, that will be the end ideal experience. So, that means, “let’s go back to our the original use case that I imagined for Wasmer,” which was these universal GraphQL library. So, these universal GraphQL library could be made in any language that actually can be compiled directly into WebAssembly, which could be Go, could be Rust, could be C or c++. So, we first compiled this GraphQL library into WebAssembly, and then we basically create the bindings or create a internet layer that let us create the bindings for all the different language integrations, basically at One Click.","position":{"start":{"line":240,"column":11,"offset":28848},"end":{"line":241,"column":587,"offset":29435}}}],"position":{"start":{"line":240,"column":1,"offset":28838},"end":{"line":241,"column":587,"offset":29435}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":243,"column":3,"offset":29439},"end":{"line":243,"column":9,"offset":29445}}}],"position":{"start":{"line":243,"column":1,"offset":29437},"end":{"line":243,"column":11,"offset":29447}}},{"type":"text","value":"\nSo, that means you just say, “Okay, these are the different functions that you can call from other languages, that are exposed in my library.” And then from different languages you will have these functions are exposed, and then you just will interact or intercommunicate with this library quite easily. So, at the end you will have one library made in whatever language, compiling to WebAssembly, and then you will reuse that library in any other language as if it was a native library for that language. So, you don’t need to worry about converting types or anything that.","position":{"start":{"line":243,"column":11,"offset":29447},"end":{"line":244,"column":575,"offset":30022}}}],"position":{"start":{"line":243,"column":1,"offset":29437},"end":{"line":244,"column":575,"offset":30022}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":246,"column":3,"offset":30026},"end":{"line":246,"column":10,"offset":30033}}}],"position":{"start":{"line":246,"column":1,"offset":30024},"end":{"line":246,"column":12,"offset":30035}}},{"type":"text","value":"\nGot it, that’s super cool. It’s maybe roughly analogous to how, in the JVM, if I’m writing Java code, I can use a library that’s written in Closure, or Kotlin, or something else that compiles down to JVM bytecode.","position":{"start":{"line":246,"column":12,"offset":30035},"end":{"line":247,"column":214,"offset":30249}}}],"position":{"start":{"line":246,"column":1,"offset":30024},"end":{"line":247,"column":214,"offset":30249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":249,"column":3,"offset":30253},"end":{"line":249,"column":9,"offset":30259}}}],"position":{"start":{"line":249,"column":1,"offset":30251},"end":{"line":249,"column":11,"offset":30261}}},{"type":"text","value":"\nYes, t’s funny that you mentioned the JVM, there is actually one initiative that is coming from Oracle called GraalVM, and it’s super interesting. Basically, you know that Java has been always slow to startup, because you have to warm up and basically it’s a little bit slower to startup. And that’s fine because their long term performance is super awesome, but the main thing is, right now, basically Oracle’s investing a lot of time to be able to pre-compile these jars into native code. They did that for basically the Java language with a framework called Truffle, and then they expanded this framework to be only not using Java but also to understand other languages.","position":{"start":{"line":249,"column":11,"offset":30261},"end":{"line":250,"column":674,"offset":30935}}}],"position":{"start":{"line":249,"column":1,"offset":30251},"end":{"line":250,"column":674,"offset":30935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":252,"column":3,"offset":30939},"end":{"line":252,"column":9,"offset":30945}}}],"position":{"start":{"line":252,"column":1,"offset":30937},"end":{"line":252,"column":11,"offset":30947}}},{"type":"text","value":"\nSo, funnily enough, GraalVM actually, right now, lets you use Python to intercommunicate very easily Python with JavaScript, and with Ruby, and with C, and within LLVM, it’s crazy. But, the main thing about GraalVM is, it’s basically like you are tied to Oracle, it’s basically you’re always having the same problem as you were having before with the JVM, which is normally what you want is something that this is standard pushed by all the industry and not by only one player.","position":{"start":{"line":252,"column":11,"offset":30947},"end":{"line":253,"column":478,"offset":31425}}}],"position":{"start":{"line":252,"column":1,"offset":30937},"end":{"line":253,"column":478,"offset":31425}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":255,"column":3,"offset":31429},"end":{"line":255,"column":10,"offset":31436}}}],"position":{"start":{"line":255,"column":1,"offset":31427},"end":{"line":255,"column":12,"offset":31438}}},{"type":"text","value":"\nYeah, that makes sense. So, the selling point of WASM and Wasmer over that is, I get all the portability of the JVM but faster startup times, and also I can use non JVM languages as well.","position":{"start":{"line":255,"column":12,"offset":31438},"end":{"line":256,"column":188,"offset":31626}}}],"position":{"start":{"line":255,"column":1,"offset":31427},"end":{"line":256,"column":188,"offset":31626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":258,"column":3,"offset":31630},"end":{"line":258,"column":9,"offset":31636}}}],"position":{"start":{"line":258,"column":1,"offset":31628},"end":{"line":258,"column":11,"offset":31638}}},{"type":"text","value":"\nYeah, and basically you can use whatever you want. One of the things that I think, it was hard for the JVM to basically conquer the whole world, it was a lot adoption on the language side. Basically, if you were using Python in Java, you can not use the ","position":{"start":{"line":258,"column":11,"offset":31638},"end":{"line":259,"column":255,"offset":31893}}},{"type":"text","value":"[crosstalk 00:33:50]","position":{"start":{"line":259,"column":256,"offset":31894},"end":{"line":259,"column":274,"offset":31912}}},{"type":"text","value":". And that means, you will have some compatibility issues, hopefully not, but there probably will be some especially if you’re a big company. So, that issue of not being able to use already existing ecosystems, I think was a deterring factor for the adoption of the JVM.","position":{"start":{"line":259,"column":275,"offset":31913},"end":{"line":259,"column":545,"offset":32183}}}],"position":{"start":{"line":258,"column":1,"offset":31628},"end":{"line":259,"column":545,"offset":32183}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":261,"column":3,"offset":32187},"end":{"line":261,"column":10,"offset":32194}}}],"position":{"start":{"line":261,"column":1,"offset":32185},"end":{"line":261,"column":12,"offset":32196}}},{"type":"text","value":"\nYeah. Now, why is it that the JVM ran into those adoption issues among other languages, but WASM isn’t going to run into those same issues. Is it some design choice in the runtime or…","position":{"start":{"line":261,"column":12,"offset":32196},"end":{"line":262,"column":186,"offset":32382}}}],"position":{"start":{"line":261,"column":1,"offset":32185},"end":{"line":262,"column":186,"offset":32382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":264,"column":3,"offset":32386},"end":{"line":264,"column":9,"offset":32392}}}],"position":{"start":{"line":264,"column":1,"offset":32384},"end":{"line":264,"column":11,"offset":32394}}},{"type":"text","value":"\nSo, it’s more about the choices of the people working on these companies did, what they wanted is to keep people, almost everyone on their ecosystem. So, when you want to basically capture people and don’t let them out, what you do is you encourage them to use proprietary things rather than things that already. Why? Because you have more control over them. But, this on the long term is actually resulting to the negative, at the end what is always good is using or reusing things that already exist. So, that means that JVM at the beginning, they did something to understand basically LLVM and Bitcode, for example, that could have been a very, very big win for them, but they didn’t have the incentives to do it because they wanted to capture and keep people within their ecosystem, not going somewhere else.","position":{"start":{"line":264,"column":11,"offset":32394},"end":{"line":265,"column":813,"offset":33207}}}],"position":{"start":{"line":264,"column":1,"offset":32384},"end":{"line":265,"column":813,"offset":33207}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":267,"column":3,"offset":33211},"end":{"line":267,"column":10,"offset":33218}}}],"position":{"start":{"line":267,"column":1,"offset":33209},"end":{"line":267,"column":12,"offset":33220}}},{"type":"text","value":"\nGot it. So, it’s like Oracle owns the JVM runtimes, or at least the ones that are popularly in use in most companies, and so they want to preserve control over that, Whereas, WebAssembly it started its life as this open standard, and there’s many different implementations of that standard right now, so you don’t have to worry about lock-in as much.","position":{"start":{"line":267,"column":12,"offset":33220},"end":{"line":268,"column":351,"offset":33571}}}],"position":{"start":{"line":267,"column":1,"offset":33209},"end":{"line":268,"column":351,"offset":33571}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":270,"column":3,"offset":33575},"end":{"line":270,"column":9,"offset":33581}}}],"position":{"start":{"line":270,"column":1,"offset":33573},"end":{"line":270,"column":11,"offset":33583}}},{"type":"text","value":"\nYeah, it’s not just lock-in, basically you can reuse software that already exist. You can reuse the Python in WebAssembly, which is awesome, you don’t need to create that Python for WebAssembly explicit. And that’s a very big win because that means you will get the same kind of errors, the same issues, the same thing that you get in the normal Python. So, you don’t need to spend time worrying about, “Okay why this in this environment is behaving this very weird way, when actually I was expecting this other thing?” So, use the same software.","position":{"start":{"line":270,"column":11,"offset":33583},"end":{"line":271,"column":547,"offset":34130}}}],"position":{"start":{"line":270,"column":1,"offset":33573},"end":{"line":271,"column":547,"offset":34130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":273,"column":3,"offset":34134},"end":{"line":273,"column":10,"offset":34141}}}],"position":{"start":{"line":273,"column":1,"offset":34132},"end":{"line":273,"column":12,"offset":34143}}},{"type":"text","value":"\nAs someone who had to run some Jython code back in the day, I can vouch for the pain, that extra layer of… Well, it’s not indirection it’s just the realization that what you’re running is not actually Python it’s something different, and so if you Google for error messages or you try to debug something, you can’t really reuse any of the existing corpus of information. Okay, cool. Yeah, that makes sense. So, we’ve talked a bit about Wasmer and WASM as compared to the JVM, I think another comp that people make is to another technology which is Docker, or more generally LXC and Containers. Can you talk about the comparisons and contrasts between WebAssembly and what Containers allow you to do, because with Containers they also had this early selling point of, write any language, run in any environment, it’s portable, it’s lightweight, et cetera, et cetera.","position":{"start":{"line":273,"column":12,"offset":34143},"end":{"line":274,"column":868,"offset":35011}}}],"position":{"start":{"line":273,"column":1,"offset":34132},"end":{"line":274,"column":868,"offset":35011}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":276,"column":3,"offset":35015},"end":{"line":276,"column":9,"offset":35021}}}],"position":{"start":{"line":276,"column":1,"offset":35013},"end":{"line":276,"column":11,"offset":35023}}},{"type":"text","value":"\nYes, so it’s funny that you say that, because actually the Containers are not really that much portable. So, I mean, when you create a Container that works in your X86 machine, which is normally the chipset that you have in your laptop. These Container will not work natively in that era machine, that means the Containers are chipset dependent, but not only that, both Docker Containers and LXC Containers depend on having a Linux operating system under here. So, even if you’re running Docker on Mac, you’re actually, Docker in Mac is running a Linux VM, is under this Linux VM where you learn where you run the Containers.","position":{"start":{"line":276,"column":11,"offset":35023},"end":{"line":277,"column":626,"offset":35649}}}],"position":{"start":{"line":276,"column":1,"offset":35013},"end":{"line":277,"column":626,"offset":35649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":279,"column":3,"offset":35653},"end":{"line":279,"column":9,"offset":35659}}}],"position":{"start":{"line":279,"column":1,"offset":35651},"end":{"line":279,"column":11,"offset":35661}}},{"type":"text","value":"\nAnd the same for LXC. LXC actually have a kernel integration, you need a Linux kernel integration and you cannot, for example, run LXC in Windows or a Mac. So, this is one of the first realizations, but I will say the main would be one is, we have to Containers, the ones that are used until now, that are the operating system-based Containers. Basically you scale things thinking on machines, basically how many machines, how many VMs I’m going to have running this code.","position":{"start":{"line":279,"column":11,"offset":35661},"end":{"line":280,"column":473,"offset":36134}}}],"position":{"start":{"line":279,"column":1,"offset":35651},"end":{"line":280,"column":473,"offset":36134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":282,"column":3,"offset":36138},"end":{"line":282,"column":9,"offset":36144}}}],"position":{"start":{"line":282,"column":1,"offset":36136},"end":{"line":282,"column":11,"offset":36146}}},{"type":"text","value":"\nYou think of that because, actually, there is a entity called the operating system that actually lives in each of these machines. In the case of Wasmer or WebAssembly, you’re going to have operating system-based containers, what you have is application-based containers. And when you remove all the overhead that, actually, you require for running operating system, then you end up with a much lighter Container. It’s much lighter in two ways. One, is because the Containers are actually much more lightweight, they’re basically smaller in size. On the other part that actually it’s a very good selling point for WebAssembly.","position":{"start":{"line":282,"column":11,"offset":36146},"end":{"line":283,"column":626,"offset":36772}}}],"position":{"start":{"line":282,"column":1,"offset":36136},"end":{"line":283,"column":626,"offset":36772}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":285,"column":3,"offset":36776},"end":{"line":285,"column":9,"offset":36782}}}],"position":{"start":{"line":285,"column":1,"offset":36774},"end":{"line":285,"column":11,"offset":36784}}},{"type":"text","value":"\nIt’s that the startup times are actually quite quick compared to Docker Containers or LXC. And the main reason for that is, when you have a Container that it’s a operating system-based Container, when you start up that actually you have to run a lot of things from the operating system just to start. And these in the best of the cases, really on the best of the cases, when for example you use Firecracker, which is very fast runtime for Containers created by Amazon. In the best of the case you can get 150 milliseconds off a startup time. When you remove all this overhead, then you can end up with much smaller Containers, and also you can get the Containers that can have a much faster startup speed.","position":{"start":{"line":285,"column":11,"offset":36784},"end":{"line":286,"column":706,"offset":37490}}}],"position":{"start":{"line":285,"column":1,"offset":36774},"end":{"line":286,"column":706,"offset":37490}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":288,"column":3,"offset":37494},"end":{"line":288,"column":9,"offset":37500}}}],"position":{"start":{"line":288,"column":1,"offset":37492},"end":{"line":288,"column":11,"offset":37502}}},{"type":"text","value":"\nSo, that means WAVM is starting this Container at 150 milliseconds, the Container will start in 50 nanoseconds. And this, when you’re running a lot of Containers actually matters, but I will say it mainly matters because there are new trends that are coming, that we all can think or believe are going to become important, like serverless. And right now we are trying to basically shape serverless, trying to adapt into a structure actually ","position":{"start":{"line":288,"column":11,"offset":37502},"end":{"line":289,"column":442,"offset":37944}}},{"type":"text","value":"[inaudible 00:40:32]","position":{"start":{"line":289,"column":443,"offset":37945},"end":{"line":289,"column":461,"offset":37963}}},{"type":"text","value":" that match the match.","position":{"start":{"line":289,"column":462,"offset":37964},"end":{"line":289,"column":484,"offset":37986}}}],"position":{"start":{"line":288,"column":1,"offset":37492},"end":{"line":289,"column":484,"offset":37986}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":291,"column":3,"offset":37990},"end":{"line":291,"column":9,"offset":37996}}}],"position":{"start":{"line":291,"column":1,"offset":37988},"end":{"line":291,"column":11,"offset":37998}}},{"type":"text","value":"\nSo, the main reason for that is, right now, even in serverless you can use operating system-based Containers like Docker, but the main issue there is, because the startup time is at least 150 milliseconds, you cannot start up with a Container per HTTP request, for example, if you want. You actually need to use ","position":{"start":{"line":291,"column":11,"offset":37998},"end":{"line":292,"column":313,"offset":38311}}},{"type":"text","value":"[inaudible 00:40:56]","position":{"start":{"line":292,"column":314,"offset":38312},"end":{"line":292,"column":332,"offset":38330}}},{"type":"text","value":", the cold approach and the hot approach. That means what happens if a Container get requests very frequently and what happens if not. And this is not optimal, but with WebAssembly you can actually startup a Container per request. Doesn’t have almost any overhead, and that I think is a very big win.","position":{"start":{"line":292,"column":333,"offset":38331},"end":{"line":292,"column":633,"offset":38631}}}],"position":{"start":{"line":291,"column":1,"offset":37988},"end":{"line":292,"column":633,"offset":38631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":294,"column":3,"offset":38635},"end":{"line":294,"column":9,"offset":38641}}}],"position":{"start":{"line":294,"column":1,"offset":38633},"end":{"line":294,"column":11,"offset":38643}}},{"type":"text","value":"\nAnd they have to end, for me the last important thing that I think is going to become very relevant, especially on the next year, is the Moodle platform side. Right now, if you want to run Docker on Windows, or if you want to run Docker on Mac, you need to have a Linux VM unloader kit, which basically that’s overhead. I’d say for LXC, basically LXC is you need kernel integration, and not just that, so that means they’re not only chipset dependent but are also platform dependent. In the case of WebAssembly, you can have one Container that will work exactly the same way in Windows, that will work exactly the same way on Mac or on Linux, and at the same time it will work exactly the same way in Linux X86. Basically in your normal tips that you have on servers, and it will work in ARM. And family fact, why this is important. We all know that, for example, right now Apple is moving into ARM, into the apple cycle.","position":{"start":{"line":294,"column":11,"offset":38643},"end":{"line":295,"column":922,"offset":39565}}}],"position":{"start":{"line":294,"column":1,"offset":38633},"end":{"line":295,"column":922,"offset":39565}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":297,"column":3,"offset":39569},"end":{"line":297,"column":9,"offset":39575}}}],"position":{"start":{"line":297,"column":1,"offset":39567},"end":{"line":297,"column":11,"offset":39577}}},{"type":"text","value":"\nSo, right now we know there are tons of developers that are using Apple laptops actually to develop. What do you think will happen when these developers, actually, will try to use Docker Containers on their Mac? They will see the performance decreased by four to five, and that’s very bad because, actually, their experience will be much, much worse. And the main reason is because actually what they will be doing is emulating an X86 machine into their ARM chipset.","position":{"start":{"line":297,"column":11,"offset":39577},"end":{"line":298,"column":467,"offset":40044}}}],"position":{"start":{"line":297,"column":1,"offset":39567},"end":{"line":298,"column":467,"offset":40044}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":300,"column":3,"offset":40048},"end":{"line":300,"column":9,"offset":40054}}}],"position":{"start":{"line":300,"column":1,"offset":40046},"end":{"line":300,"column":11,"offset":40056}}},{"type":"text","value":"\nSo, I mean, basically they’re emulating, this is not going to be fast. In our case we pre-compile it, we compile this WebAssembly code into whatever chipset and platform you’re using. So, that means you don’t need to worry about just running a faster speed, because you will always run cold on process that’s been available in your chipset.","position":{"start":{"line":300,"column":11,"offset":40056},"end":{"line":301,"column":341,"offset":40397}}}],"position":{"start":{"line":300,"column":1,"offset":40046},"end":{"line":301,"column":341,"offset":40397}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":303,"column":3,"offset":40401},"end":{"line":303,"column":10,"offset":40408}}}],"position":{"start":{"line":303,"column":1,"offset":40399},"end":{"line":303,"column":12,"offset":40410}}},{"type":"text","value":"\nYeah, that’s a that’s actually an angle I hadn’t even thought of before. If companies Apple are moving to ARM you’re going to have this bifurcation of ARM and X86.","position":{"start":{"line":303,"column":12,"offset":40410},"end":{"line":304,"column":164,"offset":40574}}}],"position":{"start":{"line":303,"column":1,"offset":40399},"end":{"line":304,"column":164,"offset":40574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":306,"column":3,"offset":40578},"end":{"line":306,"column":9,"offset":40584}}}],"position":{"start":{"line":306,"column":1,"offset":40576},"end":{"line":306,"column":11,"offset":40586}}},{"type":"text","value":"\nYeah, and even before, even we don’t look at that. Even if we look at what software is created for Linux that cannot run in Mac, or software that is created in one Linux distribution, but cannot run in the other Linux distribution, which actually is very lame but it happens. So, we remove all these things, we can have actually a universal store that will give us binaries that will work everywhere.","position":{"start":{"line":306,"column":11,"offset":40586},"end":{"line":307,"column":401,"offset":40987}}}],"position":{"start":{"line":306,"column":1,"offset":40576},"end":{"line":307,"column":401,"offset":40987}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":309,"column":3,"offset":40991},"end":{"line":309,"column":10,"offset":40998}}}],"position":{"start":{"line":309,"column":1,"offset":40989},"end":{"line":309,"column":12,"offset":41000}}},{"type":"text","value":"\nYeah, that’s actually one of the big selling points of Go, which is a programming language I use quite often, just the ease of cross compilation to different platforms. But, the issue with that is that it works as long as you’re using Go, but as soon as you want to use another language you obviously can’t use the Go compiler to create portability for non Go language.","position":{"start":{"line":309,"column":12,"offset":41000},"end":{"line":310,"column":370,"offset":41370}}}],"position":{"start":{"line":309,"column":1,"offset":40989},"end":{"line":310,"column":370,"offset":41370}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":312,"column":3,"offset":41374},"end":{"line":312,"column":9,"offset":41380}}}],"position":{"start":{"line":312,"column":1,"offset":41372},"end":{"line":312,"column":11,"offset":41382}}},{"type":"text","value":"\nYeah, but-","position":{"start":{"line":312,"column":11,"offset":41382},"end":{"line":313,"column":11,"offset":41393}}}],"position":{"start":{"line":312,"column":1,"offset":41372},"end":{"line":313,"column":11,"offset":41393}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":315,"column":3,"offset":41397},"end":{"line":315,"column":10,"offset":41404}}}],"position":{"start":{"line":315,"column":1,"offset":41395},"end":{"line":315,"column":12,"offset":41406}}},{"type":"text","value":"\nOkay, so you’ve talked… Sorry, go ahead.","position":{"start":{"line":315,"column":12,"offset":41406},"end":{"line":316,"column":43,"offset":41449}}}],"position":{"start":{"line":315,"column":1,"offset":41395},"end":{"line":316,"column":43,"offset":41449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":318,"column":3,"offset":41453},"end":{"line":318,"column":9,"offset":41459}}}],"position":{"start":{"line":318,"column":1,"offset":41451},"end":{"line":318,"column":11,"offset":41461}}},{"type":"text","value":"\nNo, I was going to say that in the case of GO, you can actually create binaries for a lot of platforms, or in the case of LLVM is also quite similar. But, the main difference there is actually, you have to maintain, you have to distribute all these different binaries for all these different platforms that you want to support. Ideally, you just distribute one binary and forget.","position":{"start":{"line":318,"column":11,"offset":41461},"end":{"line":319,"column":380,"offset":41841}}}],"position":{"start":{"line":318,"column":1,"offset":41451},"end":{"line":319,"column":380,"offset":41841}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":321,"column":3,"offset":41845},"end":{"line":321,"column":10,"offset":41852}}}],"position":{"start":{"line":321,"column":1,"offset":41843},"end":{"line":321,"column":12,"offset":41854}}},{"type":"text","value":"\nYeah, that’s fair. So, you’ve talked about portability, you’ve talked about startup time, but surely there must be a trade off here because you’re introducing a another layer of indirection, which is the WebAssembly runtime, Wasmer in this case. What about the performance in the warm state? Presumably it’s no faster than running natively, so what performance hit are we talking about here?","position":{"start":{"line":321,"column":12,"offset":41854},"end":{"line":322,"column":392,"offset":42246}}}],"position":{"start":{"line":321,"column":1,"offset":41843},"end":{"line":322,"column":392,"offset":42246}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":324,"column":3,"offset":42250},"end":{"line":324,"column":9,"offset":42256}}}],"position":{"start":{"line":324,"column":1,"offset":42248},"end":{"line":324,"column":11,"offset":42258}}},{"type":"text","value":"\nSo, in general, basically what we are doing is what Web-Assembly VMs are doing, are compiling these WebAssembly code to machine code. The thing is, in general, when you have this level of abstraction, there is always some overhead. In the case of Wasmer we have multiple compilers, and in our basically server-side recommended tier, we are using LLVM. So, the cool thing about that is we can reach almost native speeds, the overhead is around five to 10% slower, but there is one catch here, which is actually sometimes it’s even faster.","position":{"start":{"line":324,"column":11,"offset":42258},"end":{"line":325,"column":538,"offset":42796}}}],"position":{"start":{"line":324,"column":1,"offset":42248},"end":{"line":325,"column":538,"offset":42796}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":327,"column":3,"offset":42800},"end":{"line":327,"column":9,"offset":42806}}}],"position":{"start":{"line":327,"column":1,"offset":42798},"end":{"line":327,"column":11,"offset":42808}}},{"type":"text","value":"\nSo, we have one person that he was basically benchmarking bcp and tar compression, and ","position":{"start":{"line":327,"column":11,"offset":42808},"end":{"line":328,"column":88,"offset":42896}}},{"type":"text","value":"[inaudible 00:45:54]","position":{"start":{"line":328,"column":89,"offset":42897},"end":{"line":328,"column":107,"offset":42915}}},{"type":"text","value":" compression, and it was comparing the native ones versus the WebAssembly ones. And basically this person, so our head of… And one test was 6%, in other was 8%, in other it was 9%, and in other was -30%. That means Wasmer was 30% faster than Native. And you will ask why the fuck the habits? And the main reason is- ","position":{"start":{"line":328,"column":108,"offset":42916},"end":{"line":328,"column":426,"offset":43234}}},{"type":"text","value":"[crosstalk 00:46:23]","position":{"start":{"line":328,"column":427,"offset":43235},"end":{"line":328,"column":445,"offset":43253}}},{"type":"text","value":".","position":{"start":{"line":328,"column":446,"offset":43254},"end":{"line":328,"column":447,"offset":43255}}}],"position":{"start":{"line":327,"column":1,"offset":42798},"end":{"line":328,"column":447,"offset":43255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":330,"column":3,"offset":43259},"end":{"line":330,"column":10,"offset":43266}}}],"position":{"start":{"line":330,"column":1,"offset":43257},"end":{"line":330,"column":12,"offset":43268}}},{"type":"text","value":"\n","position":{"start":{"line":330,"column":12,"offset":43268},"end":{"line":331,"column":1,"offset":43269}}},{"type":"text","value":"[crosstalk 00:46:23]","position":{"start":{"line":331,"column":2,"offset":43270},"end":{"line":331,"column":20,"offset":43288}}},{"type":"text","value":".","position":{"start":{"line":331,"column":21,"offset":43289},"end":{"line":331,"column":22,"offset":43290}}}],"position":{"start":{"line":330,"column":1,"offset":43257},"end":{"line":331,"column":22,"offset":43290}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":333,"column":3,"offset":43294},"end":{"line":333,"column":9,"offset":43300}}}],"position":{"start":{"line":333,"column":1,"offset":43292},"end":{"line":333,"column":11,"offset":43302}}},{"type":"text","value":"\nNo, it is because WebAssembly started beat, actually the pointers are smaller, and when the pointers is smaller you can do some opening of the ","position":{"start":{"line":333,"column":11,"offset":43302},"end":{"line":334,"column":144,"offset":43446}}},{"type":"text","value":"[inaudible 00:46:33]","position":{"start":{"line":334,"column":145,"offset":43447},"end":{"line":334,"column":163,"offset":43465}}},{"type":"text","value":" on the cheap side that you cannot do on the 64bit machines. So, it means that sometimes you can even end with faster, perhaps.","position":{"start":{"line":334,"column":164,"offset":43466},"end":{"line":334,"column":291,"offset":43593}}}],"position":{"start":{"line":333,"column":1,"offset":43292},"end":{"line":334,"column":291,"offset":43593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":336,"column":3,"offset":43597},"end":{"line":336,"column":10,"offset":43604}}}],"position":{"start":{"line":336,"column":1,"offset":43595},"end":{"line":336,"column":12,"offset":43606}}},{"type":"text","value":"\nWow, that’s crazy. Another topic that comes up in discussions I’ve seen about WebAssembly was Docker is the security topic, and there’s been a lot of discussion around Docker security in general. I’ve been privy to a lot of these discussions about Docker defaults to running as root, and it’s actually quite easy to break out of the sandbox if you know what you’re doing. Can you talk a talk about how WebAssembly and Wasmer compares to that?","position":{"start":{"line":336,"column":12,"offset":43606},"end":{"line":337,"column":443,"offset":44049}}}],"position":{"start":{"line":336,"column":1,"offset":43595},"end":{"line":337,"column":443,"offset":44049}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":339,"column":3,"offset":44053},"end":{"line":339,"column":9,"offset":44059}}}],"position":{"start":{"line":339,"column":1,"offset":44051},"end":{"line":339,"column":11,"offset":44061}}},{"type":"text","value":"\nYeah, in one side I will say that, actually, LXC solves that very elegantly. So, you don’t actually need to run LXC into, or you’re going to run LXC Containers in a unprivileged way. But, in the case of Docker, basically Docker just release everything to operating system, that means the bindings between the Docker Container and the operating system are minimum, are basically just transparent.","position":{"start":{"line":339,"column":11,"offset":44061},"end":{"line":340,"column":396,"offset":44457}}}],"position":{"start":{"line":339,"column":1,"offset":44051},"end":{"line":340,"column":396,"offset":44457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":342,"column":3,"offset":44461},"end":{"line":342,"column":9,"offset":44467}}}],"position":{"start":{"line":342,"column":1,"offset":44459},"end":{"line":342,"column":11,"offset":44469}}},{"type":"text","value":"\nAnd that means, when you don’t do any effort to sandbox it as a middleman, then these things can happen. In the case of LXC they do actually things more smartly when overlaying system calls to the operating system. So, that means they can assure that the system calls you want to do, we have the right to do that.","position":{"start":{"line":342,"column":11,"offset":44469},"end":{"line":343,"column":314,"offset":44783}}}],"position":{"start":{"line":342,"column":1,"offset":44459},"end":{"line":343,"column":314,"offset":44783}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":345,"column":3,"offset":44787},"end":{"line":345,"column":9,"offset":44793}}}],"position":{"start":{"line":345,"column":1,"offset":44785},"end":{"line":345,"column":11,"offset":44795}}},{"type":"text","value":"\nSo, this is in the case of Docker versus LXC, but in the case of Docker versus Wasmer, the main difference is actually in the WebAssembly world. When you run WebAssembly programs or WebAssembly modules, you actually have to be explicit about what kind of functions this program can access. So, that means, but that by default a WebAssembly program cannot have any interaction with the host, basically cannot call any function in the house. So, that means, by default, if you want to open a file, open socket or, I don’t know, do something dangerous. Whatever you’re trying to do will not be exposed, and if you want to be exposed, if you want to expose that function, then you have to be explicit about it. So. that’s the first layer.","position":{"start":{"line":345,"column":11,"offset":44795},"end":{"line":346,"column":735,"offset":45530}}}],"position":{"start":{"line":345,"column":1,"offset":44785},"end":{"line":346,"column":735,"offset":45530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":348,"column":3,"offset":45534},"end":{"line":348,"column":9,"offset":45540}}}],"position":{"start":{"line":348,"column":1,"offset":45532},"end":{"line":348,"column":11,"offset":45542}}},{"type":"text","value":"\nThe other part is, Web Assembly by default is secure, and it’s secure because it separates what is the executable code from the data. And why is this important? Sometimes in C you can actually compile code that given a raw pointer, that means a raw direction of data, will be able to call that function, will basically be able to call a direction of memory as if it was a function. In the WebAssembly that’s impossible. In the case of WebAssembly, if you want to call a function you have to follow the function call, either a call or call indirect. But, you cannot call into an explicit part of the memory, that is basically just data not executable.","position":{"start":{"line":348,"column":11,"offset":45542},"end":{"line":349,"column":651,"offset":46193}}}],"position":{"start":{"line":348,"column":1,"offset":45532},"end":{"line":349,"column":651,"offset":46193}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":351,"column":3,"offset":46197},"end":{"line":351,"column":9,"offset":46203}}}],"position":{"start":{"line":351,"column":1,"offset":46195},"end":{"line":351,"column":11,"offset":46205}}},{"type":"text","value":"\nSo, on one side you have executable memory, which is where you put the functions, and the other side you have data memory, that is where you put the data, and both are completely separate. So, given the data memory, you cannot try to call a function there, because WebAssembly will or, and that’s something that you can do in the C world or in the Native world that anomaly. So, that’s another big distinction that you can… Basically you’re more protected on the WebAssembly space.","position":{"start":{"line":351,"column":11,"offset":46205},"end":{"line":352,"column":484,"offset":46689}}}],"position":{"start":{"line":351,"column":1,"offset":46195},"end":{"line":352,"column":484,"offset":46689}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":354,"column":3,"offset":46693},"end":{"line":354,"column":10,"offset":46700}}}],"position":{"start":{"line":354,"column":1,"offset":46691},"end":{"line":354,"column":12,"offset":46702}}},{"type":"text","value":"\nYeah, that’s pretty interesting. Yeah, I just saw this tweet that I saw a while back, it was from Solomon Hykes, the founder of Docker. He said something to the effect of, “If WebAssembly had existed and it was as mature as it is now when Docker was created, there would have been no reason to create Docker.”","position":{"start":{"line":354,"column":12,"offset":46702},"end":{"line":355,"column":310,"offset":47012}}}],"position":{"start":{"line":354,"column":1,"offset":46691},"end":{"line":355,"column":310,"offset":47012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":357,"column":3,"offset":47016},"end":{"line":357,"column":9,"offset":47022}}}],"position":{"start":{"line":357,"column":1,"offset":47014},"end":{"line":357,"column":11,"offset":47024}}},{"type":"text","value":"\nCreate Docker.","position":{"start":{"line":357,"column":11,"offset":47024},"end":{"line":358,"column":15,"offset":47039}}}],"position":{"start":{"line":357,"column":1,"offset":47014},"end":{"line":358,"column":15,"offset":47039}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":360,"column":3,"offset":47043},"end":{"line":360,"column":10,"offset":47050}}}],"position":{"start":{"line":360,"column":1,"offset":47041},"end":{"line":360,"column":12,"offset":47052}}},{"type":"text","value":"\nAre you familiar with that tweet?","position":{"start":{"line":360,"column":12,"offset":47052},"end":{"line":361,"column":34,"offset":47086}}}],"position":{"start":{"line":360,"column":1,"offset":47041},"end":{"line":361,"column":34,"offset":47086}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":363,"column":3,"offset":47090},"end":{"line":363,"column":9,"offset":47096}}}],"position":{"start":{"line":363,"column":1,"offset":47088},"end":{"line":363,"column":11,"offset":47098}}},{"type":"text","value":"\nYes, that’s funny because, actually, when I started Wasmer we got one small investment, and then this investor introduced us to someone. And since January I was basically talking with Solomon and trying to see if, basically, he could invest in Wasmer. It took him some months to realize, basically, the power behind WebAssembly. And then, almost at the same time that he tweeted, “Oh, if WebAssembly existed when I created Docker I will not create the Docker, basically, I would’ve upgraded something different.”","position":{"start":{"line":363,"column":11,"offset":47098},"end":{"line":364,"column":513,"offset":47611}}}],"position":{"start":{"line":363,"column":1,"offset":47088},"end":{"line":364,"column":513,"offset":47611}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":366,"column":3,"offset":47615},"end":{"line":366,"column":9,"offset":47621}}}],"position":{"start":{"line":366,"column":1,"offset":47613},"end":{"line":366,"column":11,"offset":47623}}},{"type":"text","value":"\nAnd that isn’t at this moment, actually, he also decided to invest in the company, which was obviously good, because then, again, basically when you’re creating a startup and when you’re trying to raise money. Basically having validation from someone that have created some something that that became big, that’s a good validation point. So, that was very, very good for us.","position":{"start":{"line":366,"column":11,"offset":47623},"end":{"line":367,"column":375,"offset":47998}}}],"position":{"start":{"line":366,"column":1,"offset":47613},"end":{"line":367,"column":375,"offset":47998}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":369,"column":3,"offset":48002},"end":{"line":369,"column":10,"offset":48009}}}],"position":{"start":{"line":369,"column":1,"offset":48000},"end":{"line":369,"column":12,"offset":48011}}},{"type":"text","value":"\nYeah, I want to dig into that more. From your perspective, do you think that Wasmer will supplant Docker or LXC is the go to, shall we say, virtualization technology or deployment technology for most server-side workloads in the next five to 10 years or so?","position":{"start":{"line":369,"column":12,"offset":48011},"end":{"line":370,"column":258,"offset":48269}}}],"position":{"start":{"line":369,"column":1,"offset":48000},"end":{"line":370,"column":258,"offset":48269}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":372,"column":3,"offset":48273},"end":{"line":372,"column":9,"offset":48279}}}],"position":{"start":{"line":372,"column":1,"offset":48271},"end":{"line":372,"column":11,"offset":48281}}},{"type":"text","value":"\nI believe so. That’s that’s why I’m betting very, very big on Wasmer. I think having a universal platform or a universal format that basically any computer, any chipset, any platform can understand. The advantage of that are super, super big. So, I believe basically that’s going to be the way that we are going to run software in the future. Why? Because if sandbox by default this multi-platform is universal and is fast. So, when you put all these things together you’re like, “Okay, why would you not use that?”","position":{"start":{"line":372,"column":11,"offset":48281},"end":{"line":373,"column":516,"offset":48797}}}],"position":{"start":{"line":372,"column":1,"offset":48271},"end":{"line":373,"column":516,"offset":48797}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":375,"column":3,"offset":48801},"end":{"line":375,"column":10,"offset":48808}}}],"position":{"start":{"line":375,"column":1,"offset":48799},"end":{"line":375,"column":12,"offset":48810}}},{"type":"text","value":"\nDo you think there will be a Kubernetes for the WASM ecosystem, or do you think Kubernetes will just extend itself to accommodate WASM-based Containers, or what are your thoughts on that?","position":{"start":{"line":375,"column":12,"offset":48810},"end":{"line":376,"column":188,"offset":48998}}}],"position":{"start":{"line":375,"column":1,"offset":48799},"end":{"line":376,"column":188,"offset":48998}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":378,"column":3,"offset":49002},"end":{"line":378,"column":9,"offset":49008}}}],"position":{"start":{"line":378,"column":1,"offset":49000},"end":{"line":378,"column":11,"offset":49010}}},{"type":"text","value":"\nI have very peculiar thoughts, first, because where the future of Wasmer as the company actually goes more on the infrastructure side of WebAssembly.","position":{"start":{"line":378,"column":11,"offset":49010},"end":{"line":379,"column":150,"offset":49160}}}],"position":{"start":{"line":378,"column":1,"offset":49000},"end":{"line":379,"column":150,"offset":49160}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":381,"column":3,"offset":49164},"end":{"line":381,"column":10,"offset":49171}}}],"position":{"start":{"line":381,"column":1,"offset":49162},"end":{"line":381,"column":12,"offset":49173}}},{"type":"text","value":"\nI see.","position":{"start":{"line":381,"column":12,"offset":49173},"end":{"line":382,"column":7,"offset":49180}}}],"position":{"start":{"line":381,"column":1,"offset":49162},"end":{"line":382,"column":7,"offset":49180}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":384,"column":3,"offset":49184},"end":{"line":384,"column":9,"offset":49190}}}],"position":{"start":{"line":384,"column":1,"offset":49182},"end":{"line":384,"column":11,"offset":49192}}},{"type":"text","value":"\nI will say, that the same way that Docker enabled Kubernetes, that means Kubernetes before Docker didn’t make sense. And Docker created a new set of needs that were not necessary when you were basically orchestrating software before. I think the same way that Docker enable Kubernetes, Wasmer will enable other thing.","position":{"start":{"line":384,"column":11,"offset":49192},"end":{"line":385,"column":318,"offset":49510}}}],"position":{"start":{"line":384,"column":1,"offset":49182},"end":{"line":385,"column":318,"offset":49510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":387,"column":3,"offset":49514},"end":{"line":387,"column":10,"offset":49521}}}],"position":{"start":{"line":387,"column":1,"offset":49512},"end":{"line":387,"column":12,"offset":49523}}},{"type":"text","value":"\nGot it, that’s super interesting. It’s almost like, I look at what The Cloud, Compute players, the AWSs, and Azures, and CloudFlares of the world are doing. And it’s almost like with Kubernetes this layer of abstraction got introduced that prevented them from building their own cloud operating systems, if that makes sense. So, with Kubernetes there’s still some level of stickiness, but it as long as you’re running on Kubernetes it’s, in theory, you can switch between cloud providers. And it’s almost like in the serverless mode, that’s their attempt to leapfrog Kubernetes and build more platform dependent computing API’s that bypass Kubernetes, I wonder if they are all trying to prevent a Kubernetes-like thing from emerging in the WASM ecosystem. It’s just me thinking out loud there.","position":{"start":{"line":387,"column":12,"offset":49523},"end":{"line":388,"column":794,"offset":50317}}}],"position":{"start":{"line":387,"column":1,"offset":49512},"end":{"line":388,"column":794,"offset":50317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":390,"column":3,"offset":50321},"end":{"line":390,"column":9,"offset":50327}}}],"position":{"start":{"line":390,"column":1,"offset":50319},"end":{"line":390,"column":11,"offset":50329}}},{"type":"text","value":"\nYeah, it’s funny, we got all these things when you have ecosystems that already exist, usefully, and you have new emerging technologies that were not existent when they first technologies were created. So, that means WebAssembly ","position":{"start":{"line":390,"column":11,"offset":50329},"end":{"line":391,"column":230,"offset":50559}}},{"type":"text","value":"[inaudible 00:54:36]","position":{"start":{"line":391,"column":231,"offset":50560},"end":{"line":391,"column":249,"offset":50578}}},{"type":"text","value":" when Kubernetes was created. So, what then doing is, you’re then trying to adapt to Kubernetes to able to run WebAssembly which, for example, Microsoft is trying to do right now.","position":{"start":{"line":391,"column":250,"offset":50579},"end":{"line":391,"column":429,"offset":50758}}}],"position":{"start":{"line":390,"column":1,"offset":50319},"end":{"line":391,"column":429,"offset":50758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":393,"column":3,"offset":50762},"end":{"line":393,"column":9,"offset":50768}}}],"position":{"start":{"line":393,"column":1,"offset":50760},"end":{"line":393,"column":11,"offset":50770}}},{"type":"text","value":"\nI personally think that the way that you should scale WebAssembly software is quite different than the way that your scalable operating system Containers is quite different than the way that you scale application-based Containers. So, even though, actually, you will do these right now, because transitions are important, and you want to make sure right now you’re going to use WebAssembly on your Kubernetes workloads. I don’t think that’s the optimal thing to do on the long term.","position":{"start":{"line":393,"column":11,"offset":50770},"end":{"line":394,"column":483,"offset":51253}}}],"position":{"start":{"line":393,"column":1,"offset":50760},"end":{"line":394,"column":483,"offset":51253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":396,"column":3,"offset":51257},"end":{"line":396,"column":10,"offset":51264}}}],"position":{"start":{"line":396,"column":1,"offset":51255},"end":{"line":396,"column":12,"offset":51266}}},{"type":"text","value":"\nYeah, it makes sense. Can you talk about what themes and areas the Wasmer team is going to be focusing on in the next 6, 12 months?","position":{"start":{"line":396,"column":12,"offset":51266},"end":{"line":397,"column":132,"offset":51398}}}],"position":{"start":{"line":396,"column":1,"offset":51255},"end":{"line":397,"column":132,"offset":51398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":399,"column":3,"offset":51402},"end":{"line":399,"column":9,"offset":51408}}}],"position":{"start":{"line":399,"column":1,"offset":51400},"end":{"line":399,"column":11,"offset":51410}}},{"type":"text","value":"\nSo, what we are trying to do is, we want to empower the community. We want to make sure everyone that wants to use WebAssembly server-side will be able to do that, and right now it is still quite hard. Even though actually Wasmer provides the best experience, WebAssembly itself as a system is still quite young, so that means if you want to compile from Rust to WebAssembly is… I mean, from Rust WebAssembly, I will say, trivial, but if you want to do it from Go it’s not as trivial, or if you want to do it from other languages it’s not as easy.","position":{"start":{"line":399,"column":11,"offset":51410},"end":{"line":400,"column":550,"offset":51960}}}],"position":{"start":{"line":399,"column":1,"offset":51400},"end":{"line":400,"column":550,"offset":51960}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":402,"column":3,"offset":51964},"end":{"line":402,"column":9,"offset":51970}}}],"position":{"start":{"line":402,"column":1,"offset":51962},"end":{"line":402,"column":11,"offset":51972}}},{"type":"text","value":"\nSo, I think lowering that barrier I’m making super easy for people to use WebAssembly server-side. Basically that’s going to be one of our goals of this year, and then on the other side is basically the monetization side. How Wasmer as a company will be able to make money, because we all know Docker itself, even though created a lot of value for a lot of different companies, was not able to capture most of this value. And the main reason is because it’s a runtime, and your users are developers. So, in the guess of Wasmer runtime is, we are hardly going to get any money from this. So, we need to start researching into other ways of revenue, and it’s fine. Actually, we love to have Wasmer a runtime to be completely open-source and not a paid product, but we need to start researching into what are different ways that we can expand our market and that we can become a… If not profitable, at least like a company that is able to prove that there is some interest on the enterprise side.","position":{"start":{"line":402,"column":11,"offset":51972},"end":{"line":403,"column":996,"offset":52968}}}],"position":{"start":{"line":402,"column":1,"offset":51962},"end":{"line":403,"column":996,"offset":52968}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":405,"column":3,"offset":52972},"end":{"line":405,"column":9,"offset":52978}}}],"position":{"start":{"line":405,"column":1,"offset":52970},"end":{"line":405,"column":11,"offset":52980}}},{"type":"text","value":"\nBasically like on that interest being able to launch tools that makes super easy for these enterprises to adopt WebAssembly server-side. So, that’s the things that we want to continue working on, but there is always a part of the community basically giving back, that we are very, very, very big on. I think we need to give back if we want to grow the ecosystem.","position":{"start":{"line":405,"column":11,"offset":52980},"end":{"line":406,"column":363,"offset":53343}}}],"position":{"start":{"line":405,"column":1,"offset":52970},"end":{"line":406,"column":363,"offset":53343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":408,"column":3,"offset":53347},"end":{"line":408,"column":10,"offset":53354}}}],"position":{"start":{"line":408,"column":1,"offset":53345},"end":{"line":408,"column":12,"offset":53356}}},{"type":"text","value":"\nYeah, makes total sense. We’re almost out of time here, but before we go, I wanted to ask, as a last question, if someone is listening to this and they think Wasmer is super interesting and they want to check it out, try it out, what should they do, where should they go?","position":{"start":{"line":408,"column":12,"offset":53356},"end":{"line":409,"column":272,"offset":53628}}}],"position":{"start":{"line":408,"column":1,"offset":53345},"end":{"line":409,"column":272,"offset":53628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":411,"column":3,"offset":53632},"end":{"line":411,"column":9,"offset":53638}}}],"position":{"start":{"line":411,"column":1,"offset":53630},"end":{"line":411,"column":11,"offset":53640}}},{"type":"text","value":"\nSo, we have a website wasmer.io, that actually in this website they can find links to the GitHub project, they can find links to the rapport, or to the team, basically who’s working at Wasmer, they can find links to our blog and basically learn different articles that we publish. Where we compare basically Wasmer versus all runtimes, and where we compare basically what are the different trails that you do when choosing a compiler, and basically our learnings. So, as your ally, I will we recommend people to just go to wasmer.io and sneak there. We also have a Slack community channel that I welcome anyone to join, is slack.wasmer.io.","position":{"start":{"line":411,"column":11,"offset":53640},"end":{"line":412,"column":640,"offset":54280}}}],"position":{"start":{"line":411,"column":1,"offset":53630},"end":{"line":412,"column":640,"offset":54280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":414,"column":3,"offset":54284},"end":{"line":414,"column":9,"offset":54290}}}],"position":{"start":{"line":414,"column":1,"offset":54282},"end":{"line":414,"column":11,"offset":54292}}},{"type":"text","value":"\nAnd basically go there, ask questions, we are super open and we always want to help. We have a lot of different companies and small developers using us, and we want to basically make super easy for you to adopt Wasmer, and if he’s not Wasmer, even adopting WebAssembly. So, if you join our community or you visit our website, or rapport, or have any questions, just open up a issue in GitHub or just write a message on the Slack, and we’ll reply very promptly.","position":{"start":{"line":414,"column":11,"offset":54292},"end":{"line":415,"column":461,"offset":54753}}}],"position":{"start":{"line":414,"column":1,"offset":54282},"end":{"line":415,"column":461,"offset":54753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Beyang:","position":{"start":{"line":417,"column":3,"offset":54757},"end":{"line":417,"column":10,"offset":54764}}}],"position":{"start":{"line":417,"column":1,"offset":54755},"end":{"line":417,"column":12,"offset":54766}}},{"type":"text","value":"\nAwesome. My guest today has been Syrus Akbary. Syrus, thanks for being on the show.","position":{"start":{"line":417,"column":12,"offset":54766},"end":{"line":418,"column":84,"offset":54850}}}],"position":{"start":{"line":417,"column":1,"offset":54755},"end":{"line":418,"column":84,"offset":54850}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Syrus:","position":{"start":{"line":420,"column":3,"offset":54854},"end":{"line":420,"column":9,"offset":54860}}}],"position":{"start":{"line":420,"column":1,"offset":54852},"end":{"line":420,"column":11,"offset":54862}}},{"type":"text","value":"\nThank you very much, Beyang, I really enjoyed chatting today.","position":{"start":{"line":420,"column":11,"offset":54862},"end":{"line":421,"column":62,"offset":54924}}}],"position":{"start":{"line":420,"column":1,"offset":54852},"end":{"line":421,"column":62,"offset":54924}}},{"type":"text","value":"\n"},{"type":"raw","value":"<!-- END TRANSCRIPT -->","position":{"start":{"line":423,"column":1,"offset":54926},"end":{"line":423,"column":24,"offset":54949}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":424,"column":1,"offset":54950}}}}